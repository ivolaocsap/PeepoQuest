{"ast":null,"code":"import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{BigNumber}from'@ethersproject/bignumber';import useDiamondHand from'src/hooks/useDiamondHand';var useRoundInfo=function useRoundInfo(lotteryId){var dh=useDiamondHand();var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),lotteryInfo=_useState2[0],setLotteryInfo=_useState2[1];useEffect(function(){var mounted=true;if(!dh||!lotteryId||lotteryId===0){return;}Promise.all([dh===null||dh===void 0?void 0:dh.LOTTERY.getBasicLottoInfo(lotteryId),dh===null||dh===void 0?void 0:dh.TICKET.getNumberOfTickets(BigNumber.from(lotteryId))]).then(function(_ref){var _ref2=_slicedToArray(_ref,2),lottoRawInfo=_ref2[0],numberOfTickets=_ref2[1];if(!mounted){return;}setLotteryInfo({lotteryId:lottoRawInfo.lotteryID,lotteryStatus:lottoRawInfo.lotteryStatus,prizePool:lottoRawInfo.prizePool,costPerTicket:lottoRawInfo.costPerTicket,prizeDistribution:lottoRawInfo.prizeDistribution,startingTimestamp:lottoRawInfo.startingTimestamp,closingTimestamp:lottoRawInfo.closingTimestamp,winningNumbers:lottoRawInfo.winningNumbers,winners:lottoRawInfo.winners,numberOfTickets:numberOfTickets,prizes:lottoRawInfo.prizes});});return function(){mounted=false;};},[dh,lotteryId]);return lotteryInfo;};export default useRoundInfo;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/views/TicketDetail/hooks/useRoundInfo.ts"],"names":["useEffect","useState","BigNumber","useDiamondHand","useRoundInfo","lotteryId","dh","undefined","lotteryInfo","setLotteryInfo","mounted","Promise","all","LOTTERY","getBasicLottoInfo","TICKET","getNumberOfTickets","from","then","lottoRawInfo","numberOfTickets","lotteryID","lotteryStatus","prizePool","costPerTicket","prizeDistribution","startingTimestamp","closingTimestamp","winningNumbers","winners","prizes"],"mappings":"wJAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OAASC,SAAT,KAA0B,0BAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,SAAD,CAAwB,CAC3C,GAAMC,CAAAA,EAAE,CAAGH,cAAc,EAAzB,CACA,cAAsCF,QAAQ,CAAcM,SAAd,CAA9C,wCAAOC,WAAP,eAAoBC,cAApB,eAEAT,SAAS,CAAC,UAAM,CACd,GAAIU,CAAAA,OAAO,CAAG,IAAd,CACA,GAAI,CAACJ,EAAD,EAAO,CAACD,SAAR,EAAqBA,SAAS,GAAK,CAAvC,CAA0C,CACxC,OACD,CACDM,OAAO,CAACC,GAAR,CAAY,CACVN,EADU,SACVA,EADU,iBACVA,EAAE,CAAEO,OAAJ,CAAYC,iBAAZ,CAA8BT,SAA9B,CADU,CAEVC,EAFU,SAEVA,EAFU,iBAEVA,EAAE,CAAES,MAAJ,CAAWC,kBAAX,CAA8Bd,SAAS,CAACe,IAAV,CAAeZ,SAAf,CAA9B,CAFU,CAAZ,EAGGa,IAHH,CAGQ,cAAqC,kCAAnCC,YAAmC,UAArBC,eAAqB,UAC3C,GAAI,CAACV,OAAL,CAAc,CACZ,OACD,CACDD,cAAc,CAAC,CACbJ,SAAS,CAAEc,YAAY,CAACE,SADX,CAEbC,aAAa,CAAEH,YAAY,CAACG,aAFf,CAGbC,SAAS,CAAEJ,YAAY,CAACI,SAHX,CAIbC,aAAa,CAAEL,YAAY,CAACK,aAJf,CAKbC,iBAAiB,CAAEN,YAAY,CAACM,iBALnB,CAMbC,iBAAiB,CAAEP,YAAY,CAACO,iBANnB,CAObC,gBAAgB,CAAER,YAAY,CAACQ,gBAPlB,CAQbC,cAAc,CAAET,YAAY,CAACS,cARhB,CASbC,OAAO,CAAEV,YAAY,CAACU,OATT,CAUbT,eAAe,CAAfA,eAVa,CAWbU,MAAM,CAAEX,YAAY,CAACW,MAXR,CAAD,CAAd,CAaD,CApBD,EAqBA,MAAO,WAAM,CACXpB,OAAO,CAAG,KAAV,CACD,CAFD,CAGD,CA7BQ,CA6BN,CAACJ,EAAD,CAAKD,SAAL,CA7BM,CAAT,CA+BA,MAAOG,CAAAA,WAAP,CACD,CApCD,CAsCA,cAAeJ,CAAAA,YAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { LotteryInfo } from 'src/diamondhand/Lottery';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\n\nconst useRoundInfo = (lotteryId?: number) => {\n  const dh = useDiamondHand();\n  const [lotteryInfo, setLotteryInfo] = useState<LotteryInfo>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    if (!dh || !lotteryId || lotteryId === 0) {\n      return;\n    }\n    Promise.all([\n      dh?.LOTTERY.getBasicLottoInfo(lotteryId),\n      dh?.TICKET.getNumberOfTickets(BigNumber.from(lotteryId)),\n    ]).then(([lottoRawInfo, numberOfTickets]) => {\n      if (!mounted) {\n        return;\n      }\n      setLotteryInfo({\n        lotteryId: lottoRawInfo.lotteryID,\n        lotteryStatus: lottoRawInfo.lotteryStatus,\n        prizePool: lottoRawInfo.prizePool,\n        costPerTicket: lottoRawInfo.costPerTicket,\n        prizeDistribution: lottoRawInfo.prizeDistribution,\n        startingTimestamp: lottoRawInfo.startingTimestamp,\n        closingTimestamp: lottoRawInfo.closingTimestamp,\n        winningNumbers: lottoRawInfo.winningNumbers,\n        winners: lottoRawInfo.winners,\n        numberOfTickets,\n        prizes: lottoRawInfo.prizes,\n      });\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [dh, lotteryId]);\n\n  return lotteryInfo;\n};\n\nexport default useRoundInfo;\n"]},"metadata":{},"sourceType":"module"}