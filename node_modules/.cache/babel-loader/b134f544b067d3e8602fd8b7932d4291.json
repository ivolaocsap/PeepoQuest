{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/cuffies/src/contexts/DiamondHandProvider/DiamondHandProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useWeb3React } from '@web3-react/core';\nimport React, { createContext, useEffect, useMemo, useState } from 'react';\nimport DiamondHand from '../../diamondhand';\nimport { useConfiguration } from '../ConfigProvider/ConfigProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext({\n  diamondHand: null\n});\nexport const DiamondHandProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const config = useConfiguration();\n  const [diamondHand, setDiamondHand] = useState();\n  useEffect(() => {\n    if (!library || !config) {\n      return;\n    }\n\n    setDiamondHand(new DiamondHand(config, library, account));\n  }, [library, account, config]);\n  const value = useMemo(() => {\n    return {\n      diamondHand\n    };\n  }, [diamondHand]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DiamondHandProvider, \"sZGynAJJGXnf/2pgoYp0ta1FRT8=\", false, function () {\n  return [useWeb3React, useConfiguration];\n});\n\n_c = DiamondHandProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiamondHandProvider\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/contexts/DiamondHandProvider/DiamondHandProvider.tsx"],"names":["useWeb3React","React","createContext","useEffect","useMemo","useState","DiamondHand","useConfiguration","Context","diamondHand","DiamondHandProvider","children","account","library","config","setDiamondHand","value"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,OAA1C,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAMA,OAAO,MAAMC,OAAO,gBAAGN,aAAa,CAAqB;AACvDO,EAAAA,WAAW,EAAE;AAD0C,CAArB,CAA7B;AAIP,OAAO,MAAMC,mBAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBb,YAAY,EAAzC;AACA,QAAMc,MAAM,GAAGP,gBAAgB,EAA/B;AACA,QAAM,CAACE,WAAD,EAAcM,cAAd,IAAgCV,QAAQ,EAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,OAAD,IAAY,CAACC,MAAjB,EAAyB;AACvB;AACD;;AACDC,IAAAA,cAAc,CAAC,IAAIT,WAAJ,CAAgBQ,MAAhB,EAAwBD,OAAxB,EAAiCD,OAAjC,CAAD,CAAd;AACD,GALQ,EAKN,CAACC,OAAD,EAAUD,OAAV,EAAmBE,MAAnB,CALM,CAAT;AAOA,QAAME,KAAK,GAAGZ,OAAO,CAAC,MAAM;AAC1B,WAAO;AAAEK,MAAAA;AAAF,KAAP;AACD,GAFoB,EAElB,CAACA,WAAD,CAFkB,CAArB;AAIA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEO,KAAzB;AAAA,cAAiCL;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjBM;;GAAMD,mB;UACkBV,Y,EACdO,gB;;;KAFJG,mB","sourcesContent":["import { useWeb3React } from '@web3-react/core';\nimport React, { createContext, useEffect, useMemo, useState } from 'react';\nimport DiamondHand from '../../diamondhand';\nimport { useConfiguration } from '../ConfigProvider/ConfigProvider';\n\nexport interface DiamondHandContext {\n  diamondHand?: DiamondHand;\n}\n\nexport const Context = createContext<DiamondHandContext>({\n  diamondHand: null,\n});\n\nexport const DiamondHandProvider: React.FC = ({ children }) => {\n  const { account, library } = useWeb3React();\n  const config = useConfiguration();\n  const [diamondHand, setDiamondHand] = useState<DiamondHand>();\n\n  useEffect(() => {\n    if (!library || !config) {\n      return;\n    }\n    setDiamondHand(new DiamondHand(config, library, account));\n  }, [library, account, config]);\n\n  const value = useMemo(() => {\n    return { diamondHand };\n  }, [diamondHand]);\n\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}