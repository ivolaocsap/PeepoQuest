{"ast":null,"code":"import { black, blue, green, grey, red, white, orange, bg, teal, pink } from './colors';\nconst theme = {\n  borderRadius: 12,\n  color: {\n    black,\n    blue,\n    grey,\n    green,\n    teal,\n    yellow: '#ffe970',\n    primary: {\n      one: pink[100],\n      light: pink[200],\n      main: pink[300]\n    },\n    secondary: pink[200],\n    white,\n    orange,\n    red,\n    danger: red[600],\n    success: green[500],\n    bg\n  },\n  siteWidth: 1010,\n  spacing: {\n    1: 4,\n    2: 8,\n    3: 16,\n    4: 24,\n    5: 32,\n    6: 48,\n    7: 64\n  },\n  breakpoints: {\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n    xxl: '1400px'\n  },\n  topBarSize: 72,\n  font: {\n    monospace: `Courier, monospace`,\n    sans: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`,\n    heading: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`\n  }\n};\nexport default theme;\nexport const AllBreakpoints = Object.keys(theme.breakpoints);\nexport const mediaQueries = key => {\n  return style => `@media screen and (min-width: ${theme.breakpoints[key]}) { ${style} }`;\n};\nexport const triangle = (width, height, direction, color = 'inherit') => {\n  const show = {\n    up: 'bottom',\n    down: 'top',\n    left: 'right',\n    right: 'left'\n  }[direction];\n  return `\n    border-width: ${height}px ${width}px;\n    border-color: transparent;\n    border-style: solid;\n    border-${show}-color: ${color};\n    width: 0;\n    height: 0\n  `;\n};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/theme/index.ts"],"names":["black","blue","green","grey","red","white","orange","bg","teal","pink","theme","borderRadius","color","yellow","primary","one","light","main","secondary","danger","success","siteWidth","spacing","breakpoints","sm","md","lg","xl","xxl","topBarSize","font","monospace","sans","heading","AllBreakpoints","Object","keys","mediaQueries","key","style","triangle","width","height","direction","show","up","down","left","right"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,GAAnC,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,EAAvD,EAA2DC,IAA3D,EAAgEC,IAAhE,QAA4E,UAA5E;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,YAAY,EAAE,EADF;AAEZC,EAAAA,KAAK,EAAE;AACLZ,IAAAA,KADK;AAELC,IAAAA,IAFK;AAGLE,IAAAA,IAHK;AAILD,IAAAA,KAJK;AAKLM,IAAAA,IALK;AAMLK,IAAAA,MAAM,EAAE,SANH;AAOLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,GAAG,EAAEN,IAAI,CAAC,GAAD,CADF;AAEPO,MAAAA,KAAK,EAAEP,IAAI,CAAC,GAAD,CAFJ;AAGPQ,MAAAA,IAAI,EAAER,IAAI,CAAC,GAAD;AAHH,KAPJ;AAYLS,IAAAA,SAAS,EAAET,IAAI,CAAC,GAAD,CAZV;AAaLJ,IAAAA,KAbK;AAcLC,IAAAA,MAdK;AAeLF,IAAAA,GAfK;AAgBLe,IAAAA,MAAM,EAAEf,GAAG,CAAC,GAAD,CAhBN;AAiBLgB,IAAAA,OAAO,EAAElB,KAAK,CAAC,GAAD,CAjBT;AAkBLK,IAAAA;AAlBK,GAFK;AAsBZc,EAAAA,SAAS,EAAE,IAtBC;AAuBZC,EAAAA,OAAO,EAAE;AACP,OAAG,CADI;AAEP,OAAG,CAFI;AAGP,OAAG,EAHI;AAIP,OAAG,EAJI;AAKP,OAAG,EALI;AAMP,OAAG,EANI;AAOP,OAAG;AAPI,GAvBG;AAgCZC,EAAAA,WAAW,EAAE;AACXC,IAAAA,EAAE,EAAE,OADO;AAEXC,IAAAA,EAAE,EAAE,OAFO;AAGXC,IAAAA,EAAE,EAAE,OAHO;AAIXC,IAAAA,EAAE,EAAE,QAJO;AAKXC,IAAAA,GAAG,EAAE;AALM,GAhCD;AAuCZC,EAAAA,UAAU,EAAE,EAvCA;AAyCZC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAG,oBADR;AAEJC,IAAAA,IAAI,EAAG,mJAFH;AAGJC,IAAAA,OAAO,EAAG;AAHN;AAzCM,CAAd;AAgDA,eAAevB,KAAf;AAIA,OAAO,MAAMwB,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAY1B,KAAK,CAACa,WAAlB,CAAvB;AAEP,OAAO,MAAMc,YAAY,GAAIC,GAAD,IAAsB;AAChD,SAAQC,KAAD,IACJ,iCAAgC7B,KAAK,CAACa,WAAN,CAAkBe,GAAlB,CAAuB,OAAMC,KAAM,IADtE;AAED,CAHM;AAKP,OAAO,MAAMC,QAAQ,GAAG,CACtBC,KADsB,EAEtBC,MAFsB,EAGtBC,SAHsB,EAItB/B,KAAK,GAAG,SAJc,KAKnB;AACH,QAAMgC,IAAI,GAAG;AACXC,IAAAA,EAAE,EAAE,QADO;AAEXC,IAAAA,IAAI,EAAE,KAFK;AAGXC,IAAAA,IAAI,EAAE,OAHK;AAIXC,IAAAA,KAAK,EAAE;AAJI,IAKXL,SALW,CAAb;AAOA,SAAQ;AACV,oBAAoBD,MAAO,MAAKD,KAAM;AACtC;AACA;AACA,aAAaG,IAAK,WAAUhC,KAAM;AAClC;AACA;AACA,GAPE;AAQD,CArBM","sourcesContent":["import { black, blue, green, grey, red, white, orange, bg, teal,pink } from './colors';\n\nconst theme = {\n  borderRadius: 12,\n  color: {\n    black,\n    blue,\n    grey,\n    green,\n    teal,\n    yellow: '#ffe970',\n    primary: {\n      one: pink[100],\n      light: pink[200],\n      main: pink[300],\n    },\n    secondary: pink[200],\n    white,\n    orange,\n    red,\n    danger: red[600],\n    success: green[500],\n    bg,\n  },\n  siteWidth: 1010,\n  spacing: {\n    1: 4,\n    2: 8,\n    3: 16,\n    4: 24,\n    5: 32,\n    6: 48,\n    7: 64,\n  },\n  breakpoints: {\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n    xxl: '1400px',\n  },\n  topBarSize: 72,\n\n  font: {\n    monospace: `Courier, monospace`,\n    sans: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`,\n    heading: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`,\n  },\n};\n\nexport default theme;\n\nexport type BreakPoints = keyof typeof theme.breakpoints;\n\nexport const AllBreakpoints = Object.keys(theme.breakpoints) as BreakPoints[];\n\nexport const mediaQueries = (key: BreakPoints) => {\n  return (style: TemplateStringsArray | string) =>\n    `@media screen and (min-width: ${theme.breakpoints[key]}) { ${style} }`;\n};\n\nexport const triangle = (\n  width: number,\n  height: number,\n  direction: 'up' | 'down' | 'left' | 'right',\n  color = 'inherit',\n) => {\n  const show = {\n    up: 'bottom',\n    down: 'top',\n    left: 'right',\n    right: 'left',\n  }[direction];\n\n  return `\n    border-width: ${height}px ${width}px;\n    border-color: transparent;\n    border-style: solid;\n    border-${show}-color: ${color};\n    width: 0;\n    height: 0\n  `;\n};\n"]},"metadata":{},"sourceType":"module"}