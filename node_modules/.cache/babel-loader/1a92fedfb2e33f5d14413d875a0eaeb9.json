{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/cuffies/src/components/Header/AccountTransactions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { isTransactionRecent, useAllTransactions, useClearAllTransactions } from 'src/state/transactions/hooks';\nimport styled from 'styled-components';\nimport Transaction from './Transaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_TRANSACTION_HISTORY = 10;\n\nconst AccountTransactions = () => {\n  _s();\n\n  const allTransactions = useAllTransactions();\n  const {\n    clearAllTransactions\n  } = useClearAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt);\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).slice(0, MAX_TRANSACTION_HISTORY);\n  const isEmpty = (confirmed === null || confirmed === void 0 ? void 0 : confirmed.length) + (pending === null || pending === void 0 ? void 0 : pending.length) == 0;\n  return /*#__PURE__*/_jsxDEV(StyledTransactions, {\n    children: [isEmpty && /*#__PURE__*/_jsxDEV(TransactionTitle, {\n      children: \"Your transactions will appear here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this), !isEmpty && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TransactionHeader, {\n        children: [/*#__PURE__*/_jsxDEV(TransactionTitle, {\n          children: \"Recent transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledTransactionActions, {\n          onClick: clearAllTransactions,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '5px'\n            },\n            children: \"Clear all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledTransactionList, {\n        children: [(pending === null || pending === void 0 ? void 0 : pending.length) > 0 && pending.map(tx => /*#__PURE__*/_jsxDEV(Transaction, {\n          tx: tx\n        }, tx.hash, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 57\n        }, this)), (confirmed === null || confirmed === void 0 ? void 0 : confirmed.length) > 0 && confirmed.map(tx => /*#__PURE__*/_jsxDEV(Transaction, {\n          tx: tx\n        }, tx.hash, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 37\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountTransactions, \"6I1z84FBFJSJS6zAU323oj9lccA=\", false, function () {\n  return [useAllTransactions, useClearAllTransactions];\n});\n\n_c = AccountTransactions;\nconst StyledTransactions = styled.div`\n  padding: 21px 28px;\n  background: #1a1e22;\n  margin-top: -1px;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n_c2 = StyledTransactions;\nconst TransactionHeader = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c3 = TransactionHeader;\nconst TransactionTitle = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n_c4 = TransactionTitle;\nconst StyledTransactionList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c5 = StyledTransactionList;\nconst StyledTransactionActions = styled.button`\n  padding: 0px;\n  margin-left: auto;\n  background-color: transparent;\n  appearance: none;\n  border: none;\n  cursor: pointer;\n  color: #fff;\n  font-size: 13px;\n  font-family: ${({\n  theme\n}) => theme.font.sans};\n  font-weight: 500;\n  &:hover {\n    color: ${props => props.theme.color.green[100]};\n  }\n`; // we want the latest one to come first, so return negative if a is after b\n\n_c6 = StyledTransactionActions;\n\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime;\n}\n\nexport default AccountTransactions;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AccountTransactions\");\n$RefreshReg$(_c2, \"StyledTransactions\");\n$RefreshReg$(_c3, \"TransactionHeader\");\n$RefreshReg$(_c4, \"TransactionTitle\");\n$RefreshReg$(_c5, \"StyledTransactionList\");\n$RefreshReg$(_c6, \"StyledTransactionActions\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/components/Header/AccountTransactions.tsx"],"names":["React","useMemo","isTransactionRecent","useAllTransactions","useClearAllTransactions","styled","Transaction","MAX_TRANSACTION_HISTORY","AccountTransactions","allTransactions","clearAllTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","newTransactionsFirst","pending","tx","receipt","confirmed","slice","isEmpty","length","marginLeft","map","hash","StyledTransactions","div","TransactionHeader","TransactionTitle","StyledTransactionList","StyledTransactionActions","button","theme","font","sans","props","color","green","a","b","addedTime"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  isTransactionRecent,\n  useAllTransactions,\n  useClearAllTransactions,\n} from 'src/state/transactions/hooks';\nimport { TransactionDetails } from 'src/state/transactions/reducer';\nimport styled from 'styled-components';\nimport Transaction from './Transaction';\n\nconst MAX_TRANSACTION_HISTORY = 10;\n\nconst AccountTransactions: React.FC = () => {\n  const allTransactions = useAllTransactions();\n  const { clearAllTransactions } = useClearAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt);\n  const confirmed = sortedRecentTransactions\n    .filter((tx) => tx.receipt)\n    .slice(0, MAX_TRANSACTION_HISTORY);\n\n  const isEmpty = confirmed?.length + pending?.length == 0;\n  return (\n    <StyledTransactions>\n      {isEmpty && <TransactionTitle>Your transactions will appear here...</TransactionTitle>}\n      {!isEmpty && (\n        <>\n          <TransactionHeader>\n            <TransactionTitle>Recent transactions</TransactionTitle>\n            <StyledTransactionActions onClick={clearAllTransactions}>\n              <span style={{ marginLeft: '5px' }}>Clear all</span>\n            </StyledTransactionActions>\n          </TransactionHeader>\n\n          <StyledTransactionList>\n            {pending?.length > 0 && pending.map((tx) => <Transaction key={tx.hash} tx={tx} />)}\n            {confirmed?.length > 0 &&\n              confirmed.map((tx) => <Transaction key={tx.hash} tx={tx} />)}\n          </StyledTransactionList>\n        </>\n      )}\n    </StyledTransactions>\n  );\n};\n\nconst StyledTransactions = styled.div`\n  padding: 21px 28px;\n  background: #1a1e22;\n  margin-top: -1px;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nconst TransactionHeader = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TransactionTitle = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nconst StyledTransactionList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTransactionActions = styled.button`\n  padding: 0px;\n  margin-left: auto;\n  background-color: transparent;\n  appearance: none;\n  border: none;\n  cursor: pointer;\n  color: #fff;\n  font-size: 13px;\n  font-family: ${({ theme }) => theme.font.sans};\n  font-weight: 500;\n  &:hover {\n    color: ${(props) => props.theme.color.green[100]};\n  }\n`;\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime;\n}\n\nexport default AccountTransactions;\n"]},"metadata":{},"sourceType":"module"}