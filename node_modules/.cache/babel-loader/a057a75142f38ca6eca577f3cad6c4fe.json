{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _a;\n\nvar _this = this;\n\nvar bignumber_js_1 = require(\"bignumber.js\");\n\nvar wyvern_js_1 = require(\"wyvern-js\");\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar _ = require(\"lodash\");\n\nvar Web3 = require(\"web3\");\n\nvar WyvernSchemas = require(\"wyvern-schemas\");\n\nvar types_1 = require(\"wyvern-schemas/dist/types\");\n\nvar contracts_1 = require(\"./contracts\");\n\nvar types_2 = require(\"./types\");\n\nexports.NULL_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS;\nexports.NULL_BLOCK_HASH = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexports.OPENSEA_FEE_RECIPIENT = '0x5b3256965e7c3cf26e11fcaf296dfc8807c01073';\nexports.DEP_INFURA_KEY = 'e8695bce67944848aa95459fac052f8e';\nexports.MAINNET_PROVIDER_URL = 'https://eth-mainnet.alchemyapi.io/jsonrpc/y5dLONzfAJh-oCY02DCP3UWCT2pSEXMo';\nexports.RINKEBY_PROVIDER_URL = 'https://eth-rinkeby.alchemyapi.io/jsonrpc/-yDg7wmgGw5LdsP4p4kyxRYuDzCkXtoI';\nexports.INVERSE_BASIS_POINT = 10000;\nexports.MAX_UINT_256 = wyvern_js_1.WyvernProtocol.MAX_UINT_256;\nexports.WYVERN_EXCHANGE_ADDRESS_MAINNET = \"0x7be8076f4ea4a4ad08075c2508e481d6c946d12b\";\nexports.WYVERN_EXCHANGE_ADDRESS_RINKEBY = \"0x5206e78b21ce315ce284fb24cf05e0585a93b1d9\";\nexports.ENJIN_COIN_ADDRESS = '0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c';\nexports.ENJIN_ADDRESS = '0xfaaFDc07907ff5120a76b34b731b278c38d6043C';\nexports.ENJIN_LEGACY_ADDRESS = '0x8562c38485B1E8cCd82E44F89823dA76C98eb0Ab';\nexports.CK_ADDRESS = '0x06012c8cf97bead5deae237070f9587f8e7a266d';\nexports.CK_RINKEBY_ADDRESS = '0x16baf0de678e52367adc69fd067e5edd1d33e3bf';\nexports.WRAPPED_NFT_FACTORY_ADDRESS_MAINNET = '0xf11b5815b143472b7f7c52af0bfa6c6a2c8f40e1';\nexports.WRAPPED_NFT_FACTORY_ADDRESS_RINKEBY = '0x94c71c87244b862cfd64d36af468309e4804ec09';\nexports.WRAPPED_NFT_LIQUIDATION_PROXY_ADDRESS_MAINNET = '0x995835145dd85c012f3e2d7d5561abd626658c04';\nexports.WRAPPED_NFT_LIQUIDATION_PROXY_ADDRESS_RINKEBY = '0xaa775Eb452353aB17f7cf182915667c2598D43d3';\nexports.UNISWAP_FACTORY_ADDRESS_MAINNET = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95';\nexports.UNISWAP_FACTORY_ADDRESS_RINKEBY = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36';\nexports.DEFAULT_WRAPPED_NFT_LIQUIDATION_UNISWAP_SLIPPAGE_IN_BASIS_POINTS = 1000;\nexports.CHEEZE_WIZARDS_GUILD_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS; // TODO: Update this address once Dapper has deployed their mainnet contracts\n\nexports.CHEEZE_WIZARDS_GUILD_RINKEBY_ADDRESS = '0x095731b672b76b00A0b5cb9D8258CD3F6E976cB2';\nexports.CHEEZE_WIZARDS_BASIC_TOURNAMENT_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS; // TODO: Update this address once Dapper has deployed their mainnet contracts\n\nexports.CHEEZE_WIZARDS_BASIC_TOURNAMENT_RINKEBY_ADDRESS = '0x8852f5F7d1BB867AAf8fdBB0851Aa431d1df5ca1';\nexports.DECENTRALAND_ESTATE_ADDRESS = '0x959e104e1a4db6317fa58f8295f586e1a978c297';\nexports.STATIC_CALL_TX_ORIGIN_ADDRESS = '0xbff6ade67e3717101dd8d0a7f3de1bf6623a2ba8';\nexports.STATIC_CALL_TX_ORIGIN_RINKEBY_ADDRESS = '0xe291abab95677bc652a44f973a8e06d48464e11c';\nexports.STATIC_CALL_CHEEZE_WIZARDS_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS; // TODO: Deploy this address once Dapper has deployed their mainnet contracts\n\nexports.STATIC_CALL_CHEEZE_WIZARDS_RINKEBY_ADDRESS = '0x8a640bdf8886dd6ca1fad9f22382b50deeacde08';\nexports.STATIC_CALL_DECENTRALAND_ESTATES_ADDRESS = '0x93c3cd7ba04556d2e3d7b8106ce0f83e24a87a7e';\nexports.DEFAULT_BUYER_FEE_BASIS_POINTS = 0;\nexports.DEFAULT_SELLER_FEE_BASIS_POINTS = 250;\nexports.OPENSEA_SELLER_BOUNTY_BASIS_POINTS = 100;\nexports.DEFAULT_MAX_BOUNTY = exports.DEFAULT_SELLER_FEE_BASIS_POINTS;\nexports.MAX_ERROR_LENGTH = 120;\nexports.MIN_EXPIRATION_SECONDS = 10;\nexports.ORDER_MATCHING_LATENCY_SECONDS = 60 * 60 * 24 * 7;\nexports.SELL_ORDER_BATCH_SIZE = 3;\nexports.DEFAULT_GAS_INCREASE_FACTOR = 1.1;\nvar proxyABI = {\n  'constant': false,\n  'inputs': [{\n    'name': 'dest',\n    'type': 'address'\n  }, {\n    'name': 'howToCall',\n    'type': 'uint8'\n  }, {\n    'name': 'calldata',\n    'type': 'bytes'\n  }],\n  'name': 'proxy',\n  'outputs': [{\n    'name': 'success',\n    'type': 'bool'\n  }],\n  'payable': false,\n  'stateMutability': 'nonpayable',\n  'type': 'function'\n};\nvar proxyAssertABI = {\n  'constant': false,\n  'inputs': [{\n    'name': 'dest',\n    'type': 'address'\n  }, {\n    'name': 'howToCall',\n    'type': 'uint8'\n  }, {\n    'name': 'calldata',\n    'type': 'bytes'\n  }],\n  'name': 'proxyAssert',\n  'outputs': [],\n  'payable': false,\n  'stateMutability': 'nonpayable',\n  'type': 'function'\n};\n\nexports.annotateERC721TransferABI = function (asset) {\n  return {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_to\",\n      \"type\": \"address\",\n      \"kind\": types_1.FunctionInputKind.Replaceable\n    }, {\n      \"name\": \"_tokenId\",\n      \"type\": \"uint256\",\n      \"kind\": types_1.FunctionInputKind.Asset,\n      \"value\": asset.id\n    }],\n    \"target\": asset.address,\n    \"name\": \"transfer\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": types_1.StateMutability.Nonpayable,\n    \"type\": Web3.AbiType.Function\n  };\n};\n\nexports.annotateERC20TransferABI = function (asset) {\n  return {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_to\",\n      \"type\": \"address\",\n      \"kind\": types_1.FunctionInputKind.Replaceable\n    }, {\n      \"name\": \"_amount\",\n      \"type\": \"uint256\",\n      \"kind\": types_1.FunctionInputKind.Count,\n      \"value\": asset.quantity\n    }],\n    \"target\": asset.address,\n    \"name\": \"transfer\",\n    \"outputs\": [{\n      \"name\": \"success\",\n      \"type\": \"bool\",\n      \"kind\": types_1.FunctionOutputKind.Other\n    }],\n    \"payable\": false,\n    \"stateMutability\": types_1.StateMutability.Nonpayable,\n    \"type\": Web3.AbiType.Function\n  };\n};\n\nvar SCHEMA_NAME_TO_ASSET_CONTRACT_TYPE = (_a = {}, _a[types_2.WyvernSchemaName.ERC721] = types_2.AssetContractType.NonFungible, _a[types_2.WyvernSchemaName.ERC1155] = types_2.AssetContractType.SemiFungible, _a[types_2.WyvernSchemaName.ERC20] = types_2.AssetContractType.Fungible, _a[types_2.WyvernSchemaName.LegacyEnjin] = types_2.AssetContractType.SemiFungible, _a[types_2.WyvernSchemaName.ENSShortNameAuction] = types_2.AssetContractType.NonFungible, _a); // OTHER\n\nvar txCallbacks = {};\n/**\n * Promisify a callback-syntax web3 function\n * @param inner callback function that accepts a Web3 callback function and passes\n * it to the Web3 function\n */\n\nfunction promisify(inner) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , new Promise(function (resolve, reject) {\n        return inner(function (err, res) {\n          if (err) {\n            reject(err);\n          }\n\n          resolve(res);\n        });\n      })];\n    });\n  });\n}\n/**\n * Promisify a call a method on a contract,\n * handling Parity errors. Returns '0x' if error.\n * Note that if T is not \"string\", this may return a falsey\n * value when the contract doesn't support the method (e.g. `isApprovedForAll`).\n * @param callback An anonymous function that takes a web3 callback\n * and returns a Web3 Contract's call result, e.g. `c => erc721.ownerOf(3, c)`\n * @param onError callback when user denies transaction\n */\n\n\nfunction promisifyCall(callback, onError) {\n  return __awaiter(this, void 0, void 0, function () {\n    var result, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , promisify(callback)];\n\n        case 1:\n          result = _a.sent();\n\n          if (result == '0x') {\n            // Geth compatibility\n            return [2\n            /*return*/\n            , undefined];\n          }\n\n          return [2\n          /*return*/\n          , result];\n\n        case 2:\n          error_1 = _a.sent(); // Probably method not found, and web3 is a Parity node\n\n          if (onError) {\n            onError(error_1);\n          } else {\n            console.error(error_1);\n          }\n\n          return [2\n          /*return*/\n          , undefined];\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.promisifyCall = promisifyCall;\n\nvar track = function (web3, txHash, onFinalized) {\n  if (txCallbacks[txHash]) {\n    txCallbacks[txHash].push(onFinalized);\n  } else {\n    txCallbacks[txHash] = [onFinalized];\n\n    var poll_1 = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var tx, receipt, status_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , promisify(function (c) {\n                return web3.eth.getTransaction(txHash, c);\n              })];\n\n            case 1:\n              tx = _a.sent();\n              if (!(tx && tx.blockHash && tx.blockHash !== exports.NULL_BLOCK_HASH)) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , promisify(function (c) {\n                return web3.eth.getTransactionReceipt(txHash, c);\n              })];\n\n            case 2:\n              receipt = _a.sent();\n\n              if (!receipt) {\n                // Hack: assume success if no receipt\n                console.warn('No receipt found for ', txHash);\n              }\n\n              status_1 = receipt ? parseInt((receipt.status || \"0\").toString()) == 1 : true;\n              txCallbacks[txHash].map(function (f) {\n                return f(status_1);\n              });\n              delete txCallbacks[txHash];\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              setTimeout(poll_1, 1000);\n              _a.label = 4;\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    poll_1().catch();\n  }\n};\n\nexports.confirmTransaction = function (web3, txHash) {\n  return __awaiter(_this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , new Promise(function (resolve, reject) {\n        track(web3, txHash, function (didSucceed) {\n          if (didSucceed) {\n            resolve(\"Transaction complete!\");\n          } else {\n            reject(new Error(\"Transaction failed :( You might have already completed this action. See more on the mainnet at etherscan.io/txn/\" + txHash));\n          }\n        });\n      })];\n    });\n  });\n};\n\nexports.assetFromJSON = function (asset) {\n  var isAnimated = asset.image_url && asset.image_url.endsWith('.gif');\n  var isSvg = asset.image_url && asset.image_url.endsWith('.svg');\n  var fromJSON = {\n    tokenId: asset.token_id.toString(),\n    tokenAddress: asset.asset_contract.address,\n    name: asset.name,\n    description: asset.description,\n    owner: asset.owner,\n    assetContract: exports.assetContractFromJSON(asset.asset_contract),\n    orders: asset.orders ? asset.orders.map(exports.orderFromJSON) : null,\n    sellOrders: asset.sell_orders ? asset.sell_orders.map(exports.orderFromJSON) : null,\n    buyOrders: asset.buy_orders ? asset.buy_orders.map(exports.orderFromJSON) : null,\n    isPresale: asset.is_presale,\n    // Don't use previews if it's a special image\n    imageUrl: isAnimated || isSvg ? asset.image_url : asset.image_preview_url || asset.image_url,\n    imagePreviewUrl: asset.image_preview_url,\n    imageUrlOriginal: asset.image_original_url,\n    imageUrlThumbnail: asset.image_thumbnail_url,\n    externalLink: asset.external_link,\n    openseaLink: asset.permalink,\n    traits: asset.traits,\n    numSales: asset.num_sales,\n    lastSale: asset.last_sale,\n    backgroundColor: asset.background_color ? \"#\" + asset.background_color : null,\n    transferFee: asset.transfer_fee ? makeBigNumber(asset.transfer_fee) : null,\n    transferFeePaymentToken: asset.transfer_fee_payment_token ? exports.tokenFromJSON(asset.transfer_fee_payment_token) : null\n  }; // If orders were included, put them in sell/buy order groups\n\n  if (fromJSON.orders && !fromJSON.sellOrders) {\n    fromJSON.sellOrders = fromJSON.orders.filter(function (o) {\n      return o.side == types_2.OrderSide.Sell;\n    });\n  }\n\n  if (fromJSON.orders && !fromJSON.buyOrders) {\n    fromJSON.buyOrders = fromJSON.orders.filter(function (o) {\n      return o.side == types_2.OrderSide.Buy;\n    });\n  }\n\n  return fromJSON;\n};\n\nexports.assetBundleFromJSON = function (asset_bundle) {\n  var fromJSON = {\n    maker: asset_bundle.maker,\n    assets: asset_bundle.assets.map(exports.assetFromJSON),\n    assetContract: asset_bundle.asset_contract ? exports.assetContractFromJSON(asset_bundle.asset_contract) : undefined,\n    name: asset_bundle.name,\n    slug: asset_bundle.slug,\n    description: asset_bundle.description,\n    externalLink: asset_bundle.external_link,\n    permalink: asset_bundle.permalink,\n    sellOrders: asset_bundle.sell_orders ? asset_bundle.sell_orders.map(exports.orderFromJSON) : null\n  };\n  return fromJSON;\n};\n\nexports.assetContractFromJSON = function (asset_contract) {\n  return {\n    name: asset_contract.name,\n    description: asset_contract.description,\n    type: asset_contract.asset_contract_type,\n    schemaName: asset_contract.schema_name,\n    address: asset_contract.address,\n    tokenSymbol: asset_contract.symbol,\n    buyerFeeBasisPoints: asset_contract.buyer_fee_basis_points,\n    sellerFeeBasisPoints: asset_contract.seller_fee_basis_points,\n    openseaBuyerFeeBasisPoints: asset_contract.opensea_buyer_fee_basis_points,\n    openseaSellerFeeBasisPoints: asset_contract.opensea_seller_fee_basis_points,\n    devBuyerFeeBasisPoints: asset_contract.dev_buyer_fee_basis_points,\n    devSellerFeeBasisPoints: asset_contract.dev_seller_fee_basis_points,\n    imageUrl: asset_contract.image_url,\n    stats: asset_contract.stats,\n    traits: asset_contract.traits,\n    externalLink: asset_contract.external_link,\n    wikiLink: asset_contract.wiki_link\n  };\n};\n\nexports.tokenFromJSON = function (token) {\n  var fromJSON = {\n    name: token.name,\n    symbol: token.symbol,\n    decimals: token.decimals,\n    address: token.address,\n    imageUrl: token.image_url,\n    ethPrice: token.eth_price\n  };\n  return fromJSON;\n};\n\nexports.orderFromJSON = function (order) {\n  var createdDate = new Date(order.created_date + \"Z\");\n  var fromJSON = {\n    hash: order.order_hash || order.hash,\n    cancelledOrFinalized: order.cancelled || order.finalized,\n    markedInvalid: order.marked_invalid,\n    metadata: order.metadata,\n    quantity: new bignumber_js_1.default(order.quantity || 1),\n    exchange: order.exchange,\n    makerAccount: order.maker,\n    takerAccount: order.maker,\n    // Use string address to conform to Wyvern Order schema\n    maker: order.maker.address,\n    taker: order.taker.address,\n    makerRelayerFee: new bignumber_js_1.default(order.maker_relayer_fee),\n    takerRelayerFee: new bignumber_js_1.default(order.taker_relayer_fee),\n    makerProtocolFee: new bignumber_js_1.default(order.maker_protocol_fee),\n    takerProtocolFee: new bignumber_js_1.default(order.taker_protocol_fee),\n    makerReferrerFee: new bignumber_js_1.default(order.maker_referrer_fee || 0),\n    waitingForBestCounterOrder: order.fee_recipient.address == exports.NULL_ADDRESS,\n    feeMethod: order.fee_method,\n    feeRecipientAccount: order.fee_recipient,\n    feeRecipient: order.fee_recipient.address,\n    side: order.side,\n    saleKind: order.sale_kind,\n    target: order.target,\n    howToCall: order.how_to_call,\n    calldata: order.calldata,\n    replacementPattern: order.replacement_pattern,\n    staticTarget: order.static_target,\n    staticExtradata: order.static_extradata,\n    paymentToken: order.payment_token,\n    basePrice: new bignumber_js_1.default(order.base_price),\n    extra: new bignumber_js_1.default(order.extra),\n    currentBounty: new bignumber_js_1.default(order.current_bounty || 0),\n    currentPrice: new bignumber_js_1.default(order.current_price || 0),\n    createdTime: new bignumber_js_1.default(Math.round(createdDate.getTime() / 1000)),\n    listingTime: new bignumber_js_1.default(order.listing_time),\n    expirationTime: new bignumber_js_1.default(order.expiration_time),\n    salt: new bignumber_js_1.default(order.salt),\n    v: parseInt(order.v),\n    r: order.r,\n    s: order.s,\n    paymentTokenContract: order.payment_token_contract ? exports.tokenFromJSON(order.payment_token_contract) : undefined,\n    asset: order.asset ? exports.assetFromJSON(order.asset) : undefined,\n    assetBundle: order.asset_bundle ? exports.assetBundleFromJSON(order.asset_bundle) : undefined\n  }; // Use client-side price calc, to account for buyer fee (not added by server) and latency\n\n  fromJSON.currentPrice = estimateCurrentPrice(fromJSON);\n  return fromJSON;\n};\n/**\n * Convert an order to JSON, hashing it as well if necessary\n * @param order order (hashed or unhashed)\n */\n\n\nexports.orderToJSON = function (order) {\n  var asJSON = {\n    exchange: order.exchange.toLowerCase(),\n    maker: order.maker.toLowerCase(),\n    taker: order.taker.toLowerCase(),\n    makerRelayerFee: order.makerRelayerFee.toString(),\n    takerRelayerFee: order.takerRelayerFee.toString(),\n    makerProtocolFee: order.makerProtocolFee.toString(),\n    takerProtocolFee: order.takerProtocolFee.toString(),\n    makerReferrerFee: order.makerReferrerFee.toString(),\n    feeMethod: order.feeMethod,\n    feeRecipient: order.feeRecipient.toLowerCase(),\n    side: order.side,\n    saleKind: order.saleKind,\n    target: order.target.toLowerCase(),\n    howToCall: order.howToCall,\n    calldata: order.calldata,\n    replacementPattern: order.replacementPattern,\n    staticTarget: order.staticTarget.toLowerCase(),\n    staticExtradata: order.staticExtradata,\n    paymentToken: order.paymentToken.toLowerCase(),\n    quantity: order.quantity.toString(),\n    basePrice: order.basePrice.toString(),\n    extra: order.extra.toString(),\n    createdTime: order.createdTime ? order.createdTime.toString() : undefined,\n    listingTime: order.listingTime.toString(),\n    expirationTime: order.expirationTime.toString(),\n    salt: order.salt.toString(),\n    metadata: order.metadata,\n    v: order.v,\n    r: order.r,\n    s: order.s,\n    hash: order.hash\n  };\n  return asJSON;\n};\n/**\n * Sign messages using web3 personal signatures\n * @param web3 Web3 instance\n * @param message message to sign\n * @param signerAddress web3 address signing the message\n * @returns A signature if provider can sign, otherwise null\n */\n\n\nfunction personalSignAsync(web3, message, signerAddress) {\n  return __awaiter(this, void 0, void 0, function () {\n    var signature, error;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (web3.currentProvider.isDapper) {\n            // Optimize Dapper - don't try signature\n            return [2\n            /*return*/\n            , null];\n          }\n\n          return [4\n          /*yield*/\n          , promisify(function (c) {\n            return web3.currentProvider.sendAsync({\n              method: 'personal_sign',\n              params: [message, signerAddress],\n              from: signerAddress,\n              id: new Date().getTime()\n            }, c);\n          })];\n\n        case 1:\n          signature = _a.sent();\n          error = signature.error;\n\n          if (error) {\n            return [2\n            /*return*/\n            , null];\n          }\n\n          try {\n            return [2\n            /*return*/\n            , parseSignatureHex(signature.result)];\n          } catch (error) {\n            // Dapper wallet signature isn't parseable\n            return [2\n            /*return*/\n            , null];\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.personalSignAsync = personalSignAsync;\n/**\n * Special fixes for making BigNumbers using web3 results\n * @param arg An arg or the result of a web3 call to turn into a BigNumber\n */\n\nfunction makeBigNumber(arg) {\n  // Zero sometimes returned as 0x from contracts\n  if (arg === '0x') {\n    arg = 0;\n  } // fix \"new BigNumber() number type has more than 15 significant digits\"\n\n\n  arg = arg.toString();\n  return new bignumber_js_1.default(arg);\n}\n\nexports.makeBigNumber = makeBigNumber;\n/**\n * Send a transaction to the blockchain and optionally confirm it\n * @param web3 Web3 instance\n * @param param0 __namedParameters\n * @param from address sending transaction\n * @param to destination contract address\n * @param data data to send to contract\n * @param gasPrice gas price to use. If unspecified, uses web3 default (mean gas price)\n * @param value value in ETH to send with data. Defaults to 0\n * @param onError callback when user denies transaction\n */\n\nfunction sendRawTransaction(web3, _a, onError) {\n  var from = _a.from,\n      to = _a.to,\n      data = _a.data,\n      gasPrice = _a.gasPrice,\n      _b = _a.value,\n      value = _b === void 0 ? 0 : _b,\n      gas = _a.gas;\n  return __awaiter(this, void 0, void 0, function () {\n    var txHashRes, error_2;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (!(gas == null)) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , estimateGas(web3, {\n            from: from,\n            to: to,\n            data: data,\n            value: value\n          })];\n\n        case 1:\n          // This gas cannot be increased due to an ethjs error\n          gas = _c.sent();\n          _c.label = 2;\n\n        case 2:\n          _c.trys.push([2, 4,, 5]);\n\n          return [4\n          /*yield*/\n          , promisify(function (c) {\n            return web3.eth.sendTransaction({\n              from: from,\n              to: to,\n              value: value,\n              data: data,\n              gas: gas,\n              gasPrice: gasPrice\n            }, c);\n          })];\n\n        case 3:\n          txHashRes = _c.sent();\n          return [2\n          /*return*/\n          , txHashRes.toString()];\n\n        case 4:\n          error_2 = _c.sent();\n          onError(error_2);\n          throw error_2;\n\n        case 5:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.sendRawTransaction = sendRawTransaction;\n/**\n * Call a method on a contract, sending arbitrary data and\n * handling Parity errors. Returns '0x' if error.\n * @param web3 Web3 instance\n * @param param0 __namedParameters\n * @param from address sending call\n * @param to destination contract address\n * @param data data to send to contract\n * @param onError callback when user denies transaction\n */\n\nfunction rawCall(web3, _a, onError) {\n  var from = _a.from,\n      to = _a.to,\n      data = _a.data;\n  return __awaiter(this, void 0, void 0, function () {\n    var result, error_3;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , promisify(function (c) {\n            return web3.eth.call({\n              from: from,\n              to: to,\n              data: data\n            }, c);\n          })];\n\n        case 1:\n          result = _b.sent();\n          return [2\n          /*return*/\n          , result];\n\n        case 2:\n          error_3 = _b.sent(); // Probably method not found, and web3 is a Parity node\n\n          if (onError) {\n            onError(error_3);\n          } // Backwards compatibility with Geth nodes\n\n\n          return [2\n          /*return*/\n          , '0x'];\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.rawCall = rawCall;\n/**\n * Estimate Gas usage for a transaction\n * @param web3 Web3 instance\n * @param from address sending transaction\n * @param to destination contract address\n * @param data data to send to contract\n * @param value value in ETH to send with data\n */\n\nfunction estimateGas(web3, _a) {\n  var from = _a.from,\n      to = _a.to,\n      data = _a.data,\n      _b = _a.value,\n      value = _b === void 0 ? 0 : _b;\n  return __awaiter(this, void 0, void 0, function () {\n    var amount;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , promisify(function (c) {\n            return web3.eth.estimateGas({\n              from: from,\n              to: to,\n              value: value,\n              data: data\n            }, c);\n          })];\n\n        case 1:\n          amount = _c.sent();\n          return [2\n          /*return*/\n          , amount];\n      }\n    });\n  });\n}\n\nexports.estimateGas = estimateGas;\n/**\n * Get mean gas price for sending a txn, in wei\n * @param web3 Web3 instance\n */\n\nfunction getCurrentGasPrice(web3) {\n  return __awaiter(this, void 0, void 0, function () {\n    var meanGas;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , promisify(function (c) {\n            return web3.eth.getGasPrice(c);\n          })];\n\n        case 1:\n          meanGas = _a.sent();\n          return [2\n          /*return*/\n          , meanGas];\n      }\n    });\n  });\n}\n\nexports.getCurrentGasPrice = getCurrentGasPrice;\n/**\n * Get current transfer fees for an asset\n * @param web3 Web3 instance\n * @param asset The asset to check for transfer fees\n */\n\nfunction getTransferFeeSettings(web3, _a) {\n  var asset = _a.asset,\n      accountAddress = _a.accountAddress;\n  return __awaiter(this, void 0, void 0, function () {\n    var transferFee, transferFeeTokenAddress, feeContract_1, params;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!(asset.tokenAddress.toLowerCase() == exports.ENJIN_ADDRESS.toLowerCase())) return [3\n          /*break*/\n          , 2];\n          feeContract_1 = web3.eth.contract(contracts_1.ERC1155).at(asset.tokenAddress);\n          return [4\n          /*yield*/\n          , promisifyCall(function (c) {\n            return feeContract_1.transferSettings(asset.tokenId, {\n              from: accountAddress\n            }, c);\n          })];\n\n        case 1:\n          params = _b.sent();\n\n          if (params) {\n            transferFee = makeBigNumber(params[3]);\n\n            if (params[2] == 0) {\n              transferFeeTokenAddress = exports.ENJIN_COIN_ADDRESS;\n            }\n          }\n\n          _b.label = 2;\n\n        case 2:\n          return [2\n          /*return*/\n          , {\n            transferFee: transferFee,\n            transferFeeTokenAddress: transferFeeTokenAddress\n          }];\n      }\n    });\n  });\n}\n\nexports.getTransferFeeSettings = getTransferFeeSettings; // sourced from 0x.js:\n// https://github.com/ProjectWyvern/wyvern-js/blob/39999cb93ce5d80ea90b4382182d1bd4339a9c6c/src/utils/signature_utils.ts\n\nfunction parseSignatureHex(signature) {\n  // HACK: There is no consensus on whether the signatureHex string should be formatted as\n  // v + r + s OR r + s + v, and different clients (even different versions of the same client)\n  // return the signature params in different orders. In order to support all client implementations,\n  // we parse the signature in both ways, and evaluate if either one is a valid signature.\n  var validVParamValues = [27, 28];\n\n  var ecSignatureRSV = _parseSignatureHexAsRSV(signature);\n\n  if (_.includes(validVParamValues, ecSignatureRSV.v)) {\n    return ecSignatureRSV;\n  } // For older clients\n\n\n  var ecSignatureVRS = _parseSignatureHexAsVRS(signature);\n\n  if (_.includes(validVParamValues, ecSignatureVRS.v)) {\n    return ecSignatureVRS;\n  }\n\n  throw new Error('Invalid signature');\n\n  function _parseSignatureHexAsVRS(signatureHex) {\n    var signatureBuffer = ethUtil.toBuffer(signatureHex);\n    var v = signatureBuffer[0];\n\n    if (v < 27) {\n      v += 27;\n    }\n\n    var r = signatureBuffer.slice(1, 33);\n    var s = signatureBuffer.slice(33, 65);\n    var ecSignature = {\n      v: v,\n      r: ethUtil.bufferToHex(r),\n      s: ethUtil.bufferToHex(s)\n    };\n    return ecSignature;\n  }\n\n  function _parseSignatureHexAsRSV(signatureHex) {\n    var _a = ethUtil.fromRpcSig(signatureHex),\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    var ecSignature = {\n      v: v,\n      r: ethUtil.bufferToHex(r),\n      s: ethUtil.bufferToHex(s)\n    };\n    return ecSignature;\n  }\n}\n/**\n * Estimates the price of an order\n * @param order The order to estimate price on\n * @param secondsToBacktrack The number of seconds to subtract on current time,\n *  to fix race conditions\n * @param shouldRoundUp Whether to round up fractional wei\n */\n\n\nfunction estimateCurrentPrice(order, secondsToBacktrack, shouldRoundUp) {\n  if (secondsToBacktrack === void 0) {\n    secondsToBacktrack = 30;\n  }\n\n  if (shouldRoundUp === void 0) {\n    shouldRoundUp = true;\n  }\n\n  var basePrice = order.basePrice,\n      listingTime = order.listingTime,\n      expirationTime = order.expirationTime,\n      extra = order.extra;\n  var side = order.side,\n      takerRelayerFee = order.takerRelayerFee,\n      makerRelayerFee = order.makerRelayerFee,\n      saleKind = order.saleKind,\n      feeRecipient = order.feeRecipient;\n  var now = new bignumber_js_1.default(Math.round(Date.now() / 1000)).minus(secondsToBacktrack);\n  basePrice = new bignumber_js_1.default(basePrice);\n  listingTime = new bignumber_js_1.default(listingTime);\n  expirationTime = new bignumber_js_1.default(expirationTime);\n  extra = new bignumber_js_1.default(extra);\n  var exactPrice = basePrice;\n\n  if (saleKind == types_2.SaleKind.FixedPrice) {// Do nothing, price is correct\n  } else if (saleKind == types_2.SaleKind.DutchAuction) {\n    var diff = extra.times(now.minus(listingTime)).dividedBy(expirationTime.minus(listingTime));\n    exactPrice = side == types_2.OrderSide.Sell\n    /* Sell-side - start price: basePrice. End price: basePrice - extra. */\n    ? basePrice.minus(diff)\n    /* Buy-side - start price: basePrice. End price: basePrice + extra. */\n    : basePrice.plus(diff);\n  } // Add buyer fee\n\n\n  if (side == types_2.OrderSide.Sell) {\n    // Buyer fee increases sale price\n    var buyerFeeBPS = order.waitingForBestCounterOrder ? makerRelayerFee : takerRelayerFee;\n    exactPrice = exactPrice.times(+buyerFeeBPS / exports.INVERSE_BASIS_POINT + 1);\n  }\n\n  return shouldRoundUp ? exactPrice.ceil() : exactPrice;\n}\n\nexports.estimateCurrentPrice = estimateCurrentPrice;\n/**\n * Wrapper function for getting generic Wyvern assets from OpenSea assets\n * @param schema Wyvern schema for the asset\n * @param asset The fungible or nonfungible asset to format\n */\n\nfunction getWyvernAsset(schema, asset, quantity) {\n  if (quantity === void 0) {\n    quantity = new bignumber_js_1.default(1);\n  }\n\n  if (SCHEMA_NAME_TO_ASSET_CONTRACT_TYPE[schema.name] == types_2.AssetContractType.NonFungible) {\n    return getWyvernNFTAsset(schema, asset);\n  } else {\n    return getWyvernFTAsset(schema, asset, quantity);\n  }\n}\n\nexports.getWyvernAsset = getWyvernAsset;\n/**\n * Get the Wyvern representation of an NFT asset\n * @param schema The WyvernSchema needed to access this asset\n * @param asset The asset\n */\n\nfunction getWyvernNFTAsset(schema, asset) {\n  return schema.assetFromFields({\n    'ID': asset.tokenId != null ? asset.tokenId.toString() : undefined,\n    'Address': asset.tokenAddress.toLowerCase(),\n    'Name': asset.name\n  });\n}\n\nexports.getWyvernNFTAsset = getWyvernNFTAsset;\n/**\n * Get the Wyvern representation of a fungible asset\n * @param schema The WyvernSchema needed to access this asset\n * @param asset The asset to trade\n * @param quantity The number of items to trade\n */\n\nfunction getWyvernFTAsset(schema, asset, quantity) {\n  var tokenId = asset.tokenId != null ? asset.tokenId : undefined;\n  return schema.assetFromFields({\n    'ID': tokenId,\n    'Quantity': quantity.toString(),\n    'Address': asset.tokenAddress.toLowerCase()\n  });\n}\n\nexports.getWyvernFTAsset = getWyvernFTAsset;\n/**\n * Get the Wyvern representation of a group of NFT assets\n * Sort order is enforced here. Throws if there's a duplicate.\n * @param schema The WyvernSchema needed to access these assets\n * @param assets Assets to bundle\n */\n\nfunction getWyvernBundle(schema, assets) {\n  var wyAssets = assets.map(function (asset) {\n    return getWyvernNFTAsset(schema, asset);\n  });\n  var sorters = [function (a) {\n    return a.address;\n  }, function (a) {\n    return a.id;\n  }];\n\n  var uniqueAssets = _.uniqBy(wyAssets, function (a) {\n    return sorters[0](a) + \"-\" + sorters[1](a);\n  });\n\n  if (uniqueAssets.length != wyAssets.length) {\n    throw new Error(\"Bundle can't contain duplicate assets\");\n  }\n\n  var sortedWyAssets = _.sortBy(wyAssets, sorters);\n\n  return {\n    assets: sortedWyAssets\n  };\n}\n\nexports.getWyvernBundle = getWyvernBundle;\n/**\n * Get the non-prefixed hash for the order\n * (Fixes a Wyvern typescript issue and casing issue)\n * @param order order to hash\n */\n\nfunction getOrderHash(order) {\n  var orderWithStringTypes = __assign({}, order, {\n    maker: order.maker.toLowerCase(),\n    taker: order.taker.toLowerCase(),\n    feeRecipient: order.feeRecipient.toLowerCase(),\n    side: order.side.toString(),\n    saleKind: order.saleKind.toString(),\n    howToCall: order.howToCall.toString(),\n    feeMethod: order.feeMethod.toString()\n  });\n\n  return wyvern_js_1.WyvernProtocol.getOrderHashHex(orderWithStringTypes);\n}\n\nexports.getOrderHash = getOrderHash;\n/**\n * Assign an order and a new matching order to their buy/sell sides\n * @param order Original order\n * @param matchingOrder The result of _makeMatchingOrder\n */\n\nfunction assignOrdersToSides(order, matchingOrder) {\n  var isSellOrder = order.side == types_2.OrderSide.Sell;\n  var buy;\n  var sell;\n\n  if (!isSellOrder) {\n    buy = order;\n    sell = __assign({}, matchingOrder, {\n      v: buy.v,\n      r: buy.r,\n      s: buy.s\n    });\n  } else {\n    sell = order;\n    buy = __assign({}, matchingOrder, {\n      v: sell.v,\n      r: sell.r,\n      s: sell.s\n    });\n  }\n\n  return {\n    buy: buy,\n    sell: sell\n  };\n}\n\nexports.assignOrdersToSides = assignOrdersToSides; // BROKEN\n// TODO fix this calldata for buy orders\n\nfunction canSettleOrder(client, order, matchingOrder) {\n  return __awaiter(this, void 0, void 0, function () {\n    var calldata, seller, proxy, contract;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          calldata = order.calldata.slice(0, 98) + \"1111111111111111111111111111111111111111\" + order.calldata.slice(138);\n          seller = order.side == types_2.OrderSide.Buy ? matchingOrder.maker : order.maker;\n          return [4\n          /*yield*/\n          , client._getProxy(seller)];\n\n        case 1:\n          proxy = _a.sent();\n\n          if (!proxy) {\n            console.warn(\"No proxy found for seller \" + seller);\n            return [2\n            /*return*/\n            , false];\n          }\n\n          contract = client.web3.eth.contract([proxyABI]).at(proxy);\n          return [2\n          /*return*/\n          , promisify(function (c) {\n            return contract.proxy.call(order.target, order.howToCall, calldata, {\n              from: seller\n            }, c);\n          })];\n      }\n    });\n  });\n}\n/**\n * Delay using setTimeout\n * @param ms milliseconds to wait\n */\n\n\nfunction delay(ms) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , new Promise(function (res) {\n        return setTimeout(res, ms);\n      })];\n    });\n  });\n}\n\nexports.delay = delay;\n/**\n * Encode the atomicized transfer of many assets\n * @param schema Wyvern Schema for the assets\n * @param assets List of assets to transfer\n * @param from Current address owning the assets\n * @param to Destination address\n * @param atomicizer Wyvern Atomicizer instance\n */\n\nfunction encodeAtomicizedTransfer(schema, assets, from, to, atomicizer) {\n  var transactions = assets.map(function (asset) {\n    var transfer = schema.functions.transfer(asset);\n    var calldata = encodeTransferCall(transfer, from, to);\n    return {\n      calldata: calldata,\n      address: transfer.target,\n      value: new bignumber_js_1.default(0)\n    };\n  });\n  var atomicizedCalldata = atomicizer.atomicize.getABIEncodedTransactionData(transactions.map(function (t) {\n    return t.address;\n  }), transactions.map(function (t) {\n    return t.value;\n  }), transactions.map(function (t) {\n    return new bignumber_js_1.default((t.calldata.length - 2) / 2);\n  }), // subtract 2 for '0x', divide by 2 for hex\n  transactions.map(function (t) {\n    return t.calldata;\n  }).reduce(function (x, current) {\n    return x + current.slice(2);\n  }, '0x'));\n  return {\n    calldata: atomicizedCalldata\n  };\n}\n\nexports.encodeAtomicizedTransfer = encodeAtomicizedTransfer;\n/**\n * Encode a transfer call for a Wyvern schema function\n * @param transferAbi Annotated Wyvern ABI\n * @param from From address\n * @param to To address\n */\n\nfunction encodeTransferCall(transferAbi, from, to) {\n  var parameters = transferAbi.inputs.map(function (input) {\n    switch (input.kind) {\n      case types_1.FunctionInputKind.Replaceable:\n        return to;\n\n      case types_1.FunctionInputKind.Owner:\n        return from;\n\n      case types_1.FunctionInputKind.Asset:\n      default:\n        if (input.value == null) {\n          throw new Error(\"Unsupported function input kind: \" + input.kind);\n        }\n\n        return input.value;\n    }\n  });\n  return WyvernSchemas.encodeCall(transferAbi, parameters);\n}\n\nexports.encodeTransferCall = encodeTransferCall;\n/**\n * Encode a call to a user's proxy contract\n * @param address The address for the proxy to call\n * @param howToCall How to call the addres\n * @param calldata The data to use in the call\n * @param shouldAssert Whether to assert success in the proxy call\n */\n\nfunction encodeProxyCall(address, howToCall, calldata, shouldAssert) {\n  if (shouldAssert === void 0) {\n    shouldAssert = true;\n  }\n\n  var abi = shouldAssert ? proxyAssertABI : proxyABI;\n  return WyvernSchemas.encodeCall(abi, [address, howToCall, Buffer.from(calldata.slice(2), 'hex')]);\n}\n\nexports.encodeProxyCall = encodeProxyCall;\n/**\n * Validates that an address exists, isn't null, and is properly\n * formatted for Wyvern and OpenSea\n * @param address input address\n */\n\nfunction validateAndFormatWalletAddress(web3, address) {\n  if (!address) {\n    throw new Error('No wallet address found');\n  }\n\n  if (!web3.isAddress(address)) {\n    throw new Error('Invalid wallet address');\n  }\n\n  if (address == exports.NULL_ADDRESS) {\n    throw new Error('Wallet cannot be the null address');\n  }\n\n  return address.toLowerCase();\n}\n\nexports.validateAndFormatWalletAddress = validateAndFormatWalletAddress;\n/**\n * Notify developer when a pattern will be deprecated\n * @param msg message to log to console\n */\n\nfunction onDeprecated(msg) {\n  console.warn(\"DEPRECATION NOTICE: \" + msg);\n}\n\nexports.onDeprecated = onDeprecated;\n/**\n * Get special-case approval addresses for an erc721 contract\n * @param erc721Contract contract to check\n */\n\nfunction getNonCompliantApprovalAddress(erc721Contract, tokenId, accountAddress) {\n  return __awaiter(this, void 0, void 0, function () {\n    var onError, results;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          onError = function (e) {\n            throw e;\n          };\n\n          return [4\n          /*yield*/\n          , Promise.all([// CRYPTOKITTIES check\n          promisifyCall(function (c) {\n            return erc721Contract.kittyIndexToApproved.call(tokenId, c);\n          }, onError), // Etherbots check\n          promisifyCall(function (c) {\n            return erc721Contract.partIndexToApproved.call(tokenId, c);\n          }, onError)])];\n\n        case 1:\n          results = _a.sent();\n          return [2\n          /*return*/\n          , _.compact(results)[0]];\n      }\n    });\n  });\n}\n\nexports.getNonCompliantApprovalAddress = getNonCompliantApprovalAddress;","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _a;\nvar _this = this;\nvar bignumber_js_1 = require(\"bignumber.js\");\nvar wyvern_js_1 = require(\"wyvern-js\");\nvar ethUtil = require(\"ethereumjs-util\");\nvar _ = require(\"lodash\");\nvar Web3 = require(\"web3\");\nvar WyvernSchemas = require(\"wyvern-schemas\");\nvar types_1 = require(\"wyvern-schemas/dist/types\");\nvar contracts_1 = require(\"./contracts\");\nvar types_2 = require(\"./types\");\nexports.NULL_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS;\nexports.NULL_BLOCK_HASH = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexports.OPENSEA_FEE_RECIPIENT = '0x5b3256965e7c3cf26e11fcaf296dfc8807c01073';\nexports.DEP_INFURA_KEY = 'e8695bce67944848aa95459fac052f8e';\nexports.MAINNET_PROVIDER_URL = 'https://eth-mainnet.alchemyapi.io/jsonrpc/y5dLONzfAJh-oCY02DCP3UWCT2pSEXMo';\nexports.RINKEBY_PROVIDER_URL = 'https://eth-rinkeby.alchemyapi.io/jsonrpc/-yDg7wmgGw5LdsP4p4kyxRYuDzCkXtoI';\nexports.INVERSE_BASIS_POINT = 10000;\nexports.MAX_UINT_256 = wyvern_js_1.WyvernProtocol.MAX_UINT_256;\nexports.WYVERN_EXCHANGE_ADDRESS_MAINNET = \"0x7be8076f4ea4a4ad08075c2508e481d6c946d12b\";\nexports.WYVERN_EXCHANGE_ADDRESS_RINKEBY = \"0x5206e78b21ce315ce284fb24cf05e0585a93b1d9\";\nexports.ENJIN_COIN_ADDRESS = '0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c';\nexports.ENJIN_ADDRESS = '0xfaaFDc07907ff5120a76b34b731b278c38d6043C';\nexports.ENJIN_LEGACY_ADDRESS = '0x8562c38485B1E8cCd82E44F89823dA76C98eb0Ab';\nexports.CK_ADDRESS = '0x06012c8cf97bead5deae237070f9587f8e7a266d';\nexports.CK_RINKEBY_ADDRESS = '0x16baf0de678e52367adc69fd067e5edd1d33e3bf';\nexports.WRAPPED_NFT_FACTORY_ADDRESS_MAINNET = '0xf11b5815b143472b7f7c52af0bfa6c6a2c8f40e1';\nexports.WRAPPED_NFT_FACTORY_ADDRESS_RINKEBY = '0x94c71c87244b862cfd64d36af468309e4804ec09';\nexports.WRAPPED_NFT_LIQUIDATION_PROXY_ADDRESS_MAINNET = '0x995835145dd85c012f3e2d7d5561abd626658c04';\nexports.WRAPPED_NFT_LIQUIDATION_PROXY_ADDRESS_RINKEBY = '0xaa775Eb452353aB17f7cf182915667c2598D43d3';\nexports.UNISWAP_FACTORY_ADDRESS_MAINNET = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95';\nexports.UNISWAP_FACTORY_ADDRESS_RINKEBY = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36';\nexports.DEFAULT_WRAPPED_NFT_LIQUIDATION_UNISWAP_SLIPPAGE_IN_BASIS_POINTS = 1000;\nexports.CHEEZE_WIZARDS_GUILD_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS; // TODO: Update this address once Dapper has deployed their mainnet contracts\nexports.CHEEZE_WIZARDS_GUILD_RINKEBY_ADDRESS = '0x095731b672b76b00A0b5cb9D8258CD3F6E976cB2';\nexports.CHEEZE_WIZARDS_BASIC_TOURNAMENT_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS; // TODO: Update this address once Dapper has deployed their mainnet contracts\nexports.CHEEZE_WIZARDS_BASIC_TOURNAMENT_RINKEBY_ADDRESS = '0x8852f5F7d1BB867AAf8fdBB0851Aa431d1df5ca1';\nexports.DECENTRALAND_ESTATE_ADDRESS = '0x959e104e1a4db6317fa58f8295f586e1a978c297';\nexports.STATIC_CALL_TX_ORIGIN_ADDRESS = '0xbff6ade67e3717101dd8d0a7f3de1bf6623a2ba8';\nexports.STATIC_CALL_TX_ORIGIN_RINKEBY_ADDRESS = '0xe291abab95677bc652a44f973a8e06d48464e11c';\nexports.STATIC_CALL_CHEEZE_WIZARDS_ADDRESS = wyvern_js_1.WyvernProtocol.NULL_ADDRESS; // TODO: Deploy this address once Dapper has deployed their mainnet contracts\nexports.STATIC_CALL_CHEEZE_WIZARDS_RINKEBY_ADDRESS = '0x8a640bdf8886dd6ca1fad9f22382b50deeacde08';\nexports.STATIC_CALL_DECENTRALAND_ESTATES_ADDRESS = '0x93c3cd7ba04556d2e3d7b8106ce0f83e24a87a7e';\nexports.DEFAULT_BUYER_FEE_BASIS_POINTS = 0;\nexports.DEFAULT_SELLER_FEE_BASIS_POINTS = 250;\nexports.OPENSEA_SELLER_BOUNTY_BASIS_POINTS = 100;\nexports.DEFAULT_MAX_BOUNTY = exports.DEFAULT_SELLER_FEE_BASIS_POINTS;\nexports.MAX_ERROR_LENGTH = 120;\nexports.MIN_EXPIRATION_SECONDS = 10;\nexports.ORDER_MATCHING_LATENCY_SECONDS = 60 * 60 * 24 * 7;\nexports.SELL_ORDER_BATCH_SIZE = 3;\nexports.DEFAULT_GAS_INCREASE_FACTOR = 1.1;\nvar proxyABI = { 'constant': false, 'inputs': [{ 'name': 'dest', 'type': 'address' }, { 'name': 'howToCall', 'type': 'uint8' }, { 'name': 'calldata', 'type': 'bytes' }], 'name': 'proxy', 'outputs': [{ 'name': 'success', 'type': 'bool' }], 'payable': false, 'stateMutability': 'nonpayable', 'type': 'function' };\nvar proxyAssertABI = { 'constant': false, 'inputs': [{ 'name': 'dest', 'type': 'address' }, { 'name': 'howToCall', 'type': 'uint8' }, { 'name': 'calldata', 'type': 'bytes' }], 'name': 'proxyAssert', 'outputs': [], 'payable': false, 'stateMutability': 'nonpayable', 'type': 'function' };\nexports.annotateERC721TransferABI = function (asset) { return ({\n    \"constant\": false,\n    \"inputs\": [\n        {\n            \"name\": \"_to\",\n            \"type\": \"address\",\n            \"kind\": types_1.FunctionInputKind.Replaceable\n        },\n        {\n            \"name\": \"_tokenId\",\n            \"type\": \"uint256\",\n            \"kind\": types_1.FunctionInputKind.Asset,\n            \"value\": asset.id\n        }\n    ],\n    \"target\": asset.address,\n    \"name\": \"transfer\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": types_1.StateMutability.Nonpayable,\n    \"type\": Web3.AbiType.Function\n}); };\nexports.annotateERC20TransferABI = function (asset) { return ({\n    \"constant\": false,\n    \"inputs\": [\n        {\n            \"name\": \"_to\",\n            \"type\": \"address\",\n            \"kind\": types_1.FunctionInputKind.Replaceable\n        },\n        {\n            \"name\": \"_amount\",\n            \"type\": \"uint256\",\n            \"kind\": types_1.FunctionInputKind.Count,\n            \"value\": asset.quantity\n        }\n    ],\n    \"target\": asset.address,\n    \"name\": \"transfer\",\n    \"outputs\": [\n        {\n            \"name\": \"success\",\n            \"type\": \"bool\",\n            \"kind\": types_1.FunctionOutputKind.Other\n        }\n    ],\n    \"payable\": false,\n    \"stateMutability\": types_1.StateMutability.Nonpayable,\n    \"type\": Web3.AbiType.Function\n}); };\nvar SCHEMA_NAME_TO_ASSET_CONTRACT_TYPE = (_a = {},\n    _a[types_2.WyvernSchemaName.ERC721] = types_2.AssetContractType.NonFungible,\n    _a[types_2.WyvernSchemaName.ERC1155] = types_2.AssetContractType.SemiFungible,\n    _a[types_2.WyvernSchemaName.ERC20] = types_2.AssetContractType.Fungible,\n    _a[types_2.WyvernSchemaName.LegacyEnjin] = types_2.AssetContractType.SemiFungible,\n    _a[types_2.WyvernSchemaName.ENSShortNameAuction] = types_2.AssetContractType.NonFungible,\n    _a);\n// OTHER\nvar txCallbacks = {};\n/**\n * Promisify a callback-syntax web3 function\n * @param inner callback function that accepts a Web3 callback function and passes\n * it to the Web3 function\n */\nfunction promisify(inner) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    return inner(function (err, res) {\n                        if (err) {\n                            reject(err);\n                        }\n                        resolve(res);\n                    });\n                })];\n        });\n    });\n}\n/**\n * Promisify a call a method on a contract,\n * handling Parity errors. Returns '0x' if error.\n * Note that if T is not \"string\", this may return a falsey\n * value when the contract doesn't support the method (e.g. `isApprovedForAll`).\n * @param callback An anonymous function that takes a web3 callback\n * and returns a Web3 Contract's call result, e.g. `c => erc721.ownerOf(3, c)`\n * @param onError callback when user denies transaction\n */\nfunction promisifyCall(callback, onError) {\n    return __awaiter(this, void 0, void 0, function () {\n        var result, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, promisify(callback)];\n                case 1:\n                    result = _a.sent();\n                    if (result == '0x') {\n                        // Geth compatibility\n                        return [2 /*return*/, undefined];\n                    }\n                    return [2 /*return*/, result];\n                case 2:\n                    error_1 = _a.sent();\n                    // Probably method not found, and web3 is a Parity node\n                    if (onError) {\n                        onError(error_1);\n                    }\n                    else {\n                        console.error(error_1);\n                    }\n                    return [2 /*return*/, undefined];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.promisifyCall = promisifyCall;\nvar track = function (web3, txHash, onFinalized) {\n    if (txCallbacks[txHash]) {\n        txCallbacks[txHash].push(onFinalized);\n    }\n    else {\n        txCallbacks[txHash] = [onFinalized];\n        var poll_1 = function () { return __awaiter(_this, void 0, void 0, function () {\n            var tx, receipt, status_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, promisify(function (c) { return web3.eth.getTransaction(txHash, c); })];\n                    case 1:\n                        tx = _a.sent();\n                        if (!(tx && tx.blockHash && tx.blockHash !== exports.NULL_BLOCK_HASH)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, promisify(function (c) { return web3.eth.getTransactionReceipt(txHash, c); })];\n                    case 2:\n                        receipt = _a.sent();\n                        if (!receipt) {\n                            // Hack: assume success if no receipt\n                            console.warn('No receipt found for ', txHash);\n                        }\n                        status_1 = receipt\n                            ? parseInt((receipt.status || \"0\").toString()) == 1\n                            : true;\n                        txCallbacks[txHash].map(function (f) { return f(status_1); });\n                        delete txCallbacks[txHash];\n                        return [3 /*break*/, 4];\n                    case 3:\n                        setTimeout(poll_1, 1000);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        poll_1().catch();\n    }\n};\nexports.confirmTransaction = function (web3, txHash) { return __awaiter(_this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n                track(web3, txHash, function (didSucceed) {\n                    if (didSucceed) {\n                        resolve(\"Transaction complete!\");\n                    }\n                    else {\n                        reject(new Error(\"Transaction failed :( You might have already completed this action. See more on the mainnet at etherscan.io/txn/\" + txHash));\n                    }\n                });\n            })];\n    });\n}); };\nexports.assetFromJSON = function (asset) {\n    var isAnimated = asset.image_url && asset.image_url.endsWith('.gif');\n    var isSvg = asset.image_url && asset.image_url.endsWith('.svg');\n    var fromJSON = {\n        tokenId: asset.token_id.toString(),\n        tokenAddress: asset.asset_contract.address,\n        name: asset.name,\n        description: asset.description,\n        owner: asset.owner,\n        assetContract: exports.assetContractFromJSON(asset.asset_contract),\n        orders: asset.orders ? asset.orders.map(exports.orderFromJSON) : null,\n        sellOrders: asset.sell_orders ? asset.sell_orders.map(exports.orderFromJSON) : null,\n        buyOrders: asset.buy_orders ? asset.buy_orders.map(exports.orderFromJSON) : null,\n        isPresale: asset.is_presale,\n        // Don't use previews if it's a special image\n        imageUrl: isAnimated || isSvg\n            ? asset.image_url\n            : (asset.image_preview_url || asset.image_url),\n        imagePreviewUrl: asset.image_preview_url,\n        imageUrlOriginal: asset.image_original_url,\n        imageUrlThumbnail: asset.image_thumbnail_url,\n        externalLink: asset.external_link,\n        openseaLink: asset.permalink,\n        traits: asset.traits,\n        numSales: asset.num_sales,\n        lastSale: asset.last_sale,\n        backgroundColor: asset.background_color ? \"#\" + asset.background_color : null,\n        transferFee: asset.transfer_fee\n            ? makeBigNumber(asset.transfer_fee)\n            : null,\n        transferFeePaymentToken: asset.transfer_fee_payment_token\n            ? exports.tokenFromJSON(asset.transfer_fee_payment_token)\n            : null,\n    };\n    // If orders were included, put them in sell/buy order groups\n    if (fromJSON.orders && !fromJSON.sellOrders) {\n        fromJSON.sellOrders = fromJSON.orders.filter(function (o) { return o.side == types_2.OrderSide.Sell; });\n    }\n    if (fromJSON.orders && !fromJSON.buyOrders) {\n        fromJSON.buyOrders = fromJSON.orders.filter(function (o) { return o.side == types_2.OrderSide.Buy; });\n    }\n    return fromJSON;\n};\nexports.assetBundleFromJSON = function (asset_bundle) {\n    var fromJSON = {\n        maker: asset_bundle.maker,\n        assets: asset_bundle.assets.map(exports.assetFromJSON),\n        assetContract: asset_bundle.asset_contract\n            ? exports.assetContractFromJSON(asset_bundle.asset_contract)\n            : undefined,\n        name: asset_bundle.name,\n        slug: asset_bundle.slug,\n        description: asset_bundle.description,\n        externalLink: asset_bundle.external_link,\n        permalink: asset_bundle.permalink,\n        sellOrders: asset_bundle.sell_orders ? asset_bundle.sell_orders.map(exports.orderFromJSON) : null\n    };\n    return fromJSON;\n};\nexports.assetContractFromJSON = function (asset_contract) {\n    return {\n        name: asset_contract.name,\n        description: asset_contract.description,\n        type: asset_contract.asset_contract_type,\n        schemaName: asset_contract.schema_name,\n        address: asset_contract.address,\n        tokenSymbol: asset_contract.symbol,\n        buyerFeeBasisPoints: asset_contract.buyer_fee_basis_points,\n        sellerFeeBasisPoints: asset_contract.seller_fee_basis_points,\n        openseaBuyerFeeBasisPoints: asset_contract.opensea_buyer_fee_basis_points,\n        openseaSellerFeeBasisPoints: asset_contract.opensea_seller_fee_basis_points,\n        devBuyerFeeBasisPoints: asset_contract.dev_buyer_fee_basis_points,\n        devSellerFeeBasisPoints: asset_contract.dev_seller_fee_basis_points,\n        imageUrl: asset_contract.image_url,\n        stats: asset_contract.stats,\n        traits: asset_contract.traits,\n        externalLink: asset_contract.external_link,\n        wikiLink: asset_contract.wiki_link,\n    };\n};\nexports.tokenFromJSON = function (token) {\n    var fromJSON = {\n        name: token.name,\n        symbol: token.symbol,\n        decimals: token.decimals,\n        address: token.address,\n        imageUrl: token.image_url,\n        ethPrice: token.eth_price\n    };\n    return fromJSON;\n};\nexports.orderFromJSON = function (order) {\n    var createdDate = new Date(order.created_date + \"Z\");\n    var fromJSON = {\n        hash: order.order_hash || order.hash,\n        cancelledOrFinalized: order.cancelled || order.finalized,\n        markedInvalid: order.marked_invalid,\n        metadata: order.metadata,\n        quantity: new bignumber_js_1.default(order.quantity || 1),\n        exchange: order.exchange,\n        makerAccount: order.maker,\n        takerAccount: order.maker,\n        // Use string address to conform to Wyvern Order schema\n        maker: order.maker.address,\n        taker: order.taker.address,\n        makerRelayerFee: new bignumber_js_1.default(order.maker_relayer_fee),\n        takerRelayerFee: new bignumber_js_1.default(order.taker_relayer_fee),\n        makerProtocolFee: new bignumber_js_1.default(order.maker_protocol_fee),\n        takerProtocolFee: new bignumber_js_1.default(order.taker_protocol_fee),\n        makerReferrerFee: new bignumber_js_1.default(order.maker_referrer_fee || 0),\n        waitingForBestCounterOrder: order.fee_recipient.address == exports.NULL_ADDRESS,\n        feeMethod: order.fee_method,\n        feeRecipientAccount: order.fee_recipient,\n        feeRecipient: order.fee_recipient.address,\n        side: order.side,\n        saleKind: order.sale_kind,\n        target: order.target,\n        howToCall: order.how_to_call,\n        calldata: order.calldata,\n        replacementPattern: order.replacement_pattern,\n        staticTarget: order.static_target,\n        staticExtradata: order.static_extradata,\n        paymentToken: order.payment_token,\n        basePrice: new bignumber_js_1.default(order.base_price),\n        extra: new bignumber_js_1.default(order.extra),\n        currentBounty: new bignumber_js_1.default(order.current_bounty || 0),\n        currentPrice: new bignumber_js_1.default(order.current_price || 0),\n        createdTime: new bignumber_js_1.default(Math.round(createdDate.getTime() / 1000)),\n        listingTime: new bignumber_js_1.default(order.listing_time),\n        expirationTime: new bignumber_js_1.default(order.expiration_time),\n        salt: new bignumber_js_1.default(order.salt),\n        v: parseInt(order.v),\n        r: order.r,\n        s: order.s,\n        paymentTokenContract: order.payment_token_contract ? exports.tokenFromJSON(order.payment_token_contract) : undefined,\n        asset: order.asset ? exports.assetFromJSON(order.asset) : undefined,\n        assetBundle: order.asset_bundle ? exports.assetBundleFromJSON(order.asset_bundle) : undefined,\n    };\n    // Use client-side price calc, to account for buyer fee (not added by server) and latency\n    fromJSON.currentPrice = estimateCurrentPrice(fromJSON);\n    return fromJSON;\n};\n/**\n * Convert an order to JSON, hashing it as well if necessary\n * @param order order (hashed or unhashed)\n */\nexports.orderToJSON = function (order) {\n    var asJSON = {\n        exchange: order.exchange.toLowerCase(),\n        maker: order.maker.toLowerCase(),\n        taker: order.taker.toLowerCase(),\n        makerRelayerFee: order.makerRelayerFee.toString(),\n        takerRelayerFee: order.takerRelayerFee.toString(),\n        makerProtocolFee: order.makerProtocolFee.toString(),\n        takerProtocolFee: order.takerProtocolFee.toString(),\n        makerReferrerFee: order.makerReferrerFee.toString(),\n        feeMethod: order.feeMethod,\n        feeRecipient: order.feeRecipient.toLowerCase(),\n        side: order.side,\n        saleKind: order.saleKind,\n        target: order.target.toLowerCase(),\n        howToCall: order.howToCall,\n        calldata: order.calldata,\n        replacementPattern: order.replacementPattern,\n        staticTarget: order.staticTarget.toLowerCase(),\n        staticExtradata: order.staticExtradata,\n        paymentToken: order.paymentToken.toLowerCase(),\n        quantity: order.quantity.toString(),\n        basePrice: order.basePrice.toString(),\n        extra: order.extra.toString(),\n        createdTime: order.createdTime\n            ? order.createdTime.toString()\n            : undefined,\n        listingTime: order.listingTime.toString(),\n        expirationTime: order.expirationTime.toString(),\n        salt: order.salt.toString(),\n        metadata: order.metadata,\n        v: order.v,\n        r: order.r,\n        s: order.s,\n        hash: order.hash\n    };\n    return asJSON;\n};\n/**\n * Sign messages using web3 personal signatures\n * @param web3 Web3 instance\n * @param message message to sign\n * @param signerAddress web3 address signing the message\n * @returns A signature if provider can sign, otherwise null\n */\nfunction personalSignAsync(web3, message, signerAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var signature, error;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (web3.currentProvider.isDapper) {\n                        // Optimize Dapper - don't try signature\n                        return [2 /*return*/, null];\n                    }\n                    return [4 /*yield*/, promisify(function (c) { return web3.currentProvider.sendAsync({\n                            method: 'personal_sign',\n                            params: [message, signerAddress],\n                            from: signerAddress,\n                            id: new Date().getTime()\n                        }, c); })];\n                case 1:\n                    signature = _a.sent();\n                    error = signature.error;\n                    if (error) {\n                        return [2 /*return*/, null];\n                    }\n                    try {\n                        return [2 /*return*/, parseSignatureHex(signature.result)];\n                    }\n                    catch (error) {\n                        // Dapper wallet signature isn't parseable\n                        return [2 /*return*/, null];\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.personalSignAsync = personalSignAsync;\n/**\n * Special fixes for making BigNumbers using web3 results\n * @param arg An arg or the result of a web3 call to turn into a BigNumber\n */\nfunction makeBigNumber(arg) {\n    // Zero sometimes returned as 0x from contracts\n    if (arg === '0x') {\n        arg = 0;\n    }\n    // fix \"new BigNumber() number type has more than 15 significant digits\"\n    arg = arg.toString();\n    return new bignumber_js_1.default(arg);\n}\nexports.makeBigNumber = makeBigNumber;\n/**\n * Send a transaction to the blockchain and optionally confirm it\n * @param web3 Web3 instance\n * @param param0 __namedParameters\n * @param from address sending transaction\n * @param to destination contract address\n * @param data data to send to contract\n * @param gasPrice gas price to use. If unspecified, uses web3 default (mean gas price)\n * @param value value in ETH to send with data. Defaults to 0\n * @param onError callback when user denies transaction\n */\nfunction sendRawTransaction(web3, _a, onError) {\n    var from = _a.from, to = _a.to, data = _a.data, gasPrice = _a.gasPrice, _b = _a.value, value = _b === void 0 ? 0 : _b, gas = _a.gas;\n    return __awaiter(this, void 0, void 0, function () {\n        var txHashRes, error_2;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    if (!(gas == null)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, estimateGas(web3, { from: from, to: to, data: data, value: value })];\n                case 1:\n                    // This gas cannot be increased due to an ethjs error\n                    gas = _c.sent();\n                    _c.label = 2;\n                case 2:\n                    _c.trys.push([2, 4, , 5]);\n                    return [4 /*yield*/, promisify(function (c) { return web3.eth.sendTransaction({\n                            from: from,\n                            to: to,\n                            value: value,\n                            data: data,\n                            gas: gas,\n                            gasPrice: gasPrice\n                        }, c); })];\n                case 3:\n                    txHashRes = _c.sent();\n                    return [2 /*return*/, txHashRes.toString()];\n                case 4:\n                    error_2 = _c.sent();\n                    onError(error_2);\n                    throw error_2;\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.sendRawTransaction = sendRawTransaction;\n/**\n * Call a method on a contract, sending arbitrary data and\n * handling Parity errors. Returns '0x' if error.\n * @param web3 Web3 instance\n * @param param0 __namedParameters\n * @param from address sending call\n * @param to destination contract address\n * @param data data to send to contract\n * @param onError callback when user denies transaction\n */\nfunction rawCall(web3, _a, onError) {\n    var from = _a.from, to = _a.to, data = _a.data;\n    return __awaiter(this, void 0, void 0, function () {\n        var result, error_3;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, promisify(function (c) { return web3.eth.call({\n                            from: from,\n                            to: to,\n                            data: data\n                        }, c); })];\n                case 1:\n                    result = _b.sent();\n                    return [2 /*return*/, result];\n                case 2:\n                    error_3 = _b.sent();\n                    // Probably method not found, and web3 is a Parity node\n                    if (onError) {\n                        onError(error_3);\n                    }\n                    // Backwards compatibility with Geth nodes\n                    return [2 /*return*/, '0x'];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.rawCall = rawCall;\n/**\n * Estimate Gas usage for a transaction\n * @param web3 Web3 instance\n * @param from address sending transaction\n * @param to destination contract address\n * @param data data to send to contract\n * @param value value in ETH to send with data\n */\nfunction estimateGas(web3, _a) {\n    var from = _a.from, to = _a.to, data = _a.data, _b = _a.value, value = _b === void 0 ? 0 : _b;\n    return __awaiter(this, void 0, void 0, function () {\n        var amount;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0: return [4 /*yield*/, promisify(function (c) { return web3.eth.estimateGas({\n                        from: from,\n                        to: to,\n                        value: value,\n                        data: data,\n                    }, c); })];\n                case 1:\n                    amount = _c.sent();\n                    return [2 /*return*/, amount];\n            }\n        });\n    });\n}\nexports.estimateGas = estimateGas;\n/**\n * Get mean gas price for sending a txn, in wei\n * @param web3 Web3 instance\n */\nfunction getCurrentGasPrice(web3) {\n    return __awaiter(this, void 0, void 0, function () {\n        var meanGas;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, promisify(function (c) { return web3.eth.getGasPrice(c); })];\n                case 1:\n                    meanGas = _a.sent();\n                    return [2 /*return*/, meanGas];\n            }\n        });\n    });\n}\nexports.getCurrentGasPrice = getCurrentGasPrice;\n/**\n * Get current transfer fees for an asset\n * @param web3 Web3 instance\n * @param asset The asset to check for transfer fees\n */\nfunction getTransferFeeSettings(web3, _a) {\n    var asset = _a.asset, accountAddress = _a.accountAddress;\n    return __awaiter(this, void 0, void 0, function () {\n        var transferFee, transferFeeTokenAddress, feeContract_1, params;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!(asset.tokenAddress.toLowerCase() == exports.ENJIN_ADDRESS.toLowerCase())) return [3 /*break*/, 2];\n                    feeContract_1 = web3.eth.contract(contracts_1.ERC1155).at(asset.tokenAddress);\n                    return [4 /*yield*/, promisifyCall(function (c) { return feeContract_1.transferSettings(asset.tokenId, { from: accountAddress }, c); })];\n                case 1:\n                    params = _b.sent();\n                    if (params) {\n                        transferFee = makeBigNumber(params[3]);\n                        if (params[2] == 0) {\n                            transferFeeTokenAddress = exports.ENJIN_COIN_ADDRESS;\n                        }\n                    }\n                    _b.label = 2;\n                case 2: return [2 /*return*/, { transferFee: transferFee, transferFeeTokenAddress: transferFeeTokenAddress }];\n            }\n        });\n    });\n}\nexports.getTransferFeeSettings = getTransferFeeSettings;\n// sourced from 0x.js:\n// https://github.com/ProjectWyvern/wyvern-js/blob/39999cb93ce5d80ea90b4382182d1bd4339a9c6c/src/utils/signature_utils.ts\nfunction parseSignatureHex(signature) {\n    // HACK: There is no consensus on whether the signatureHex string should be formatted as\n    // v + r + s OR r + s + v, and different clients (even different versions of the same client)\n    // return the signature params in different orders. In order to support all client implementations,\n    // we parse the signature in both ways, and evaluate if either one is a valid signature.\n    var validVParamValues = [27, 28];\n    var ecSignatureRSV = _parseSignatureHexAsRSV(signature);\n    if (_.includes(validVParamValues, ecSignatureRSV.v)) {\n        return ecSignatureRSV;\n    }\n    // For older clients\n    var ecSignatureVRS = _parseSignatureHexAsVRS(signature);\n    if (_.includes(validVParamValues, ecSignatureVRS.v)) {\n        return ecSignatureVRS;\n    }\n    throw new Error('Invalid signature');\n    function _parseSignatureHexAsVRS(signatureHex) {\n        var signatureBuffer = ethUtil.toBuffer(signatureHex);\n        var v = signatureBuffer[0];\n        if (v < 27) {\n            v += 27;\n        }\n        var r = signatureBuffer.slice(1, 33);\n        var s = signatureBuffer.slice(33, 65);\n        var ecSignature = {\n            v: v,\n            r: ethUtil.bufferToHex(r),\n            s: ethUtil.bufferToHex(s),\n        };\n        return ecSignature;\n    }\n    function _parseSignatureHexAsRSV(signatureHex) {\n        var _a = ethUtil.fromRpcSig(signatureHex), v = _a.v, r = _a.r, s = _a.s;\n        var ecSignature = {\n            v: v,\n            r: ethUtil.bufferToHex(r),\n            s: ethUtil.bufferToHex(s),\n        };\n        return ecSignature;\n    }\n}\n/**\n * Estimates the price of an order\n * @param order The order to estimate price on\n * @param secondsToBacktrack The number of seconds to subtract on current time,\n *  to fix race conditions\n * @param shouldRoundUp Whether to round up fractional wei\n */\nfunction estimateCurrentPrice(order, secondsToBacktrack, shouldRoundUp) {\n    if (secondsToBacktrack === void 0) { secondsToBacktrack = 30; }\n    if (shouldRoundUp === void 0) { shouldRoundUp = true; }\n    var basePrice = order.basePrice, listingTime = order.listingTime, expirationTime = order.expirationTime, extra = order.extra;\n    var side = order.side, takerRelayerFee = order.takerRelayerFee, makerRelayerFee = order.makerRelayerFee, saleKind = order.saleKind, feeRecipient = order.feeRecipient;\n    var now = new bignumber_js_1.default(Math.round(Date.now() / 1000)).minus(secondsToBacktrack);\n    basePrice = new bignumber_js_1.default(basePrice);\n    listingTime = new bignumber_js_1.default(listingTime);\n    expirationTime = new bignumber_js_1.default(expirationTime);\n    extra = new bignumber_js_1.default(extra);\n    var exactPrice = basePrice;\n    if (saleKind == types_2.SaleKind.FixedPrice) {\n        // Do nothing, price is correct\n    }\n    else if (saleKind == types_2.SaleKind.DutchAuction) {\n        var diff = extra.times(now.minus(listingTime))\n            .dividedBy(expirationTime.minus(listingTime));\n        exactPrice = side == types_2.OrderSide.Sell\n            /* Sell-side - start price: basePrice. End price: basePrice - extra. */\n            ? basePrice.minus(diff)\n            /* Buy-side - start price: basePrice. End price: basePrice + extra. */\n            : basePrice.plus(diff);\n    }\n    // Add buyer fee\n    if (side == types_2.OrderSide.Sell) {\n        // Buyer fee increases sale price\n        var buyerFeeBPS = order.waitingForBestCounterOrder\n            ? makerRelayerFee\n            : takerRelayerFee;\n        exactPrice = exactPrice.times(+buyerFeeBPS / exports.INVERSE_BASIS_POINT + 1);\n    }\n    return shouldRoundUp ? exactPrice.ceil() : exactPrice;\n}\nexports.estimateCurrentPrice = estimateCurrentPrice;\n/**\n * Wrapper function for getting generic Wyvern assets from OpenSea assets\n * @param schema Wyvern schema for the asset\n * @param asset The fungible or nonfungible asset to format\n */\nfunction getWyvernAsset(schema, asset, quantity) {\n    if (quantity === void 0) { quantity = new bignumber_js_1.default(1); }\n    if (SCHEMA_NAME_TO_ASSET_CONTRACT_TYPE[schema.name] == types_2.AssetContractType.NonFungible) {\n        return getWyvernNFTAsset(schema, asset);\n    }\n    else {\n        return getWyvernFTAsset(schema, asset, quantity);\n    }\n}\nexports.getWyvernAsset = getWyvernAsset;\n/**\n * Get the Wyvern representation of an NFT asset\n * @param schema The WyvernSchema needed to access this asset\n * @param asset The asset\n */\nfunction getWyvernNFTAsset(schema, asset) {\n    return schema.assetFromFields({\n        'ID': asset.tokenId != null\n            ? asset.tokenId.toString()\n            : undefined,\n        'Address': asset.tokenAddress.toLowerCase(),\n        'Name': asset.name,\n    });\n}\nexports.getWyvernNFTAsset = getWyvernNFTAsset;\n/**\n * Get the Wyvern representation of a fungible asset\n * @param schema The WyvernSchema needed to access this asset\n * @param asset The asset to trade\n * @param quantity The number of items to trade\n */\nfunction getWyvernFTAsset(schema, asset, quantity) {\n    var tokenId = asset.tokenId != null\n        ? asset.tokenId\n        : undefined;\n    return schema.assetFromFields({\n        'ID': tokenId,\n        'Quantity': quantity.toString(),\n        'Address': asset.tokenAddress.toLowerCase(),\n    });\n}\nexports.getWyvernFTAsset = getWyvernFTAsset;\n/**\n * Get the Wyvern representation of a group of NFT assets\n * Sort order is enforced here. Throws if there's a duplicate.\n * @param schema The WyvernSchema needed to access these assets\n * @param assets Assets to bundle\n */\nfunction getWyvernBundle(schema, assets) {\n    var wyAssets = assets.map(function (asset) { return getWyvernNFTAsset(schema, asset); });\n    var sorters = [function (a) { return a.address; }, function (a) { return a.id; }];\n    var uniqueAssets = _.uniqBy(wyAssets, function (a) { return sorters[0](a) + \"-\" + sorters[1](a); });\n    if (uniqueAssets.length != wyAssets.length) {\n        throw new Error(\"Bundle can't contain duplicate assets\");\n    }\n    var sortedWyAssets = _.sortBy(wyAssets, sorters);\n    return {\n        assets: sortedWyAssets\n    };\n}\nexports.getWyvernBundle = getWyvernBundle;\n/**\n * Get the non-prefixed hash for the order\n * (Fixes a Wyvern typescript issue and casing issue)\n * @param order order to hash\n */\nfunction getOrderHash(order) {\n    var orderWithStringTypes = __assign({}, order, { maker: order.maker.toLowerCase(), taker: order.taker.toLowerCase(), feeRecipient: order.feeRecipient.toLowerCase(), side: order.side.toString(), saleKind: order.saleKind.toString(), howToCall: order.howToCall.toString(), feeMethod: order.feeMethod.toString() });\n    return wyvern_js_1.WyvernProtocol.getOrderHashHex(orderWithStringTypes);\n}\nexports.getOrderHash = getOrderHash;\n/**\n * Assign an order and a new matching order to their buy/sell sides\n * @param order Original order\n * @param matchingOrder The result of _makeMatchingOrder\n */\nfunction assignOrdersToSides(order, matchingOrder) {\n    var isSellOrder = order.side == types_2.OrderSide.Sell;\n    var buy;\n    var sell;\n    if (!isSellOrder) {\n        buy = order;\n        sell = __assign({}, matchingOrder, { v: buy.v, r: buy.r, s: buy.s });\n    }\n    else {\n        sell = order;\n        buy = __assign({}, matchingOrder, { v: sell.v, r: sell.r, s: sell.s });\n    }\n    return { buy: buy, sell: sell };\n}\nexports.assignOrdersToSides = assignOrdersToSides;\n// BROKEN\n// TODO fix this calldata for buy orders\nfunction canSettleOrder(client, order, matchingOrder) {\n    return __awaiter(this, void 0, void 0, function () {\n        var calldata, seller, proxy, contract;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    calldata = order.calldata.slice(0, 98) + \"1111111111111111111111111111111111111111\" + order.calldata.slice(138);\n                    seller = order.side == types_2.OrderSide.Buy ? matchingOrder.maker : order.maker;\n                    return [4 /*yield*/, client._getProxy(seller)];\n                case 1:\n                    proxy = _a.sent();\n                    if (!proxy) {\n                        console.warn(\"No proxy found for seller \" + seller);\n                        return [2 /*return*/, false];\n                    }\n                    contract = (client.web3.eth.contract([proxyABI])).at(proxy);\n                    return [2 /*return*/, promisify(function (c) {\n                            return contract.proxy.call(order.target, order.howToCall, calldata, { from: seller }, c);\n                        })];\n            }\n        });\n    });\n}\n/**\n * Delay using setTimeout\n * @param ms milliseconds to wait\n */\nfunction delay(ms) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (res) { return setTimeout(res, ms); })];\n        });\n    });\n}\nexports.delay = delay;\n/**\n * Encode the atomicized transfer of many assets\n * @param schema Wyvern Schema for the assets\n * @param assets List of assets to transfer\n * @param from Current address owning the assets\n * @param to Destination address\n * @param atomicizer Wyvern Atomicizer instance\n */\nfunction encodeAtomicizedTransfer(schema, assets, from, to, atomicizer) {\n    var transactions = assets.map(function (asset) {\n        var transfer = schema.functions.transfer(asset);\n        var calldata = encodeTransferCall(transfer, from, to);\n        return {\n            calldata: calldata,\n            address: transfer.target,\n            value: new bignumber_js_1.default(0),\n        };\n    });\n    var atomicizedCalldata = atomicizer.atomicize.getABIEncodedTransactionData(transactions.map(function (t) { return t.address; }), transactions.map(function (t) { return t.value; }), transactions.map(function (t) { return new bignumber_js_1.default((t.calldata.length - 2) / 2); }), // subtract 2 for '0x', divide by 2 for hex\n    transactions.map(function (t) { return t.calldata; }).reduce(function (x, current) { return x + current.slice(2); }, '0x'));\n    return {\n        calldata: atomicizedCalldata,\n    };\n}\nexports.encodeAtomicizedTransfer = encodeAtomicizedTransfer;\n/**\n * Encode a transfer call for a Wyvern schema function\n * @param transferAbi Annotated Wyvern ABI\n * @param from From address\n * @param to To address\n */\nfunction encodeTransferCall(transferAbi, from, to) {\n    var parameters = transferAbi.inputs.map(function (input) {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Replaceable:\n                return to;\n            case types_1.FunctionInputKind.Owner:\n                return from;\n            case types_1.FunctionInputKind.Asset:\n            default:\n                if (input.value == null) {\n                    throw new Error(\"Unsupported function input kind: \" + input.kind);\n                }\n                return input.value;\n        }\n    });\n    return WyvernSchemas.encodeCall(transferAbi, parameters);\n}\nexports.encodeTransferCall = encodeTransferCall;\n/**\n * Encode a call to a user's proxy contract\n * @param address The address for the proxy to call\n * @param howToCall How to call the addres\n * @param calldata The data to use in the call\n * @param shouldAssert Whether to assert success in the proxy call\n */\nfunction encodeProxyCall(address, howToCall, calldata, shouldAssert) {\n    if (shouldAssert === void 0) { shouldAssert = true; }\n    var abi = shouldAssert ? proxyAssertABI : proxyABI;\n    return WyvernSchemas.encodeCall(abi, [address, howToCall, Buffer.from(calldata.slice(2), 'hex')]);\n}\nexports.encodeProxyCall = encodeProxyCall;\n/**\n * Validates that an address exists, isn't null, and is properly\n * formatted for Wyvern and OpenSea\n * @param address input address\n */\nfunction validateAndFormatWalletAddress(web3, address) {\n    if (!address) {\n        throw new Error('No wallet address found');\n    }\n    if (!web3.isAddress(address)) {\n        throw new Error('Invalid wallet address');\n    }\n    if (address == exports.NULL_ADDRESS) {\n        throw new Error('Wallet cannot be the null address');\n    }\n    return address.toLowerCase();\n}\nexports.validateAndFormatWalletAddress = validateAndFormatWalletAddress;\n/**\n * Notify developer when a pattern will be deprecated\n * @param msg message to log to console\n */\nfunction onDeprecated(msg) {\n    console.warn(\"DEPRECATION NOTICE: \" + msg);\n}\nexports.onDeprecated = onDeprecated;\n/**\n * Get special-case approval addresses for an erc721 contract\n * @param erc721Contract contract to check\n */\nfunction getNonCompliantApprovalAddress(erc721Contract, tokenId, accountAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var onError, results;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    onError = function (e) { throw e; };\n                    return [4 /*yield*/, Promise.all([\n                            // CRYPTOKITTIES check\n                            promisifyCall(function (c) { return erc721Contract.kittyIndexToApproved.call(tokenId, c); }, onError),\n                            // Etherbots check\n                            promisifyCall(function (c) { return erc721Contract.partIndexToApproved.call(tokenId, c); }, onError),\n                        ])];\n                case 1:\n                    results = _a.sent();\n                    return [2 /*return*/, _.compact(results)[0]];\n            }\n        });\n    });\n}\nexports.getNonCompliantApprovalAddress = getNonCompliantApprovalAddress;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}