{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst typed_promisify_1 = require(\"typed-promisify\");\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../../types\");\n\nconst MonsterData = require(\"./monsterdata.json\");\n\nconst Types = require(\"./types.json\");\n\nexports.ChainMonstersSchema = {\n  version: 2,\n  deploymentBlock: 5106855,\n  name: 'ChainMonsters',\n  description: '100% blockchain based monster collectible game',\n  thumbnail: 'https://cdn-images-1.medium.com/fit/c/90/90/1*xthSZXBLKxsSGkLz1FWyFg.png',\n  website: 'https://chainmonsters.io/',\n  fields: [{\n    name: 'ID',\n    type: 'uint256',\n    description: 'ChainMonster number.'\n  }],\n  assetFromFields: fields => fields.ID,\n  assetToFields: asset => ({\n    ID: asset\n  }),\n  formatter: (asset, web3) => __awaiter(this, void 0, void 0, function* () {\n    const abi = {\n      'constant': true,\n      'inputs': [{\n        'name': '_id',\n        'type': 'uint256'\n      }],\n      'name': 'getMonster',\n      'outputs': [{\n        'name': 'birthTime',\n        'type': 'uint256'\n      }, {\n        'name': 'generation',\n        'type': 'uint256'\n      }, {\n        'name': 'stats',\n        'type': 'uint8[8]'\n      }, {\n        'name': 'mID',\n        'type': 'uint256'\n      }, {\n        'name': 'tradeable',\n        'type': 'bool'\n      }, {\n        'name': 'uID',\n        'type': 'uint256'\n      }],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    };\n    const contract = web3.eth.contract([abi]).at('0xf7f6c2836293a661be2690fbacae97f3f027e9c4');\n    const data = yield typed_promisify_1.promisify(contract[abi.name].call)(asset);\n    const generation = data[1];\n    const stats = data[2];\n    const mID = data[3];\n    const monster = MonsterData[mID.toString()];\n    const type = Types[stats[6].toString()];\n    return {\n      thumbnail: 'https://chainmonsters.io/assets/monsters/' + mID + '.png',\n      title: 'ChainMonster #' + asset + ' - ' + monster.name,\n      description: 'Type: ' + type.name + ', HP ' + stats[0] + ', Attack ' + stats[1] + ', Defense ' + stats[2] + ', Special Attack ' + stats[3] + ', Special Defense ' + stats[4] + ', Speed ' + stats[5],\n      url: 'https://chainmonsters.io/monster/' + asset,\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'transfer',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: '0xf7f6c2836293a661be2690fbacae97f3f027e9c4',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: '_to',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'ownerOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: '0xf7f6c2836293a661be2690fbacae97f3f027e9c4',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_deedId',\n        type: 'uint256',\n        value: asset\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: '_owner',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: [{\n      type: Web3.AbiType.Event,\n      name: 'Transfer',\n      target: '0xf7f6c2836293a661be2690fbacae97f3f027e9c4',\n      anonymous: false,\n      inputs: [{\n        kind: types_1.EventInputKind.Source,\n        indexed: false,\n        name: 'from',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Destination,\n        indexed: false,\n        name: 'to',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Asset,\n        indexed: false,\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      assetFromInputs: inputs => __awaiter(this, void 0, void 0, function* () {\n        return inputs.tokenId;\n      })\n    }]\n  },\n  hash: a => a\n};","map":{"version":3,"sources":["../../../../src/schemas/main/ChainMonsters/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typed_promisify_1 = require(\"typed-promisify\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nconst MonsterData = require(\"./monsterdata.json\");\nconst Types = require(\"./types.json\");\nexports.ChainMonstersSchema = {\n    version: 2,\n    deploymentBlock: 5106855,\n    name: 'ChainMonsters',\n    description: '100% blockchain based monster collectible game',\n    thumbnail: 'https://cdn-images-1.medium.com/fit/c/90/90/1*xthSZXBLKxsSGkLz1FWyFg.png',\n    website: 'https://chainmonsters.io/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'ChainMonster number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: (asset, web3) => __awaiter(this, void 0, void 0, function* () {\n        const abi = { 'constant': true, 'inputs': [{ 'name': '_id', 'type': 'uint256' }], 'name': 'getMonster', 'outputs': [{ 'name': 'birthTime', 'type': 'uint256' }, { 'name': 'generation', 'type': 'uint256' }, { 'name': 'stats', 'type': 'uint8[8]' }, { 'name': 'mID', 'type': 'uint256' }, { 'name': 'tradeable', 'type': 'bool' }, { 'name': 'uID', 'type': 'uint256' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n        const contract = web3.eth.contract([abi]).at('0xf7f6c2836293a661be2690fbacae97f3f027e9c4');\n        const data = yield typed_promisify_1.promisify(contract[abi.name].call)(asset);\n        const generation = data[1];\n        const stats = data[2];\n        const mID = data[3];\n        const monster = MonsterData[mID.toString()];\n        const type = Types[stats[6].toString()];\n        return {\n            thumbnail: 'https://chainmonsters.io/assets/monsters/' + mID + '.png',\n            title: 'ChainMonster #' + asset + ' - ' + monster.name,\n            description: 'Type: ' + type.name + ', HP ' + stats[0] + ', Attack ' + stats[1] + ', Defense ' + stats[2] + ', Special Attack ' + stats[3] + ', Special Defense ' + stats[4] + ', Speed ' + stats[5],\n            url: 'https://chainmonsters.io/monster/' + asset,\n            properties: [],\n        };\n    }),\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0xf7f6c2836293a661be2690fbacae97f3f027e9c4',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0xf7f6c2836293a661be2690fbacae97f3f027e9c4',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_deedId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: '_owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0xf7f6c2836293a661be2690fbacae97f3f027e9c4',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: false, name: 'from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: false, name: 'to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: (inputs) => __awaiter(this, void 0, void 0, function* () { return inputs.tokenId; }),\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}