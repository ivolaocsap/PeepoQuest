{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import styled from'styled-components';import{mediaQueries,AllBreakpoints}from'src/theme';// const sizes: BreakPoints[] = ['sm', 'md', 'lg', 'xl'];\nvar generate=function generate(props){return AllBreakpoints.filter(function(size){return!!props[size];}).map(function(size){// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nvar percent=props[size]/12*100+'% !important;';return mediaQueries(size)('width: '+percent);});};export var Col=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  \",\"\\n\"])),function(p){return generate(p);});export var Row=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-left: -\",\";\\n  margin-right: -\",\";\\n  flex-wrap: wrap;\\n\\n  \",\" {\\n    padding: 0 \",\";\\n  }\\n\"])),function(p){return p.gutter||'15px';},function(p){return p.gutter||'15px';},Col,function(p){return p.gutter||'15px';});","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/components/Layout/index.tsx"],"names":["styled","mediaQueries","AllBreakpoints","generate","props","filter","size","map","percent","Col","div","p","Row","gutter"],"mappings":"6MAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAAsBC,YAAtB,CAAoCC,cAApC,KAA0D,WAA1D,CAIA;AAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAqB,CACpC,MAAOF,CAAAA,cAAc,CAACG,MAAf,CAAsB,SAACC,IAAD,QAAU,CAAC,CAACF,KAAK,CAACE,IAAD,CAAjB,EAAtB,EAA+CC,GAA/C,CAAmD,SAACD,IAAD,CAAU,CAClE;AACA,GAAME,CAAAA,OAAO,CAAIJ,KAAK,CAACE,IAAD,CAAL,CAAe,EAAhB,CAAsB,GAAtB,CAA4B,eAA5C,CACA,MAAOL,CAAAA,YAAY,CAACK,IAAD,CAAZ,CAAkC,UAAYE,OAA9C,CAAP,CACD,CAJM,CAAP,CAKD,CAND,CAQA,MAAO,IAAMC,CAAAA,GAAG,CAAGT,MAAM,CAACU,GAAV,0FAEZ,SAACC,CAAD,CAAO,CACP,MAAOR,CAAAA,QAAQ,CAACQ,CAAD,CAAf,CACD,CAJa,CAAT,CAOP,MAAO,IAAMC,CAAAA,GAAG,CAAGZ,MAAM,CAACU,GAAV,6LAEE,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACE,MAAF,EAAY,MAAnB,EAFF,CAGG,SAACF,CAAD,QAAOA,CAAAA,CAAC,CAACE,MAAF,EAAY,MAAnB,EAHH,CAMZJ,GANY,CAOC,SAACE,CAAD,QAAOA,CAAAA,CAAC,CAACE,MAAF,EAAY,MAAnB,EAPD,CAAT","sourcesContent":["import styled from 'styled-components';\nimport { BreakPoints, mediaQueries, AllBreakpoints } from 'src/theme';\n\ntype ColProps = Partial<Record<BreakPoints, number>>;\n\n// const sizes: BreakPoints[] = ['sm', 'md', 'lg', 'xl'];\n\nconst generate = (props: ColProps) => {\n  return AllBreakpoints.filter((size) => !!props[size]).map((size) => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const percent = (props[size]! / 12) * 100 + '% !important;';\n    return mediaQueries(size as BreakPoints)('width: ' + percent);\n  });\n};\n\nexport const Col = styled.div<ColProps>`\n  width: 100%;\n  ${(p) => {\n    return generate(p);\n  }}\n`;\n\nexport const Row = styled.div<{ gutter?: string }>`\n  display: flex;\n  margin-left: -${(p) => p.gutter || '15px'};\n  margin-right: -${(p) => p.gutter || '15px'};\n  flex-wrap: wrap;\n\n  ${Col} {\n    padding: 0 ${(p) => p.gutter || '15px'};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}