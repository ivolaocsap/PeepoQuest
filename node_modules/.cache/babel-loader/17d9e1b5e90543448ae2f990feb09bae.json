{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useCallback}from'react';import styled from'styled-components';import Modal,{ModalBody,ModalCloseButton,ModalHeader,ModalTitle}from'../Modal';import MetamaskLogo from'../../assets/img/metamask.png';import TrustWalletLogo from\"../../assets/img/TrustWallet.svg\";import MathWalletLogo from\"../../assets/img/MathWallet.svg\";import safeWalletLogo from\"../../assets/img/SafeWallet.svg\";import binanceLogo from\"../../assets/img/BinanceChain.svg\";import TokenPocketLogo from\"../../assets/img/TokenPocker.svg\";import WalletConnectLogo from'../../assets/img/wallet_connect.png';import{UnsupportedChainIdError,useWeb3React}from'@web3-react/core';import{useAddPopup,useSetConnectedAccount}from'src/state/application/hooks';import useWalletConnectors from'../../hooks/useWalletConnectors';import{ConnectorNames}from'src/state/application/reducer';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTimes}from\"@fortawesome/free-solid-svg-icons\";import{InjectedConnector}from'@web3-react/injected-connector';import{useConfiguration}from'src/contexts/ConfigProvider/ConfigProvider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SelectWalletModal=function SelectWalletModal(_ref){var onDismiss=_ref.onDismiss;var _useWeb3React=useWeb3React(),activate=_useWeb3React.activate,connector=_useWeb3React.connector,account=_useWeb3React.account;var connectors=useWalletConnectors();var saveAccount=useSetConnectedAccount();var addPopup=useAddPopup();var _useConfiguration=useConfiguration(),defaultProvider=_useConfiguration.defaultProvider,etherscanUrl=_useConfiguration.etherscanUrl,chainId=_useConfiguration.chainId;var wallets=[{connector:ConnectorNames.Injected,name:'MetaMask',image:MetamaskLogo},{connector:ConnectorNames.WalletConnect,name:'Wallet Connect',image:WalletConnectLogo},{connector:ConnectorNames.BSC,name:'Binance Chain Wallet',image:binanceLogo},{connector:ConnectorNames.Injected,name:'TrustWallet',image:TrustWalletLogo},{connector:ConnectorNames.Injected,name:'MathWallet',image:MathWalletLogo},{connector:ConnectorNames.Injected,name:'TokenPocket',image:TokenPocketLogo},{connector:ConnectorNames.Injected,name:'SafePal Wallet',image:safeWalletLogo}];var onConnectPress=useCallback(function(connectionId){activate(connectors[connectionId],function(error){if(error instanceof UnsupportedChainIdError&&connectors[connectionId]instanceof InjectedConnector){window.ethereum.request({method:'wallet_addEthereumChain',params:[{chainId:'0x'+chainId.toString(16),// A 0x-prefixed hexadecimal string\nchainName:'Binance Smart Chain',nativeCurrency:{name:'Binance Coin',symbol:'BNB',decimals:18},rpcUrls:Array.isArray(defaultProvider)?defaultProvider:[defaultProvider],blockExplorerUrls:[etherscanUrl]}]});}else{addPopup({error:{title:'Connect wallet error',message:error===null||error===void 0?void 0:error.message}});}return;});saveAccount(account,connectionId);onDismiss();},[account,activate,addPopup,chainId,connectors,defaultProvider,etherscanUrl,onDismiss,saveAccount]);return/*#__PURE__*/_jsxs(Modal,{size:\"sm\",padding:\"0\",children:[/*#__PURE__*/_jsxs(ModalHeader,{children:[/*#__PURE__*/_jsx(ModalTitle,{children:\"Connect to a Wallet\"}),/*#__PURE__*/_jsx(ModalCloseButton,{onClick:onDismiss,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTimes})})]}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(List,{children:wallets.map(function(wallet){return/*#__PURE__*/_jsxs(Item,{onClick:function onClick(){if(connector!==connectors[wallet.connector]){onConnectPress(wallet.connector);}},children:[/*#__PURE__*/_jsx(WalletName,{children:wallet.name}),/*#__PURE__*/_jsx(WalletLogo,{src:wallet.image,alt:\"\".concat(wallet.name,\" Logo\"),width:32,height:32})]},wallet.name);})})})]});};var List=styled.ul(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  list-style-type: none;\\n  padding: 0px;\\n  margin: 0px;\\n\"])));var Item=styled.li(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer;\\n  margin: 10px 0px;\\n  padding: 10px 15px;\\n  border: solid 1px #c2c2c266;\\n  border-radius: 10px;\\n  &:hover {\\n    background-color: #a3212a;\\n    border-color: #a3212a;\\n  }\\n\"])));var WalletName=styled.span(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 1.1rem;\\n  font-weight: 500;\\n\"])));var WalletLogo=styled.img(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  border-radius: 24px;\\n\"])));export default SelectWalletModal;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/components/SelectWalletModal/SelectWalletModal.tsx"],"names":["React","useCallback","styled","Modal","ModalBody","ModalCloseButton","ModalHeader","ModalTitle","MetamaskLogo","WalletConnectLogo","UnsupportedChainIdError","useWeb3React","useAddPopup","useSetConnectedAccount","useWalletConnectors","ConnectorNames","FontAwesomeIcon","faTimes","InjectedConnector","useConfiguration","SelectWalletModal","onDismiss","activate","connector","account","connectors","saveAccount","addPopup","defaultProvider","etherscanUrl","chainId","wallets","Injected","name","image","WalletConnect","BSC","binanceLogo","TrustWalletLogo","MathWalletLogo","TokenPocketLogo","safeWalletLogo","onConnectPress","connectionId","error","window","ethereum","request","method","params","toString","chainName","nativeCurrency","symbol","decimals","rpcUrls","Array","isArray","blockExplorerUrls","title","message","map","wallet","List","ul","Item","li","WalletName","span","WalletLogo","img"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport Modal, { ModalBody, ModalCloseButton, ModalHeader, ModalTitle } from '../Modal';\nimport MetamaskLogo from '../../assets/img/metamask.png';\nimport TrustWalletLogo from '../../assets/img/TrustWallet.svg';\nimport MathWalletLogo from '../../assets/img/MathWallet.svg';\nimport safeWalletLogo from '../../assets/img/SafeWallet.svg';\nimport binanceLogo from '../../assets/img/BinanceChain.svg';\nimport TokenPocketLogo from '../../assets/img/TokenPocker.svg';\nimport WalletConnectLogo from '../../assets/img/wallet_connect.png';\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { useAddPopup, useSetConnectedAccount } from 'src/state/application/hooks';\nimport useWalletConnectors from '../../hooks/useWalletConnectors';\nimport { ConnectorNames } from 'src/state/application/reducer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { useConfiguration } from 'src/contexts/ConfigProvider/ConfigProvider';\n\nexport interface SelectWalletModalProps {\n  onDismiss?: () => void;\n}\n\ninterface Wallet {\n  connector: ConnectorNames;\n  name: string;\n  image: string;\n}\n\nconst SelectWalletModal: React.FC<SelectWalletModalProps> = ({ onDismiss }) => {\n  const { activate, connector, account } = useWeb3React();\n  const connectors = useWalletConnectors();\n  const saveAccount = useSetConnectedAccount();\n  const addPopup = useAddPopup();\n  const { defaultProvider, etherscanUrl, chainId } = useConfiguration();\n  const wallets = [\n    {\n      connector: ConnectorNames.Injected,\n      name: 'MetaMask',\n      image: MetamaskLogo,\n    },\n    {\n      connector: ConnectorNames.WalletConnect,\n      name: 'Wallet Connect',\n      image: WalletConnectLogo,\n    },\n    {\n      connector: ConnectorNames.BSC,\n      name: 'Binance Chain Wallet',\n      image: binanceLogo,\n    },\n    {\n      connector: ConnectorNames.Injected,\n      name: 'TrustWallet',\n      image: TrustWalletLogo,\n    },\n    {\n      connector: ConnectorNames.Injected,\n      name: 'MathWallet',\n      image: MathWalletLogo,\n    },\n    {\n      connector: ConnectorNames.Injected,\n      name: 'TokenPocket',\n      image: TokenPocketLogo,\n    },\n    {\n      connector: ConnectorNames.Injected,\n      name: 'SafePal Wallet',\n      image: safeWalletLogo,\n    },\n  ] as Wallet[];\n  const onConnectPress = useCallback(\n    (connectionId: ConnectorNames) => {\n      activate(connectors[connectionId], (error) => {\n        if (\n          error instanceof UnsupportedChainIdError &&\n          connectors[connectionId] instanceof InjectedConnector\n        ) {\n          window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: '0x' + chainId.toString(16), // A 0x-prefixed hexadecimal string\n                chainName: 'Binance Smart Chain',\n                nativeCurrency: {\n                  name: 'Binance Coin',\n                  symbol: 'BNB',\n                  decimals: 18,\n                },\n                rpcUrls: Array.isArray(defaultProvider) ? defaultProvider : [defaultProvider],\n                blockExplorerUrls: [etherscanUrl],\n              },\n            ],\n          });\n        } else {\n          addPopup({\n            error: {\n              title: 'Connect wallet error',\n              message: error?.message,\n            },\n          });\n        }\n        return;\n      });\n      saveAccount(account, connectionId);\n      onDismiss();\n    },\n    [\n      account,\n      activate,\n      addPopup,\n      chainId,\n      connectors,\n      defaultProvider,\n      etherscanUrl,\n      onDismiss,\n      saveAccount,\n    ],\n  );\n  return (\n    <Modal size=\"sm\" padding=\"0\">\n      <ModalHeader>\n        <ModalTitle>Connect to a Wallet</ModalTitle>\n        <ModalCloseButton onClick={onDismiss}>\n          <FontAwesomeIcon icon={faTimes} />\n        </ModalCloseButton>\n      </ModalHeader>\n      <ModalBody>\n        <List>\n          {wallets.map((wallet) => (\n            <Item\n              key={wallet.name}\n              onClick={() => {\n                if (connector !== connectors[wallet.connector]) {\n                  onConnectPress(wallet.connector);\n                }\n              }}\n            >\n              <WalletName>{wallet.name}</WalletName>\n              <WalletLogo\n                src={wallet.image}\n                alt={`${wallet.name} Logo`}\n                width={32}\n                height={32}\n              />\n            </Item>\n          ))}\n        </List>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nconst List = styled.ul`\n  overflow: hidden;\n  list-style-type: none;\n  padding: 0px;\n  margin: 0px;\n`;\n\nconst Item = styled.li<{ isActive?: boolean }>`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  margin: 10px 0px;\n  padding: 10px 15px;\n  border: solid 1px #c2c2c266;\n  border-radius: 10px;\n  &:hover {\n    background-color: #a3212a;\n    border-color: #a3212a;\n  }\n`;\n\nconst WalletName = styled.span`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nconst WalletLogo = styled.img`\n  margin-left: auto;\n  border-radius: 24px;\n`;\n\nexport default SelectWalletModal;\n"]},"metadata":{},"sourceType":"module"}