{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useDiamondHand from './useDiamondHand';\n\nconst useMyTicketNumber = ticketIds => {\n  _s();\n\n  const dh = useDiamondHand();\n  const [tickets, setTickets] = useState(undefined);\n  useEffect(() => {\n    let mounted = true;\n\n    if (!dh || !ticketIds) {\n      return;\n    }\n\n    setTickets([]);\n    dh.TICKET.getListTicketNumbers(ticketIds).then(res => {\n      if (mounted) {\n        setTickets(res);\n      }\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [dh, ticketIds]);\n  return tickets;\n};\n\n_s(useMyTicketNumber, \"3Utor5+goyCC1h+EtPvsCEyUhGI=\", false, function () {\n  return [useDiamondHand];\n});\n\nexport default useMyTicketNumber;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/BabyPepe/src/hooks/useMyTicketNumber.ts"],"names":["useEffect","useState","useDiamondHand","useMyTicketNumber","ticketIds","dh","tickets","setTickets","undefined","mounted","TICKET","getListTicketNumbers","then","res"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAOA,MAAMC,iBAAiB,GAAIC,SAAD,IAA4B;AAAA;;AACpD,QAAMC,EAAE,GAAGH,cAAc,EAAzB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAWO,SAAX,CAAtC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,GAAG,IAAd;;AACA,QAAI,CAACJ,EAAD,IAAO,CAACD,SAAZ,EAAuB;AACrB;AACD;;AACDG,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,EAAE,CAACK,MAAH,CAAUC,oBAAV,CAA+BP,SAA/B,EAA0CQ,IAA1C,CAAgDC,GAAD,IAAS;AACtD,UAAIJ,OAAJ,EAAa;AACXF,QAAAA,UAAU,CAACM,GAAD,CAAV;AACD;AACF,KAJD;AAMA,WAAO,MAAM;AACXJ,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GAfQ,EAeN,CAACJ,EAAD,EAAKD,SAAL,CAfM,CAAT;AAiBA,SAAOE,OAAP;AACD,CAtBD;;GAAMH,iB;UACOD,c;;;AAuBb,eAAeC,iBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport useDiamondHand from './useDiamondHand';\n\nexport type Ticket = {\n  id: BigNumber;\n  numbers: number[];\n};\n\nconst useMyTicketNumber = (ticketIds: BigNumber[]) => {\n  const dh = useDiamondHand();\n  const [tickets, setTickets] = useState<Ticket[]>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    if (!dh || !ticketIds) {\n      return;\n    }\n    setTickets([]);\n    dh.TICKET.getListTicketNumbers(ticketIds).then((res) => {\n      if (mounted) {\n        setTickets(res);\n      }\n    });\n\n    return () => {\n      mounted = false;\n    };\n  }, [dh, ticketIds]);\n\n  return tickets;\n};\n\nexport default useMyTicketNumber;\n"]},"metadata":{},"sourceType":"module"}