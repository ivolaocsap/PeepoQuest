{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../types\");\n\nexports.ERC721Schema = {\n  version: 2,\n  deploymentBlock: 0,\n  name: 'ERC721',\n  description: 'Items conforming to the ERC721 spec, using transferFrom.',\n  thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\n  website: 'http://erc721.org/',\n  fields: [{\n    name: 'ID',\n    type: 'uint256',\n    description: 'Asset Token ID'\n  }, {\n    name: 'Address',\n    type: 'address',\n    description: 'Asset Contract Address'\n  }],\n  assetFromFields: fields => ({\n    id: fields.ID,\n    address: fields.Address\n  }),\n  assetToFields: asset => ({\n    ID: asset.id,\n    Address: asset.address\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    return {\n      title: 'ERC721 Asset: Token ID ' + asset.id + ' at ' + asset.address,\n      description: '',\n      url: '',\n      thumbnail: '',\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'transferFrom',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Owner,\n        name: '_from',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: '_to',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset.id\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'ownerOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset.id\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'owner',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: asset => asset.address + '-' + asset.id\n};","map":{"version":3,"sources":["../../../src/schemas/ERC721/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../types\");\nexports.ERC721Schema = {\n    version: 2,\n    deploymentBlock: 0,\n    name: 'ERC721',\n    description: 'Items conforming to the ERC721 spec, using transferFrom.',\n    thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\n    website: 'http://erc721.org/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'Asset Token ID' },\n        { name: 'Address', type: 'address', description: 'Asset Contract Address' },\n    ],\n    assetFromFields: (fields) => ({\n        id: fields.ID,\n        address: fields.Address,\n    }),\n    assetToFields: asset => ({\n        ID: asset.id,\n        Address: asset.address,\n    }),\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\n        return {\n            title: 'ERC721 Asset: Token ID ' + asset.id + ' at ' + asset.address,\n            description: '',\n            url: '',\n            thumbnail: '',\n            properties: [],\n        };\n    }),\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferFrom',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: asset => asset.address + '-' + asset.id,\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}