{"ast":null,"code":"import{formatUnits,parseUnits}from'@ethersproject/units';import{BigNumber}from'@ethersproject/bignumber';export var numberWithCommas=function numberWithCommas(x){var parts=x.split('.');parts[0]=parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g,',');return parts.join('.');};export var getDisplayNumber=function getDisplayNumber(value){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;var fractionDigits=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var percentage=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var keepTrailingZeros=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var roundDown=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var keepCommas=arguments.length>6&&arguments[6]!==undefined?arguments[6]:true;if(!value){return;}var a=formatUnits(value.toString(),decimals);var b=percentage?+a*100:+a;if(roundDown){b=b-5/Math.pow(10,fractionDigits+1);}var c=b.toFixed(fractionDigits);c=keepCommas?numberWithCommas(c):c;return keepTrailingZeros?c:c.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/,'$1');};export var getDisplayAmount=function getDisplayAmount(value){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;var fractionDigits=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var keepTrailingZeros=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(!value){return;}var a=formatUnits(value.toString(),decimals);var c=(+a).toFixed(fractionDigits);var converted=+(keepTrailingZeros?c:c.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/,'$1'));var displayValue='';var displayUnit='';if(!isNaN(converted)){displayValue=converted.toFixed(fractionDigits);if(converted>=1e9){displayValue=\"\".concat((converted/1e9).toFixed(fractionDigits));displayUnit='B';}else if(converted>=1e6){displayValue=\"\".concat((converted/1e6).toFixed(fractionDigits));displayUnit='M';}else if(converted>=1e3){displayValue=\"\".concat((converted/1e3).toFixed(fractionDigits));displayUnit='K';}}return{value:displayValue,unit:displayUnit};};export var getFullDisplayNumber=function getFullDisplayNumber(value){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;return getDisplayNumber(value,decimals);};export function getNumber(value){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;return value.div(BigNumber.from(10).pow(decimals)).toNumber();}export var parseNumber=function parseNumber(value){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;var fractionDigits=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(value==null){return;}var convert=+(+value).toFixed(fractionDigits);var numberVal=convert*Math.pow(10,fractionDigits);return parseUnits(numberVal.toString(),decimals-fractionDigits);};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/utils/formatBN.ts"],"names":["formatUnits","parseUnits","BigNumber","numberWithCommas","x","parts","split","replace","join","getDisplayNumber","value","decimals","fractionDigits","percentage","keepTrailingZeros","roundDown","keepCommas","a","toString","b","c","toFixed","getDisplayAmount","converted","displayValue","displayUnit","isNaN","unit","getFullDisplayNumber","getNumber","div","from","pow","toNumber","parseNumber","convert","numberVal"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,UAAtB,KAAwC,sBAAxC,CACA,OAASC,SAAT,KAA0B,0BAA1B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAe,CAC7C,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAd,CACAD,KAAK,CAAC,CAAD,CAAL,CAAWA,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiB,uBAAjB,CAA0C,GAA1C,CAAX,CACA,MAAOF,CAAAA,KAAK,CAACG,IAAN,CAAW,GAAX,CAAP,CACD,CAJM,CAMP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAC9BC,KAD8B,CAQ3B,IANHC,CAAAA,QAMG,2DANQ,EAMR,IALHC,CAAAA,cAKG,2DALc,CAKd,IAJHC,CAAAA,UAIG,2DAJU,KAIV,IAHHC,CAAAA,iBAGG,2DAHiB,KAGjB,IAFHC,CAAAA,SAEG,2DAFS,KAET,IADHC,CAAAA,UACG,2DADU,IACV,CACH,GAAI,CAACN,KAAL,CAAY,CACV,OACD,CACD,GAAMO,CAAAA,CAAC,CAAGjB,WAAW,CAACU,KAAK,CAACQ,QAAN,EAAD,CAAmBP,QAAnB,CAArB,CACA,GAAIQ,CAAAA,CAAC,CAAGN,UAAU,CAAG,CAACI,CAAD,CAAK,GAAR,CAAc,CAACA,CAAjC,CACA,GAAIF,SAAJ,CAAe,CACbI,CAAC,CAAGA,CAAC,CAAG,WAAI,EAAJ,CAAWP,cAAc,CAAG,CAA5B,CAAR,CACD,CACD,GAAIQ,CAAAA,CAAC,CAAGD,CAAC,CAACE,OAAF,CAAUT,cAAV,CAAR,CACAQ,CAAC,CAAGJ,UAAU,CAAGb,gBAAgB,CAACiB,CAAD,CAAnB,CAAyBA,CAAvC,CACA,MAAON,CAAAA,iBAAiB,CAAGM,CAAH,CAAOA,CAAC,CAACb,OAAF,CAAU,kCAAV,CAA8C,IAA9C,CAA/B,CACD,CApBM,CAsBP,MAAO,IAAMe,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAC9BZ,KAD8B,CAK3B,IAHHC,CAAAA,QAGG,2DAHQ,EAGR,IAFHC,CAAAA,cAEG,2DAFc,CAEd,IADHE,CAAAA,iBACG,2DADiB,IACjB,CACH,GAAI,CAACJ,KAAL,CAAY,CACV,OACD,CACD,GAAMO,CAAAA,CAAC,CAAGjB,WAAW,CAACU,KAAK,CAACQ,QAAN,EAAD,CAAmBP,QAAnB,CAArB,CACA,GAAMS,CAAAA,CAAC,CAAG,CAAC,CAACH,CAAF,EAAKI,OAAL,CAAaT,cAAb,CAAV,CACA,GAAMW,CAAAA,SAAS,CAAG,EAAET,iBAAiB,CACjCM,CADiC,CAEjCA,CAAC,CAACb,OAAF,CAAU,kCAAV,CAA8C,IAA9C,CAFc,CAAlB,CAGA,GAAIiB,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAI,CAACC,KAAK,CAACH,SAAD,CAAV,CAAuB,CACrBC,YAAY,CAAGD,SAAS,CAACF,OAAV,CAAkBT,cAAlB,CAAf,CACA,GAAIW,SAAS,EAAI,GAAjB,CAAsB,CACpBC,YAAY,WAAM,CAACD,SAAS,CAAG,GAAb,EAAkBF,OAAlB,CAA0BT,cAA1B,CAAN,CAAZ,CACAa,WAAW,CAAG,GAAd,CACD,CAHD,IAGO,IAAIF,SAAS,EAAI,GAAjB,CAAsB,CAC3BC,YAAY,WAAM,CAACD,SAAS,CAAG,GAAb,EAAkBF,OAAlB,CAA0BT,cAA1B,CAAN,CAAZ,CACAa,WAAW,CAAG,GAAd,CACD,CAHM,IAGA,IAAIF,SAAS,EAAI,GAAjB,CAAsB,CAC3BC,YAAY,WAAM,CAACD,SAAS,CAAG,GAAb,EAAkBF,OAAlB,CAA0BT,cAA1B,CAAN,CAAZ,CACAa,WAAW,CAAG,GAAd,CACD,CACF,CACD,MAAO,CAAEf,KAAK,CAAEc,YAAT,CAAuBG,IAAI,CAAEF,WAA7B,CAAP,CACD,CA9BM,CAgCP,MAAO,IAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAClB,KAAD,CAAqC,IAAlBC,CAAAA,QAAkB,2DAAP,EAAO,CACvE,MAAOF,CAAAA,gBAAgB,CAACC,KAAD,CAAQC,QAAR,CAAvB,CACD,CAFM,CAIP,MAAO,SAASkB,CAAAA,SAAT,CAAmBnB,KAAnB,CAA4D,IAAvBC,CAAAA,QAAuB,2DAAZ,EAAY,CACjE,MAAOD,CAAAA,KAAK,CAACoB,GAAN,CAAU5B,SAAS,CAAC6B,IAAV,CAAe,EAAf,EAAmBC,GAAnB,CAAuBrB,QAAvB,CAAV,EAA4CsB,QAA5C,EAAP,CACD,CAED,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACxB,KAAD,CAA+D,IAAtCC,CAAAA,QAAsC,2DAA3B,EAA2B,IAAvBC,CAAAA,cAAuB,2DAAN,CAAM,CACxF,GAAIF,KAAK,EAAI,IAAb,CAAmB,CACjB,OACD,CACD,GAAMyB,CAAAA,OAAO,CAAG,CAAC,CAAC,CAACzB,KAAF,EAASW,OAAT,CAAiBT,cAAjB,CAAjB,CACA,GAAMwB,CAAAA,SAAS,CAAGD,OAAO,UAAG,EAAH,CAASvB,cAAT,CAAzB,CACA,MAAOX,CAAAA,UAAU,CAACmC,SAAS,CAAClB,QAAV,EAAD,CAAuBP,QAAQ,CAAGC,cAAlC,CAAjB,CACD,CAPM","sourcesContent":["import { formatUnits, parseUnits } from '@ethersproject/units';\nimport { BigNumber } from '@ethersproject/bignumber';\n\nexport const numberWithCommas = (x: string) => {\n  const parts = x.split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n\nexport const getDisplayNumber = (\n  value: BigNumber,\n  decimals = 18,\n  fractionDigits = 0,\n  percentage = false,\n  keepTrailingZeros = false,\n  roundDown = false,\n  keepCommas = true,\n) => {\n  if (!value) {\n    return;\n  }\n  const a = formatUnits(value.toString(), decimals);\n  let b = percentage ? +a * 100 : +a;\n  if (roundDown) {\n    b = b - 5 / 10 ** (fractionDigits + 1);\n  }\n  let c = b.toFixed(fractionDigits);\n  c = keepCommas ? numberWithCommas(c) : c;\n  return keepTrailingZeros ? c : c.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1');\n};\n\nexport const getDisplayAmount = (\n  value: BigNumber,\n  decimals = 18,\n  fractionDigits = 0,\n  keepTrailingZeros = true,\n) => {\n  if (!value) {\n    return;\n  }\n  const a = formatUnits(value.toString(), decimals);\n  const c = (+a).toFixed(fractionDigits);\n  const converted = +(keepTrailingZeros\n    ? c\n    : c.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1'));\n  let displayValue = '';\n  let displayUnit = '';\n  if (!isNaN(converted)) {\n    displayValue = converted.toFixed(fractionDigits);\n    if (converted >= 1e9) {\n      displayValue = `${(converted / 1e9).toFixed(fractionDigits)}`;\n      displayUnit = 'B';\n    } else if (converted >= 1e6) {\n      displayValue = `${(converted / 1e6).toFixed(fractionDigits)}`;\n      displayUnit = 'M';\n    } else if (converted >= 1e3) {\n      displayValue = `${(converted / 1e3).toFixed(fractionDigits)}`;\n      displayUnit = 'K';\n    }\n  }\n  return { value: displayValue, unit: displayUnit };\n};\n\nexport const getFullDisplayNumber = (value: BigNumber, decimals = 18) => {\n  return getDisplayNumber(value, decimals);\n};\n\nexport function getNumber(value: BigNumber, decimals = 18): number {\n  return value.div(BigNumber.from(10).pow(decimals)).toNumber();\n}\n\nexport const parseNumber = (value: number | string, decimals = 18, fractionDigits = 0) => {\n  if (value == null) {\n    return;\n  }\n  const convert = +(+value).toFixed(fractionDigits);\n  const numberVal = convert * 10 ** fractionDigits;\n  return parseUnits(numberVal.toString(), decimals - fractionDigits);\n};\n"]},"metadata":{},"sourceType":"module"}