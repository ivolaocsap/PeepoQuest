{"ast":null,"code":"import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import useDiamondHand from'./useDiamondHand';var useMyTicketNumber=function useMyTicketNumber(ticketIds){var dh=useDiamondHand();var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),tickets=_useState2[0],setTickets=_useState2[1];useEffect(function(){var mounted=true;if(!dh||!ticketIds){return;}setTickets([]);dh.TICKET.getListTicketNumbers(ticketIds).then(function(res){if(mounted){setTickets(res);}});return function(){mounted=false;};},[dh,ticketIds]);return tickets;};export default useMyTicketNumber;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/hooks/useMyTicketNumber.ts"],"names":["useEffect","useState","useDiamondHand","useMyTicketNumber","ticketIds","dh","undefined","tickets","setTickets","mounted","TICKET","getListTicketNumbers","then","res"],"mappings":"wJAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAOA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,SAAD,CAA4B,CACpD,GAAMC,CAAAA,EAAE,CAAGH,cAAc,EAAzB,CACA,cAA8BD,QAAQ,CAAWK,SAAX,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eAEAR,SAAS,CAAC,UAAM,CACd,GAAIS,CAAAA,OAAO,CAAG,IAAd,CACA,GAAI,CAACJ,EAAD,EAAO,CAACD,SAAZ,CAAuB,CACrB,OACD,CACDI,UAAU,CAAC,EAAD,CAAV,CACAH,EAAE,CAACK,MAAH,CAAUC,oBAAV,CAA+BP,SAA/B,EAA0CQ,IAA1C,CAA+C,SAACC,GAAD,CAAS,CACtD,GAAIJ,OAAJ,CAAa,CACXD,UAAU,CAACK,GAAD,CAAV,CACD,CACF,CAJD,EAMA,MAAO,WAAM,CACXJ,OAAO,CAAG,KAAV,CACD,CAFD,CAGD,CAfQ,CAeN,CAACJ,EAAD,CAAKD,SAAL,CAfM,CAAT,CAiBA,MAAOG,CAAAA,OAAP,CACD,CAtBD,CAwBA,cAAeJ,CAAAA,iBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport useDiamondHand from './useDiamondHand';\n\nexport type Ticket = {\n  id: BigNumber;\n  numbers: number[];\n};\n\nconst useMyTicketNumber = (ticketIds: BigNumber[]) => {\n  const dh = useDiamondHand();\n  const [tickets, setTickets] = useState<Ticket[]>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    if (!dh || !ticketIds) {\n      return;\n    }\n    setTickets([]);\n    dh.TICKET.getListTicketNumbers(ticketIds).then((res) => {\n      if (mounted) {\n        setTickets(res);\n      }\n    });\n\n    return () => {\n      mounted = false;\n    };\n  }, [dh, ticketIds]);\n\n  return tickets;\n};\n\nexport default useMyTicketNumber;\n"]},"metadata":{},"sourceType":"module"}