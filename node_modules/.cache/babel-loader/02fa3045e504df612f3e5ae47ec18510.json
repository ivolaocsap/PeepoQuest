{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3React } from '@web3-react/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useDebounce from '../../hooks/useDebounce';\nimport { updateBlockNumber } from './actions';\nexport default function Updater() {\n  _s();\n\n  const {\n    library: provider,\n    chainId\n  } = useWeb3React();\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    chainId,\n    blockNumber: null\n  });\n  const blockNumberCallback = useCallback(blockNumber => {\n    setState(state => {\n      if (typeof state.blockNumber !== 'number') return {\n        chainId,\n        blockNumber\n      };\n      return {\n        chainId,\n        blockNumber: Math.max(blockNumber, state.blockNumber)\n      };\n    });\n  }, [chainId]); // attach/detach listeners\n\n  useEffect(() => {\n    if (!provider) {\n      return undefined;\n    }\n\n    provider.on('block', blockNumberCallback);\n    return () => {\n      provider.removeListener('block', blockNumberCallback);\n    };\n  }, [blockNumberCallback, provider]);\n  const debouncedState = useDebounce(state, 100);\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber) return;\n    dispatch(updateBlockNumber({\n      chainId: debouncedState.chainId,\n      blockNumber: debouncedState.blockNumber\n    }));\n  }, [dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n  return null;\n}\n\n_s(Updater, \"s8ul3KjCsqV952L7UAbWYeL0gTM=\", false, function () {\n  return [useWeb3React, useDispatch, useDebounce];\n});\n\n_c = Updater;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updater\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/state/application/updater.ts"],"names":["useWeb3React","useCallback","useEffect","useState","useDispatch","useDebounce","updateBlockNumber","Updater","library","provider","chainId","dispatch","state","setState","blockNumber","blockNumberCallback","Math","max","undefined","on","removeListener","debouncedState"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,eAAe,SAASC,OAAT,GAAyB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,OAAO,EAAEC,QAAX;AAAqBC,IAAAA;AAArB,MAAiCV,YAAY,EAAnD;AACA,QAAMW,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAG/B;AACDO,IAAAA,OADC;AAEDI,IAAAA,WAAW,EAAE;AAFZ,GAH+B,CAAlC;AAQA,QAAMC,mBAAmB,GAAGd,WAAW,CACpCa,WAAD,IAAyB;AACvBD,IAAAA,QAAQ,CAAED,KAAD,IAAW;AAClB,UAAI,OAAOA,KAAK,CAACE,WAAb,KAA6B,QAAjC,EAA2C,OAAO;AAAEJ,QAAAA,OAAF;AAAWI,QAAAA;AAAX,OAAP;AAC3C,aAAO;AAAEJ,QAAAA,OAAF;AAAWI,QAAAA,WAAW,EAAEE,IAAI,CAACC,GAAL,CAASH,WAAT,EAAsBF,KAAK,CAACE,WAA5B;AAAxB,OAAP;AACD,KAHO,CAAR;AAID,GANoC,EAOrC,CAACJ,OAAD,CAPqC,CAAvC,CAXsC,CAqBtC;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,QAAL,EAAe;AACb,aAAOS,SAAP;AACD;;AAEDT,IAAAA,QAAQ,CAACU,EAAT,CAAY,OAAZ,EAAqBJ,mBAArB;AACA,WAAO,MAAM;AACXN,MAAAA,QAAQ,CAACW,cAAT,CAAwB,OAAxB,EAAiCL,mBAAjC;AACD,KAFD;AAGD,GATQ,EASN,CAACA,mBAAD,EAAsBN,QAAtB,CATM,CAAT;AAWA,QAAMY,cAAc,GAAGhB,WAAW,CAACO,KAAD,EAAQ,GAAR,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACmB,cAAc,CAACX,OAAhB,IAA2B,CAACW,cAAc,CAACP,WAA/C,EAA4D;AAC5DH,IAAAA,QAAQ,CACNL,iBAAiB,CAAC;AAChBI,MAAAA,OAAO,EAAEW,cAAc,CAACX,OADR;AAEhBI,MAAAA,WAAW,EAAEO,cAAc,CAACP;AAFZ,KAAD,CADX,CAAR;AAMD,GARQ,EAQN,CAACH,QAAD,EAAWU,cAAc,CAACP,WAA1B,EAAuCO,cAAc,CAACX,OAAtD,CARM,CAAT;AAUA,SAAO,IAAP;AACD;;GA9CuBH,O;UACiBP,Y,EACtBI,W,EA+BMC,W;;;KAjCDE,O","sourcesContent":["import { useWeb3React } from '@web3-react/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useDebounce from '../../hooks/useDebounce';\nimport { updateBlockNumber } from './actions';\n\nexport default function Updater(): null {\n  const { library: provider, chainId } = useWeb3React();\n  const dispatch = useDispatch();\n  const [state, setState] = useState<{\n    chainId: number | undefined;\n    blockNumber: number | null;\n  }>({\n    chainId,\n    blockNumber: null,\n  });\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((state) => {\n        if (typeof state.blockNumber !== 'number') return { chainId, blockNumber };\n        return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) };\n      });\n    },\n    [chainId],\n  );\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!provider) {\n      return undefined;\n    }\n\n    provider.on('block', blockNumberCallback);\n    return () => {\n      provider.removeListener('block', blockNumberCallback);\n    };\n  }, [blockNumberCallback, provider]);\n\n  const debouncedState = useDebounce(state, 100);\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber) return;\n    dispatch(\n      updateBlockNumber({\n        chainId: debouncedState.chainId,\n        blockNumber: debouncedState.blockNumber,\n      }),\n    );\n  }, [dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}