{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/PhysicalNFTs/src/views/Farms/Cart.tsx\",\n    _s = $RefreshSig$();\n\nimport CartItem from './CartItem';\nimport styled from 'styled-components';\nimport { ModalStake } from './ModalStake';\nimport useModal from 'src/hooks/useModal';\nimport Drawer from '@material-ui/core/Drawer';\nimport React, { useCallback, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = ({\n  cartItems,\n  addToCart,\n  removeFromCart\n}) => {\n  _s();\n\n  const [cartOpen, setCartOpen] = useState(false);\n\n  const calculateTotal = items => items.reduce((ack, item) => ack + item.amount * item.price, 0);\n\n  const onClickOpen = useCallback(async () => {\n    setCartOpen(!cartOpen);\n  }, [cartOpen]);\n  const [showStake] = useModal( /*#__PURE__*/_jsxDEV(ModalStake, {\n    id: '1'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 32\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Orders:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items in cart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }, this) : null, cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total: $\", calculateTotal(cartItems).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"righ\",\n      open: cartOpen,\n      onClose: () => setCartOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: \"yeah\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n      onClick: onClickOpen,\n      children: \"Show Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"K/hXhNAuwtuXfNfyuCO6qOyV/x8=\", false, function () {\n  return [useModal];\n});\n\n_c = Cart;\nexport default Cart;\nconst Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\n`;\n_c2 = Wrapper;\nconst ButtonStyled = styled.button`\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n  text-align: center;\n  width: 150px;\n  height: 50px;\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 6;\n  position: relative;\n  overflow: hidden;\n`;\n_c3 = ButtonStyled;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cart\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"ButtonStyled\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/PhysicalNFTs/src/views/Farms/Cart.tsx"],"names":["CartItem","styled","ModalStake","useModal","Drawer","React","useCallback","useState","Cart","cartItems","addToCart","removeFromCart","cartOpen","setCartOpen","calculateTotal","items","reduce","ack","item","amount","price","onClickOpen","showStake","length","map","id","toFixed","Wrapper","aside","ButtonStyled","button"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;;;AAQA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAA8C;AAAA;;AAC1E,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMO,cAAc,GAAIC,KAAD,IACrBA,KAAK,CAACC,MAAN,CAAa,CAACC,GAAD,EAAcC,IAAd,KAAuBD,GAAG,GAAGC,IAAI,CAACC,MAAL,GAAcD,IAAI,CAACE,KAA7D,EAAoE,CAApE,CADF;;AAEA,QAAMC,WAAW,GAAGf,WAAW,CAAC,YAAY;AAC1CO,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAF8B,EAE5B,CAACA,QAAD,CAF4B,CAA/B;AAGA,QAAM,CAACU,SAAD,IAAcnB,QAAQ,eAAC,QAAC,UAAD;AAAY,IAAA,EAAE,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAD,CAA5B;AACA,sBACE,QAAC,OAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,SAAS,CAACc,MAAV,KAAqB,CAArB,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,GAAoD,IAFvD,EAGGd,SAAS,CAACe,GAAV,CAAeN,IAAD,iBACb,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,SAAS,EAAER,SAHb;AAIE,MAAA,cAAc,EAAEC;AAJlB,OACOO,IAAI,CAACO,EADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAHH,eAWE;AAAA,6BAAaX,cAAc,CAACL,SAAD,CAAd,CAA0BiB,OAA1B,CAAkC,CAAlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAEd,QAA5B;AAAsC,MAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,KAAD,CAAhE;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEQ,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5BD;;GAAMb,I;UAQgBL,Q;;;KARhBK,I;AA8BN,eAAeA,IAAf;AAEA,MAAMmB,OAAO,GAAG1B,MAAM,CAAC2B,KAAM;AAC7B;AACA;AACA;AACA,CAJA;MAAMD,O;AAKN,MAAME,YAAY,GAAG5B,MAAM,CAAC6B,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,Y","sourcesContent":["import CartItem from './CartItem';\nimport styled from 'styled-components';\nimport { Data } from './Farms';\nimport { ModalStake } from './ModalStake';\nimport useModal from 'src/hooks/useModal';\nimport Drawer from '@material-ui/core/Drawer';\nimport React, { useCallback, useState } from 'react';\nimport Item from './Item';\ntype Props = {\n  cartItems: Data[];\n  addToCart: (clickedItem: Data) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n  const [cartOpen, setCartOpen] = useState(false);\n\n  const calculateTotal = (items: Data[]) =>\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\n  const onClickOpen = useCallback(async () => {\n    setCartOpen(!cartOpen);\n  }, [cartOpen]);\n  const [showStake] = useModal(<ModalStake id={'1'} />);\n  return (\n    <Wrapper>\n      <h2>Your Orders:</h2>\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n      {cartItems.map((item) => (\n        <CartItem\n          key={item.id}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n      <Drawer anchor=\"righ\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Wrapper>yeah</Wrapper>\n      </Drawer>\n      <ButtonStyled onClick={onClickOpen}>Show Cart</ButtonStyled>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n\nconst Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\n`;\nconst ButtonStyled = styled.button`\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n  text-align: center;\n  width: 150px;\n  height: 50px;\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 6;\n  position: relative;\n  overflow: hidden;\n`;\n"]},"metadata":{},"sourceType":"module"}