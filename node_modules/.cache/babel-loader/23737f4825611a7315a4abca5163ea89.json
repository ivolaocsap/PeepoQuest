{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/BabyPepe/src/components/Header/Transaction.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useConfiguration } from 'src/contexts/ConfigProvider/ConfigProvider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transaction = ({\n  tx\n}) => {\n  _s();\n\n  var _tx$receipt, _tx$receipt2;\n\n  const summary = tx.summary;\n  const pending = !tx.receipt;\n  const success = !pending && tx && (((_tx$receipt = tx.receipt) === null || _tx$receipt === void 0 ? void 0 : _tx$receipt.status) === 1 || typeof ((_tx$receipt2 = tx.receipt) === null || _tx$receipt2 === void 0 ? void 0 : _tx$receipt2.status) === 'undefined');\n  const config = useConfiguration();\n  return /*#__PURE__*/_jsxDEV(TransactionWrapper, {\n    children: /*#__PURE__*/_jsxDEV(TransactionState, {\n      href: `${config.etherscanUrl}/tx/${tx.hash}`,\n      target: \"_blank\",\n      pending: pending,\n      success: success,\n      children: [/*#__PURE__*/_jsxDEV(TransactionStatusText, {\n        children: [summary !== null && summary !== void 0 ? summary : tx.hash, \" \\u2197\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconWrapper, {\n        pending: pending,\n        success: success,\n        children: pending ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleNotch,\n          spin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: success ? 'fas fa-check-circle' : 'fas fa-exclamation-circle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transaction, \"FH0EXNHWozJ2PEsmh9b8wzq3svM=\", false, function () {\n  return [useConfiguration];\n});\n\n_c = Transaction;\nconst TransactionWrapper = styled.div`\n  margin-top: 8px;\n`;\n_c2 = TransactionWrapper;\nconst TransactionStatusText = styled.div`\n  display: flex;\n  font-size: 14px;\n  color: #e2e2e2;\n  align-items: center;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n_c3 = TransactionStatusText;\nconst TransactionState = styled.a`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n`;\n_c4 = TransactionState;\nconst IconWrapper = styled.div`\n  color: ${({\n  pending,\n  success,\n  theme\n}) => pending ? theme.color.primary : success ? theme.color.green[600] : theme.color.red[300]};\n`;\n_c5 = IconWrapper;\nexport default Transaction;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Transaction\");\n$RefreshReg$(_c2, \"TransactionWrapper\");\n$RefreshReg$(_c3, \"TransactionStatusText\");\n$RefreshReg$(_c4, \"TransactionState\");\n$RefreshReg$(_c5, \"IconWrapper\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/BabyPepe/src/components/Header/Transaction.tsx"],"names":["React","styled","useConfiguration","FontAwesomeIcon","faCircleNotch","Transaction","tx","summary","pending","receipt","success","status","config","etherscanUrl","hash","TransactionWrapper","div","TransactionStatusText","TransactionState","a","IconWrapper","theme","color","primary","green","red"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,4CAAjC;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,SAASC,aAAT,QAA8B,mCAA9B;;;AAKA,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AAAA;;AAC1D,QAAMC,OAAO,GAAGD,EAAE,CAACC,OAAnB;AACA,QAAMC,OAAO,GAAG,CAACF,EAAE,CAACG,OAApB;AACA,QAAMC,OAAO,GACX,CAACF,OAAD,IAAYF,EAAZ,KAAmB,gBAAAA,EAAE,CAACG,OAAH,4DAAYE,MAAZ,MAAuB,CAAvB,IAA4B,wBAAOL,EAAE,CAACG,OAAV,iDAAO,aAAYE,MAAnB,MAA8B,WAA7E,CADF;AAEA,QAAMC,MAAM,GAAGV,gBAAgB,EAA/B;AAEA,sBACE,QAAC,kBAAD;AAAA,2BACE,QAAC,gBAAD;AACE,MAAA,IAAI,EAAG,GAAEU,MAAM,CAACC,YAAa,OAAMP,EAAE,CAACQ,IAAK,EAD7C;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,OAAO,EAAEN,OAHX;AAIE,MAAA,OAAO,EAAEE,OAJX;AAAA,8BAME,QAAC,qBAAD;AAAA,mBAAwBH,OAAxB,aAAwBA,OAAxB,cAAwBA,OAAxB,GAAmCD,EAAE,CAACQ,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEN,OAAtB;AAA+B,QAAA,OAAO,EAAEE,OAAxC;AAAA,kBACGF,OAAO,gBACN,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEJ,aAAvB;AAAsC,UAAA,IAAI;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN;AAAG,UAAA,SAAS,EAAEM,OAAO,GAAG,qBAAH,GAA2B;AAAhD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1BD;;GAAML,W;UAKWH,gB;;;KALXG,W;AA4BN,MAAMU,kBAAkB,GAAGd,MAAM,CAACe,GAAI;AACtC;AACA,CAFA;MAAMD,kB;AAIN,MAAME,qBAAqB,GAAGhB,MAAM,CAACe,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,qB;AAUN,MAAMC,gBAAgB,GAAGjB,MAAM,CAACkB,CAA2C;AAC3E;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,gB;AAQN,MAAME,WAAW,GAAGnB,MAAM,CAACe,GAA6C;AACxE,WAAW,CAAC;AAAER,EAAAA,OAAF;AAAWE,EAAAA,OAAX;AAAoBW,EAAAA;AAApB,CAAD,KACPb,OAAO,GAAGa,KAAK,CAACC,KAAN,CAAYC,OAAf,GAAyBb,OAAO,GAAGW,KAAK,CAACC,KAAN,CAAYE,KAAZ,CAAkB,GAAlB,CAAH,GAA4BH,KAAK,CAACC,KAAN,CAAYG,GAAZ,CAAgB,GAAhB,CAAqB;AAC5F,CAHA;MAAML,W;AAKN,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useConfiguration } from 'src/contexts/ConfigProvider/ConfigProvider';\nimport { TransactionDetails } from 'src/state/transactions/reducer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\ninterface TransactionProps {\n  tx: TransactionDetails;\n}\n\nconst Transaction: React.FC<TransactionProps> = ({ tx }) => {\n  const summary = tx.summary;\n  const pending = !tx.receipt;\n  const success =\n    !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined');\n  const config = useConfiguration();\n\n  return (\n    <TransactionWrapper>\n      <TransactionState\n        href={`${config.etherscanUrl}/tx/${tx.hash}`}\n        target=\"_blank\"\n        pending={pending}\n        success={success}\n      >\n        <TransactionStatusText>{summary ?? tx.hash} â†—</TransactionStatusText>\n        <IconWrapper pending={pending} success={success}>\n          {pending ? (\n            <FontAwesomeIcon icon={faCircleNotch} spin />\n          ) : (\n            <i className={success ? 'fas fa-check-circle' : 'fas fa-exclamation-circle'}></i>\n          )}\n        </IconWrapper>\n      </TransactionState>\n    </TransactionWrapper>\n  );\n};\n\nconst TransactionWrapper = styled.div`\n  margin-top: 8px;\n`;\n\nconst TransactionStatusText = styled.div`\n  display: flex;\n  font-size: 14px;\n  color: #e2e2e2;\n  align-items: center;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst TransactionState = styled.a<{ pending: boolean; success?: boolean }>`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n`;\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.color.primary : success ? theme.color.green[600] : theme.color.red[300]};\n`;\n\nexport default Transaction;\n"]},"metadata":{},"sourceType":"module"}