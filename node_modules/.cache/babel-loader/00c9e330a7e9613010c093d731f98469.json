{"ast":null,"code":"import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useWeb3React}from'@web3-react/core';import React,{createContext,useEffect,useMemo,useState}from'react';import DiamondHand from'../../diamondhand';import{useConfiguration}from'../ConfigProvider/ConfigProvider';import{jsx as _jsx}from\"react/jsx-runtime\";export var Context=/*#__PURE__*/createContext({diamondHand:null});export var DiamondHandProvider=function DiamondHandProvider(_ref){var children=_ref.children;var _useWeb3React=useWeb3React(),account=_useWeb3React.account,library=_useWeb3React.library;var config=useConfiguration();var _useState=useState(),_useState2=_slicedToArray(_useState,2),diamondHand=_useState2[0],setDiamondHand=_useState2[1];useEffect(function(){if(!library||!config){return;}setDiamondHand(new DiamondHand(config,library,account));},[library,account,config]);var value=useMemo(function(){return{diamondHand:diamondHand};},[diamondHand]);return/*#__PURE__*/_jsx(Context.Provider,{value:value,children:children});};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/contexts/DiamondHandProvider/DiamondHandProvider.tsx"],"names":["useWeb3React","React","createContext","useEffect","useMemo","useState","DiamondHand","useConfiguration","Context","diamondHand","DiamondHandProvider","children","account","library","config","setDiamondHand","value"],"mappings":"wJAAA,OAASA,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,SAA/B,CAA0CC,OAA1C,CAAmDC,QAAnD,KAAmE,OAAnE,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,OAASC,gBAAT,KAAiC,kCAAjC,C,2CAMA,MAAO,IAAMC,CAAAA,OAAO,cAAGN,aAAa,CAAqB,CACvDO,WAAW,CAAE,IAD0C,CAArB,CAA7B,CAIP,MAAO,IAAMC,CAAAA,mBAA6B,CAAG,QAAhCA,CAAAA,mBAAgC,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC7D,kBAA6BX,YAAY,EAAzC,CAAQY,OAAR,eAAQA,OAAR,CAAiBC,OAAjB,eAAiBA,OAAjB,CACA,GAAMC,CAAAA,MAAM,CAAGP,gBAAgB,EAA/B,CACA,cAAsCF,QAAQ,EAA9C,wCAAOI,WAAP,eAAoBM,cAApB,eAEAZ,SAAS,CAAC,UAAM,CACd,GAAI,CAACU,OAAD,EAAY,CAACC,MAAjB,CAAyB,CACvB,OACD,CACDC,cAAc,CAAC,GAAIT,CAAAA,WAAJ,CAAgBQ,MAAhB,CAAwBD,OAAxB,CAAiCD,OAAjC,CAAD,CAAd,CACD,CALQ,CAKN,CAACC,OAAD,CAAUD,OAAV,CAAmBE,MAAnB,CALM,CAAT,CAOA,GAAME,CAAAA,KAAK,CAAGZ,OAAO,CAAC,UAAM,CAC1B,MAAO,CAAEK,WAAW,CAAXA,WAAF,CAAP,CACD,CAFoB,CAElB,CAACA,WAAD,CAFkB,CAArB,CAIA,mBAAO,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAEO,KAAzB,UAAiCL,QAAjC,EAAP,CACD,CAjBM","sourcesContent":["import { useWeb3React } from '@web3-react/core';\nimport React, { createContext, useEffect, useMemo, useState } from 'react';\nimport DiamondHand from '../../diamondhand';\nimport { useConfiguration } from '../ConfigProvider/ConfigProvider';\n\nexport interface DiamondHandContext {\n  diamondHand?: DiamondHand;\n}\n\nexport const Context = createContext<DiamondHandContext>({\n  diamondHand: null,\n});\n\nexport const DiamondHandProvider: React.FC = ({ children }) => {\n  const { account, library } = useWeb3React();\n  const config = useConfiguration();\n  const [diamondHand, setDiamondHand] = useState<DiamondHand>();\n\n  useEffect(() => {\n    if (!library || !config) {\n      return;\n    }\n    setDiamondHand(new DiamondHand(config, library, account));\n  }, [library, account, config]);\n\n  const value = useMemo(() => {\n    return { diamondHand };\n  }, [diamondHand]);\n\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}