{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useMemo}from'react';import{isTransactionRecent,useAllTransactions,useClearAllTransactions}from'src/state/transactions/hooks';import styled from'styled-components';import Transaction from'./Transaction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MAX_TRANSACTION_HISTORY=10;var AccountTransactions=function AccountTransactions(){var allTransactions=useAllTransactions();var _useClearAllTransacti=useClearAllTransactions(),clearAllTransactions=_useClearAllTransacti.clearAllTransactions;var sortedRecentTransactions=useMemo(function(){var txs=Object.values(allTransactions);return txs.filter(isTransactionRecent).sort(newTransactionsFirst);},[allTransactions]);var pending=sortedRecentTransactions.filter(function(tx){return!tx.receipt;});var confirmed=sortedRecentTransactions.filter(function(tx){return tx.receipt;}).slice(0,MAX_TRANSACTION_HISTORY);var isEmpty=(confirmed===null||confirmed===void 0?void 0:confirmed.length)+(pending===null||pending===void 0?void 0:pending.length)==0;return/*#__PURE__*/_jsxs(StyledTransactions,{children:[isEmpty&&/*#__PURE__*/_jsx(TransactionTitle,{children:\"Your transactions will appear here...\"}),!isEmpty&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(TransactionHeader,{children:[/*#__PURE__*/_jsx(TransactionTitle,{children:\"Recent transactions\"}),/*#__PURE__*/_jsx(StyledTransactionActions,{onClick:clearAllTransactions,children:/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'5px'},children:\"Clear all\"})})]}),/*#__PURE__*/_jsxs(StyledTransactionList,{children:[(pending===null||pending===void 0?void 0:pending.length)>0&&pending.map(function(tx){return/*#__PURE__*/_jsx(Transaction,{tx:tx},tx.hash);}),(confirmed===null||confirmed===void 0?void 0:confirmed.length)>0&&confirmed.map(function(tx){return/*#__PURE__*/_jsx(Transaction,{tx:tx},tx.hash);})]})]})]});};var StyledTransactions=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 21px 28px;\\n  background: #1a1e22;\\n  margin-top: -1px;\\n  border-bottom-left-radius: 10px;\\n  border-bottom-right-radius: 10px;\\n\"])));var TransactionHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n\"])));var TransactionTitle=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  font-weight: 500;\\n\"])));var StyledTransactionList=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"])));var StyledTransactionActions=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 0px;\\n  margin-left: auto;\\n  background-color: transparent;\\n  appearance: none;\\n  border: none;\\n  cursor: pointer;\\n  color: #fff;\\n  font-size: 13px;\\n  font-family: \",\";\\n  font-weight: 500;\\n  &:hover {\\n    color: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.font.sans;},function(props){return props.theme.color.green[100];});// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a,b){return b.addedTime-a.addedTime;}export default AccountTransactions;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/components/Header/AccountTransactions.tsx"],"names":["React","useMemo","isTransactionRecent","useAllTransactions","useClearAllTransactions","styled","Transaction","MAX_TRANSACTION_HISTORY","AccountTransactions","allTransactions","clearAllTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","newTransactionsFirst","pending","tx","receipt","confirmed","slice","isEmpty","length","marginLeft","map","hash","StyledTransactions","div","TransactionHeader","TransactionTitle","StyledTransactionList","StyledTransactionActions","button","theme","font","sans","props","color","green","a","b","addedTime"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  isTransactionRecent,\n  useAllTransactions,\n  useClearAllTransactions,\n} from 'src/state/transactions/hooks';\nimport { TransactionDetails } from 'src/state/transactions/reducer';\nimport styled from 'styled-components';\nimport Transaction from './Transaction';\n\nconst MAX_TRANSACTION_HISTORY = 10;\n\nconst AccountTransactions: React.FC = () => {\n  const allTransactions = useAllTransactions();\n  const { clearAllTransactions } = useClearAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt);\n  const confirmed = sortedRecentTransactions\n    .filter((tx) => tx.receipt)\n    .slice(0, MAX_TRANSACTION_HISTORY);\n\n  const isEmpty = confirmed?.length + pending?.length == 0;\n  return (\n    <StyledTransactions>\n      {isEmpty && <TransactionTitle>Your transactions will appear here...</TransactionTitle>}\n      {!isEmpty && (\n        <>\n          <TransactionHeader>\n            <TransactionTitle>Recent transactions</TransactionTitle>\n            <StyledTransactionActions onClick={clearAllTransactions}>\n              <span style={{ marginLeft: '5px' }}>Clear all</span>\n            </StyledTransactionActions>\n          </TransactionHeader>\n\n          <StyledTransactionList>\n            {pending?.length > 0 && pending.map((tx) => <Transaction key={tx.hash} tx={tx} />)}\n            {confirmed?.length > 0 &&\n              confirmed.map((tx) => <Transaction key={tx.hash} tx={tx} />)}\n          </StyledTransactionList>\n        </>\n      )}\n    </StyledTransactions>\n  );\n};\n\nconst StyledTransactions = styled.div`\n  padding: 21px 28px;\n  background: #1a1e22;\n  margin-top: -1px;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nconst TransactionHeader = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TransactionTitle = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nconst StyledTransactionList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTransactionActions = styled.button`\n  padding: 0px;\n  margin-left: auto;\n  background-color: transparent;\n  appearance: none;\n  border: none;\n  cursor: pointer;\n  color: #fff;\n  font-size: 13px;\n  font-family: ${({ theme }) => theme.font.sans};\n  font-weight: 500;\n  &:hover {\n    color: ${(props) => props.theme.color.green[100]};\n  }\n`;\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime;\n}\n\nexport default AccountTransactions;\n"]},"metadata":{},"sourceType":"module"}