{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file property.js\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\nvar utils = require('../utils/utils');\n\nvar Property = function (options) {\n  this.name = options.name;\n  this.getter = options.getter;\n  this.setter = options.setter;\n  this.outputFormatter = options.outputFormatter;\n  this.inputFormatter = options.inputFormatter;\n  this.requestManager = null;\n};\n\nProperty.prototype.setRequestManager = function (rm) {\n  this.requestManager = rm;\n};\n/**\n * Should be called to format input args of method\n *\n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\n\n\nProperty.prototype.formatInput = function (arg) {\n  return this.inputFormatter ? this.inputFormatter(arg) : arg;\n};\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param {Object}\n * @return {Object}\n */\n\n\nProperty.prototype.formatOutput = function (result) {\n  return this.outputFormatter && result !== null && result !== undefined ? this.outputFormatter(result) : result;\n};\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\n\n\nProperty.prototype.extractCallback = function (args) {\n  if (utils.isFunction(args[args.length - 1])) {\n    return args.pop(); // modify the args array!\n  }\n};\n/**\n * Should attach function to method\n *\n * @method attachToObject\n * @param {Object}\n * @param {Function}\n */\n\n\nProperty.prototype.attachToObject = function (obj) {\n  var proto = {\n    get: this.buildGet(),\n    enumerable: true\n  };\n  var names = this.name.split('.');\n  var name = names[0];\n\n  if (names.length > 1) {\n    obj[names[0]] = obj[names[0]] || {};\n    obj = obj[names[0]];\n    name = names[1];\n  }\n\n  Object.defineProperty(obj, name, proto);\n  obj[asyncGetterName(name)] = this.buildAsyncGet();\n};\n\nvar asyncGetterName = function (name) {\n  return 'get' + name.charAt(0).toUpperCase() + name.slice(1);\n};\n\nProperty.prototype.buildGet = function () {\n  var property = this;\n  return function get() {\n    return property.formatOutput(property.requestManager.send({\n      method: property.getter\n    }));\n  };\n};\n\nProperty.prototype.buildAsyncGet = function () {\n  var property = this;\n\n  var get = function (callback) {\n    property.requestManager.sendAsync({\n      method: property.getter\n    }, function (err, result) {\n      callback(err, property.formatOutput(result));\n    });\n  };\n\n  get.request = this.request.bind(this);\n  return get;\n};\n/**\n * Should be called to create pure JSONRPC request which can be used in batch request\n *\n * @method request\n * @param {...} params\n * @return {Object} jsonrpc request\n */\n\n\nProperty.prototype.request = function () {\n  var payload = {\n    method: this.getter,\n    params: [],\n    callback: this.extractCallback(Array.prototype.slice.call(arguments))\n  };\n  payload.format = this.formatOutput.bind(this);\n  return payload;\n};\n\nmodule.exports = Property;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/PhysicalNFTs/node_modules/@0xproject/assert/node_modules/web3/lib/web3/property.js"],"names":["utils","require","Property","options","name","getter","setter","outputFormatter","inputFormatter","requestManager","prototype","setRequestManager","rm","formatInput","arg","formatOutput","result","undefined","extractCallback","args","isFunction","length","pop","attachToObject","obj","proto","get","buildGet","enumerable","names","split","Object","defineProperty","asyncGetterName","buildAsyncGet","charAt","toUpperCase","slice","property","send","method","callback","sendAsync","err","request","bind","payload","params","Array","call","arguments","format","module","exports"],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file property.js\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\n\nvar Property = function (options) {\n    this.name = options.name;\n    this.getter = options.getter;\n    this.setter = options.setter;\n    this.outputFormatter = options.outputFormatter;\n    this.inputFormatter = options.inputFormatter;\n    this.requestManager = null;\n};\n\nProperty.prototype.setRequestManager = function (rm) {\n    this.requestManager = rm;\n};\n\n/**\n * Should be called to format input args of method\n *\n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\nProperty.prototype.formatInput = function (arg) {\n    return this.inputFormatter ? this.inputFormatter(arg) : arg;\n};\n\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param {Object}\n * @return {Object}\n */\nProperty.prototype.formatOutput = function (result) {\n    return this.outputFormatter && result !== null && result !== undefined ? this.outputFormatter(result) : result;\n};\n\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\nProperty.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\n\n/**\n * Should attach function to method\n *\n * @method attachToObject\n * @param {Object}\n * @param {Function}\n */\nProperty.prototype.attachToObject = function (obj) {\n    var proto = {\n        get: this.buildGet(),\n        enumerable: true\n    };\n\n    var names = this.name.split('.');\n    var name = names[0];\n    if (names.length > 1) {\n        obj[names[0]] = obj[names[0]] || {};\n        obj = obj[names[0]];\n        name = names[1];\n    }\n\n    Object.defineProperty(obj, name, proto);\n    obj[asyncGetterName(name)] = this.buildAsyncGet();\n};\n\nvar asyncGetterName = function (name) {\n    return 'get' + name.charAt(0).toUpperCase() + name.slice(1);\n};\n\nProperty.prototype.buildGet = function () {\n    var property = this;\n    return function get() {\n        return property.formatOutput(property.requestManager.send({\n            method: property.getter\n        }));\n    };\n};\n\nProperty.prototype.buildAsyncGet = function () {\n    var property = this;\n    var get = function (callback) {\n        property.requestManager.sendAsync({\n            method: property.getter\n        }, function (err, result) {\n            callback(err, property.formatOutput(result));\n        });\n    };\n    get.request = this.request.bind(this);\n    return get;\n};\n\n/**\n * Should be called to create pure JSONRPC request which can be used in batch request\n *\n * @method request\n * @param {...} params\n * @return {Object} jsonrpc request\n */\nProperty.prototype.request = function () {\n    var payload = {\n        method: this.getter,\n        params: [],\n        callback: this.extractCallback(Array.prototype.slice.call(arguments))\n    };\n    payload.format = this.formatOutput.bind(this);\n    return payload;\n};\n\nmodule.exports = Property;\n\n"]},"metadata":{},"sourceType":"script"}