{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/BabyPepe/src/views/Farms/ButtonHarvest.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ButtonAction } from 'src/components/ButtonAction';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport styled, { keyframes } from 'styled-components';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport useHandleTransactionReceipt from 'src/hooks/useHandleTransactionReceipt';\nimport { useConfiguration } from 'src/contexts/ConfigProvider/ConfigProvider';\nimport { useTokenBalance } from 'src/contexts/AccountBalanceProvider/AccountBalanceProvider';\nimport useApprove, { ApprovalState } from 'src/hooks/useApprove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ButtonStatus;\n\n(function (ButtonStatus) {\n  ButtonStatus[ButtonStatus[\"notConnected\"] = 1] = \"notConnected\";\n  ButtonStatus[ButtonStatus[\"insufficient\"] = 2] = \"insufficient\";\n  ButtonStatus[ButtonStatus[\"requireApproval\"] = 3] = \"requireApproval\";\n  ButtonStatus[ButtonStatus[\"approvalPending\"] = 4] = \"approvalPending\";\n  ButtonStatus[ButtonStatus[\"paused\"] = 15] = \"paused\";\n  ButtonStatus[ButtonStatus[\"ready\"] = 20] = \"ready\";\n  ButtonStatus[ButtonStatus[\"notEnough\"] = 21] = \"notEnough\";\n})(ButtonStatus || (ButtonStatus = {}));\n\nexport const ButtonHarvest = ({\n  amount\n}) => {\n  _s();\n\n  const dh = useDiamondHand();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n  const config = useConfiguration();\n  const [token, setToken] = useState();\n  const balance = useTokenBalance(token);\n  useEffect(() => {\n    if (!dh || token) return;\n    setToken(dh.FreePepe);\n  }, [dh, token]);\n  const buyAddress = useMemo(() => {\n    var _config$addresses;\n\n    if (!config) {\n      return;\n    }\n\n    return config === null || config === void 0 ? void 0 : (_config$addresses = config.addresses) === null || _config$addresses === void 0 ? void 0 : _config$addresses.MasterChef;\n  }, [config]);\n  const [approvalTokenState, approveToken] = useApprove(token, buyAddress);\n\n  const stake = async () => {\n    try {\n      var _dh$MASTERCHEF;\n\n      const tx = await handleTransactionReceipt((_dh$MASTERCHEF = dh.MASTERCHEF) === null || _dh$MASTERCHEF === void 0 ? void 0 : _dh$MASTERCHEF.deposit(0, BigNumber.from(\"0\")), `Harvest`);\n\n      if (tx && tx.response) {\n        await tx.response.wait();\n        tx.hideModal();\n      }\n    } catch {//\n    }\n  };\n\n  const status = useMemo(() => {\n    if (approvalTokenState == ApprovalState.PENDING) {\n      return ButtonStatus.approvalPending;\n    }\n\n    if (approvalTokenState !== ApprovalState.APPROVED) {\n      return ButtonStatus.requireApproval;\n    }\n\n    return ButtonStatus.ready;\n  }, [approvalTokenState, balance]);\n  const buttonText = useMemo(() => {\n    switch (status) {\n      case ButtonStatus.approvalPending:\n        return `Approving ${token === null || token === void 0 ? void 0 : token.symbol}...`;\n\n      case ButtonStatus.requireApproval:\n        return 'Approve';\n\n      default:\n        return 'Harvest';\n    }\n  }, [status, token]);\n  const onClickBuy = useCallback(async () => {\n    switch (status) {\n      case ButtonStatus.requireApproval:\n        await approveToken();\n        break;\n\n      case ButtonStatus.approvalPending:\n        break;\n\n      case ButtonStatus.ready:\n        stake();\n        break;\n    }\n  }, [status, approveToken, stake]);\n  return /*#__PURE__*/_jsxDEV(StyledButtonAction, {\n    onClick: onClickBuy,\n    children: buttonText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ButtonHarvest, \"VZi4ktHUEcwCsTrBnPC/PSw0SM4=\", false, function () {\n  return [useDiamondHand, useHandleTransactionReceipt, useConfiguration, useTokenBalance, useApprove];\n});\n\n_c = ButtonHarvest;\nconst TransitioningBackground = keyframes` \n  0% {\n    background-position: 1% 0%;\n  }\n  50% {\n    background-position: 99% 100%;\n  }\n  100% {\n    background-position: 1% 0%;\n  }\n`;\nconst StyledButtonAction = styled(ButtonAction)`\nfont-size: 1rem;\n  font-weight: 600;\n  color: white;\n  text-align: center;\n  width: 150px;\n  height: 50px;\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 6;\n  position: relative;\n  overflow: hidden;\n\n  background-image: linear-gradient(270deg, ${p => p.theme.color.secondary}, ${p => p.theme.color.primary.light});\n  background-size: 400% 400%;\n  animation: ${TransitioningBackground} 10s ease infinite;\n  \n  transition: 0.6s;\n\n\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    background: rgba(255, 255, 255, 0.5);\n    width: 60px;\n    height: 100%;\n    top: 0;\n    filter: blur(30px);\n    transform: translateX(-100px) skewX(-15deg);\n  }\n\n\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    background: rgba(255, 255, 255, 0.2);\n    width: 30px;\n    height: 100%;\n    top: 0;\n    filter: blur(5px);\n    transform: translateX(-100px) skewX(-15deg);\n  }\n\n\n  &:hover {\n    background-image: linear-gradient(to left, ${p => p.theme.color.secondary}, #d155b8);\n    transform: scale(1.05);\n    cursor: pointer;\n\n   \n    &::before,\n    &::after {\n      transform: translateX(300px) skewX(-15deg);\n      transition: 0.7s;\n    }\n  }\n`;\n_c2 = StyledButtonAction;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonHarvest\");\n$RefreshReg$(_c2, \"StyledButtonAction\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/BabyPepe/src/views/Farms/ButtonHarvest.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","ButtonAction","BigNumber","styled","keyframes","useDiamondHand","useHandleTransactionReceipt","useConfiguration","useTokenBalance","useApprove","ApprovalState","ButtonStatus","ButtonHarvest","amount","dh","handleTransactionReceipt","config","token","setToken","balance","FreePepe","buyAddress","addresses","MasterChef","approvalTokenState","approveToken","stake","tx","MASTERCHEF","deposit","from","response","wait","hideModal","status","PENDING","approvalPending","APPROVED","requireApproval","ready","buttonText","symbol","onClickBuy","TransitioningBackground","StyledButtonAction","p","theme","color","secondary","primary","light"],"mappings":"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","sourcesContent":["import React, { forwardRef,useCallback, useEffect, useMemo, useState }  from 'react';\nimport { ButtonAction } from 'src/components/ButtonAction';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport styled ,{ keyframes }from 'styled-components';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport useHandleTransactionReceipt from 'src/hooks/useHandleTransactionReceipt';\nimport { useConfiguration } from 'src/contexts/ConfigProvider/ConfigProvider';\nimport { useTokenBalance } from 'src/contexts/AccountBalanceProvider/AccountBalanceProvider';\nimport useApprove, { ApprovalState } from 'src/hooks/useApprove';\nimport ERC20 from 'src/diamondhand/ERC20';\n\nenum ButtonStatus {\n  notConnected = 1,\n  insufficient = 2,\n  requireApproval = 3,\n  approvalPending = 4,\n  paused = 15,\n  ready = 20,\n  notEnough = 21,\n}\n\ninterface ButtonStakeProps {\n  amount?: BigNumber;\n}\n\nexport const ButtonHarvest: React.ForwardRefRenderFunction<unknown, ButtonStakeProps> = ({ amount }) => {\n\n  const dh = useDiamondHand();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n  const config = useConfiguration();\n  const [token, setToken] = useState<ERC20 | undefined>();\nconst balance = useTokenBalance(token);\n\nuseEffect(() => {\n  if (!dh || token) return;\n  setToken(dh.FreePepe);\n}, [dh, token]);\n\nconst buyAddress = useMemo(() => {\n  if (!config) {\n    return;\n  }\n  return config?.addresses?.MasterChef;\n}, [config]);\n\nconst [approvalTokenState, approveToken] = useApprove(token, buyAddress);\n  \n  const stake = async () => {\n    try {\n      const tx = await handleTransactionReceipt(\n        dh.MASTERCHEF?.deposit(0,BigNumber.from(\"0\")),\n        `Harvest`,\n      );\n      if (tx && tx.response) {\n        await tx.response.wait();\n        tx.hideModal();\n      }\n    } catch {\n      //\n    }\n  };\n\n  const status = useMemo(() => {\n\n\n    if (approvalTokenState == ApprovalState.PENDING) {\n      return ButtonStatus.approvalPending;\n    }\n\n    if (approvalTokenState !== ApprovalState.APPROVED) {\n      return ButtonStatus.requireApproval;\n    }\n\n    return ButtonStatus.ready;\n  }, [approvalTokenState, balance]);\n\n  const buttonText = useMemo(() => {\n    switch (status) {\n      case ButtonStatus.approvalPending:\n        return `Approving ${token?.symbol}...`;\n\n      case ButtonStatus.requireApproval:\n        return 'Approve';\n      default:\n        return 'Harvest';\n    }\n  }, [status, token]);\n\n\n  const onClickBuy = useCallback(async () => {\n    switch (status) {\n      case ButtonStatus.requireApproval:\n        await approveToken();\n        break;\n      case ButtonStatus.approvalPending:\n        break;\n      case ButtonStatus.ready:\n        stake();\n        break;\n    }\n  }, [status,  approveToken, stake]);\n\n  return <StyledButtonAction onClick={onClickBuy}>{buttonText}</StyledButtonAction>;\n};\n\nconst TransitioningBackground = keyframes` \n  0% {\n    background-position: 1% 0%;\n  }\n  50% {\n    background-position: 99% 100%;\n  }\n  100% {\n    background-position: 1% 0%;\n  }\n`;\n\nconst StyledButtonAction = styled(ButtonAction)`\nfont-size: 1rem;\n  font-weight: 600;\n  color: white;\n  text-align: center;\n  width: 150px;\n  height: 50px;\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 6;\n  position: relative;\n  overflow: hidden;\n\n  background-image: linear-gradient(270deg, ${(p) => p.theme.color.secondary}, ${(p) => p.theme.color.primary.light});\n  background-size: 400% 400%;\n  animation: ${TransitioningBackground} 10s ease infinite;\n  \n  transition: 0.6s;\n\n\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    background: rgba(255, 255, 255, 0.5);\n    width: 60px;\n    height: 100%;\n    top: 0;\n    filter: blur(30px);\n    transform: translateX(-100px) skewX(-15deg);\n  }\n\n\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    background: rgba(255, 255, 255, 0.2);\n    width: 30px;\n    height: 100%;\n    top: 0;\n    filter: blur(5px);\n    transform: translateX(-100px) skewX(-15deg);\n  }\n\n\n  &:hover {\n    background-image: linear-gradient(to left, ${(p) => p.theme.color.secondary}, #d155b8);\n    transform: scale(1.05);\n    cursor: pointer;\n\n   \n    &::before,\n    &::after {\n      transform: translateX(300px) skewX(-15deg);\n      transition: 0.7s;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}