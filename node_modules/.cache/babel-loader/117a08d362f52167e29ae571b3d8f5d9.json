{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/cuffies/src/contexts/ConfigProvider/ConfigProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nimport { getDefaultConfiguration } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext({});\nconst networkConfig = getDefaultConfiguration();\nexport const ConfigProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: networkConfig,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n_c = ConfigProvider;\nexport const useConfiguration = () => {\n  _s();\n\n  console.log('useConfiguration', useContext(Context));\n  const networkConfig = getDefaultConfiguration();\n  return networkConfig;\n};\n\n_s(useConfiguration, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigProvider\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/contexts/ConfigProvider/ConfigProvider.tsx"],"names":["React","createContext","useContext","getDefaultConfiguration","Context","networkConfig","ConfigProvider","children","useConfiguration","console","log"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA0CC,UAA1C,QAA4D,OAA5D;AACA,SAASC,uBAAT,QAAwC,cAAxC;;AAGA,MAAMC,OAAO,gBAAGH,aAAa,CAAgB,EAAhB,CAA7B;AACA,MAAMI,aAAa,GAAGF,uBAAuB,EAA7C;AAEA,OAAO,MAAMG,cAAiD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjF,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEF,aAAzB;AAAA,cAAyCE;AAAzC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFM;KAAMD,c;AAIb,OAAO,MAAME,gBAAgB,GAAG,MAAqB;AAAA;;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,UAAU,CAACE,OAAD,CAA1C;AACA,QAAMC,aAAa,GAAGF,uBAAuB,EAA7C;AAEA,SAAOE,aAAP;AACD,CALM;;GAAMG,gB","sourcesContent":["import { nullFormat } from 'numeral';\nimport React, { createContext, ReactNode, useContext } from 'react';\nimport { getDefaultConfiguration } from '../../config';\nimport { Configuration } from '../../diamondhand/config';\n\nconst Context = createContext<Configuration>({} as Configuration);\nconst networkConfig = getDefaultConfiguration();\n\nexport const ConfigProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  return <Context.Provider value={networkConfig}>{children}</Context.Provider>;\n};\n\nexport const useConfiguration = (): Configuration => {\n  console.log('useConfiguration', useContext(Context));\n  const networkConfig = getDefaultConfiguration();\n\n  return networkConfig;\n};\n"]},"metadata":{},"sourceType":"module"}