{"ast":null,"code":"var formatters = require('./formatters');\n\nvar utils = require('./../utils/utils');\n\nvar Method = require('./method');\n\nvar Property = require('./property'); // TODO: refactor, so the input params are not altered.\n// it's necessary to make same 'extension' work with multiple providers\n\n\nvar extend = function (web3) {\n  /* jshint maxcomplexity:5 */\n  var ex = function (extension) {\n    var extendedObject;\n\n    if (extension.property) {\n      if (!web3[extension.property]) {\n        web3[extension.property] = {};\n      }\n\n      extendedObject = web3[extension.property];\n    } else {\n      extendedObject = web3;\n    }\n\n    if (extension.methods) {\n      extension.methods.forEach(function (method) {\n        method.attachToObject(extendedObject);\n        method.setRequestManager(web3._requestManager);\n      });\n    }\n\n    if (extension.properties) {\n      extension.properties.forEach(function (property) {\n        property.attachToObject(extendedObject);\n        property.setRequestManager(web3._requestManager);\n      });\n    }\n  };\n\n  ex.formatters = formatters;\n  ex.utils = utils;\n  ex.Method = Method;\n  ex.Property = Property;\n  return ex;\n};\n\nmodule.exports = extend;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/PhysicalNFTs/node_modules/wyvern-schemas/node_modules/web3/lib/web3/extend.js"],"names":["formatters","require","utils","Method","Property","extend","web3","ex","extension","extendedObject","property","methods","forEach","method","attachToObject","setRequestManager","_requestManager","properties","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB,C,CAEA;AACA;;;AACA,IAAII,MAAM,GAAG,UAAUC,IAAV,EAAgB;AACzB;AACA,MAAIC,EAAE,GAAG,UAAUC,SAAV,EAAqB;AAE1B,QAAIC,cAAJ;;AACA,QAAID,SAAS,CAACE,QAAd,EAAwB;AACpB,UAAI,CAACJ,IAAI,CAACE,SAAS,CAACE,QAAX,CAAT,EAA+B;AAC3BJ,QAAAA,IAAI,CAACE,SAAS,CAACE,QAAX,CAAJ,GAA2B,EAA3B;AACH;;AACDD,MAAAA,cAAc,GAAGH,IAAI,CAACE,SAAS,CAACE,QAAX,CAArB;AACH,KALD,MAKO;AACHD,MAAAA,cAAc,GAAGH,IAAjB;AACH;;AAED,QAAIE,SAAS,CAACG,OAAd,EAAuB;AACnBH,MAAAA,SAAS,CAACG,OAAV,CAAkBC,OAAlB,CAA0B,UAAUC,MAAV,EAAkB;AACxCA,QAAAA,MAAM,CAACC,cAAP,CAAsBL,cAAtB;AACAI,QAAAA,MAAM,CAACE,iBAAP,CAAyBT,IAAI,CAACU,eAA9B;AACH,OAHD;AAIH;;AAED,QAAIR,SAAS,CAACS,UAAd,EAA0B;AACtBT,MAAAA,SAAS,CAACS,UAAV,CAAqBL,OAArB,CAA6B,UAAUF,QAAV,EAAoB;AAC7CA,QAAAA,QAAQ,CAACI,cAAT,CAAwBL,cAAxB;AACAC,QAAAA,QAAQ,CAACK,iBAAT,CAA2BT,IAAI,CAACU,eAAhC;AACH,OAHD;AAIH;AACJ,GAzBD;;AA2BAT,EAAAA,EAAE,CAACP,UAAH,GAAgBA,UAAhB;AACAO,EAAAA,EAAE,CAACL,KAAH,GAAWA,KAAX;AACAK,EAAAA,EAAE,CAACJ,MAAH,GAAYA,MAAZ;AACAI,EAAAA,EAAE,CAACH,QAAH,GAAcA,QAAd;AAEA,SAAOG,EAAP;AACH,CAnCD;;AAuCAW,MAAM,CAACC,OAAP,GAAiBd,MAAjB","sourcesContent":["var formatters = require('./formatters');\nvar utils = require('./../utils/utils');\nvar Method = require('./method');\nvar Property = require('./property');\n\n// TODO: refactor, so the input params are not altered.\n// it's necessary to make same 'extension' work with multiple providers\nvar extend = function (web3) {\n    /* jshint maxcomplexity:5 */\n    var ex = function (extension) {\n\n        var extendedObject;\n        if (extension.property) {\n            if (!web3[extension.property]) {\n                web3[extension.property] = {};\n            }\n            extendedObject = web3[extension.property];\n        } else {\n            extendedObject = web3;\n        }\n\n        if (extension.methods) {\n            extension.methods.forEach(function (method) {\n                method.attachToObject(extendedObject);\n                method.setRequestManager(web3._requestManager);\n            });\n        }\n\n        if (extension.properties) {\n            extension.properties.forEach(function (property) {\n                property.attachToObject(extendedObject);\n                property.setRequestManager(web3._requestManager);\n            });\n        }\n    };\n\n    ex.formatters = formatters; \n    ex.utils = utils;\n    ex.Method = Method;\n    ex.Property = Property;\n\n    return ex;\n};\n\n\n\nmodule.exports = extend;\n\n"]},"metadata":{},"sourceType":"script"}