{"ast":null,"code":"import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useWeb3React}from'@web3-react/core';import{useCallback,useEffect,useState}from'react';import{useDispatch}from'react-redux';import useDebounce from'../../hooks/useDebounce';import{updateBlockNumber}from'./actions';export default function Updater(){var _useWeb3React=useWeb3React(),provider=_useWeb3React.library,chainId=_useWeb3React.chainId;var dispatch=useDispatch();var _useState=useState({chainId:chainId,blockNumber:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var blockNumberCallback=useCallback(function(blockNumber){setState(function(state){if(typeof state.blockNumber!=='number')return{chainId:chainId,blockNumber:blockNumber};return{chainId:chainId,blockNumber:Math.max(blockNumber,state.blockNumber)};});},[chainId]);// attach/detach listeners\nuseEffect(function(){if(!provider){return undefined;}provider.on('block',blockNumberCallback);return function(){provider.removeListener('block',blockNumberCallback);};},[blockNumberCallback,provider]);var debouncedState=useDebounce(state,100);useEffect(function(){if(!debouncedState.chainId||!debouncedState.blockNumber)return;dispatch(updateBlockNumber({chainId:debouncedState.chainId,blockNumber:debouncedState.blockNumber}));},[dispatch,debouncedState.blockNumber,debouncedState.chainId]);return null;}","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/state/application/updater.ts"],"names":["useWeb3React","useCallback","useEffect","useState","useDispatch","useDebounce","updateBlockNumber","Updater","provider","library","chainId","dispatch","blockNumber","state","setState","blockNumberCallback","Math","max","undefined","on","removeListener","debouncedState"],"mappings":"wJAAA,OAASA,YAAT,KAA6B,kBAA7B,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,OAASC,iBAAT,KAAkC,WAAlC,CAEA,cAAe,SAASC,CAAAA,OAAT,EAAyB,CACtC,kBAAuCP,YAAY,EAAnD,CAAiBQ,QAAjB,eAAQC,OAAR,CAA2BC,OAA3B,eAA2BA,OAA3B,CACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,cAA0BD,QAAQ,CAG/B,CACDO,OAAO,CAAPA,OADC,CAEDE,WAAW,CAAE,IAFZ,CAH+B,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAQA,GAAMC,CAAAA,mBAAmB,CAAGd,WAAW,CACrC,SAACW,WAAD,CAAyB,CACvBE,QAAQ,CAAC,SAACD,KAAD,CAAW,CAClB,GAAI,MAAOA,CAAAA,KAAK,CAACD,WAAb,GAA6B,QAAjC,CAA2C,MAAO,CAAEF,OAAO,CAAPA,OAAF,CAAWE,WAAW,CAAXA,WAAX,CAAP,CAC3C,MAAO,CAAEF,OAAO,CAAPA,OAAF,CAAWE,WAAW,CAAEI,IAAI,CAACC,GAAL,CAASL,WAAT,CAAsBC,KAAK,CAACD,WAA5B,CAAxB,CAAP,CACD,CAHO,CAAR,CAID,CANoC,CAOrC,CAACF,OAAD,CAPqC,CAAvC,CAUA;AACAR,SAAS,CAAC,UAAM,CACd,GAAI,CAACM,QAAL,CAAe,CACb,MAAOU,CAAAA,SAAP,CACD,CAEDV,QAAQ,CAACW,EAAT,CAAY,OAAZ,CAAqBJ,mBAArB,EACA,MAAO,WAAM,CACXP,QAAQ,CAACY,cAAT,CAAwB,OAAxB,CAAiCL,mBAAjC,EACD,CAFD,CAGD,CATQ,CASN,CAACA,mBAAD,CAAsBP,QAAtB,CATM,CAAT,CAWA,GAAMa,CAAAA,cAAc,CAAGhB,WAAW,CAACQ,KAAD,CAAQ,GAAR,CAAlC,CAEAX,SAAS,CAAC,UAAM,CACd,GAAI,CAACmB,cAAc,CAACX,OAAhB,EAA2B,CAACW,cAAc,CAACT,WAA/C,CAA4D,OAC5DD,QAAQ,CACNL,iBAAiB,CAAC,CAChBI,OAAO,CAAEW,cAAc,CAACX,OADR,CAEhBE,WAAW,CAAES,cAAc,CAACT,WAFZ,CAAD,CADX,CAAR,CAMD,CARQ,CAQN,CAACD,QAAD,CAAWU,cAAc,CAACT,WAA1B,CAAuCS,cAAc,CAACX,OAAtD,CARM,CAAT,CAUA,MAAO,KAAP,CACD","sourcesContent":["import { useWeb3React } from '@web3-react/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useDebounce from '../../hooks/useDebounce';\nimport { updateBlockNumber } from './actions';\n\nexport default function Updater(): null {\n  const { library: provider, chainId } = useWeb3React();\n  const dispatch = useDispatch();\n  const [state, setState] = useState<{\n    chainId: number | undefined;\n    blockNumber: number | null;\n  }>({\n    chainId,\n    blockNumber: null,\n  });\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((state) => {\n        if (typeof state.blockNumber !== 'number') return { chainId, blockNumber };\n        return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) };\n      });\n    },\n    [chainId],\n  );\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!provider) {\n      return undefined;\n    }\n\n    provider.on('block', blockNumberCallback);\n    return () => {\n      provider.removeListener('block', blockNumberCallback);\n    };\n  }, [blockNumberCallback, provider]);\n\n  const debouncedState = useDebounce(state, 100);\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber) return;\n    dispatch(\n      updateBlockNumber({\n        chainId: debouncedState.chainId,\n        blockNumber: debouncedState.blockNumber,\n      }),\n    );\n  }, [dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}