{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { useAddPopup } from '../state/application/hooks';\nimport WaitingApproval from '../components/WaitingApproval';\nimport useModalWithFC from './useModalWithFC';\nimport { getErrorMessage } from '../utils/transactionError';\nimport WaitingApprovalResult from '../components/WaitingApprovalResult';\n\nconst useHandleTransactionReceipt = () => {\n  _s();\n\n  const {\n    showModal,\n    hideModal\n  } = useModalWithFC('approval');\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n  return useCallback(async (promise, summary, customData) => {\n    showModal(WaitingApproval, {\n      message: summary,\n      onDismiss: hideModal\n    });\n\n    try {\n      customData = customData || {};\n      const response = await promise;\n      showModal(WaitingApprovalResult, {\n        onDismiss: hideModal,\n        transactionHash: response.hash\n      });\n      addTransaction(response, { ...customData,\n        summary\n      });\n      return {\n        response,\n        hideModal\n      };\n    } catch (err) {\n      console.warn('Error handled', err);\n      hideModal();\n      const {\n        title,\n        message\n      } = getErrorMessage(err, summary);\n      addPopup({\n        error: {\n          message,\n          title\n        }\n      });\n      throw err;\n    }\n  }, [addPopup, addTransaction, showModal, hideModal]);\n};\n\n_s(useHandleTransactionReceipt, \"nwuDPxY0JCTPo+GDBIpoH8FN84E=\", false, function () {\n  return [useModalWithFC, useTransactionAdder, useAddPopup];\n});\n\nexport default useHandleTransactionReceipt;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/hooks/useHandleTransactionReceipt.ts"],"names":["useCallback","useTransactionAdder","useAddPopup","WaitingApproval","useModalWithFC","getErrorMessage","WaitingApprovalResult","useHandleTransactionReceipt","showModal","hideModal","addTransaction","addPopup","promise","summary","customData","message","onDismiss","response","transactionHash","hash","err","console","warn","title","error"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAAgCC,mBAAhC,QAA2D,6BAA3D;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;;AAEA,MAAMC,2BAA2B,GAAG,MAAM;AAAA;;AACxC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BL,cAAc,CAAC,UAAD,CAA/C;AACA,QAAMM,cAAc,GAAGT,mBAAmB,EAA1C;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,SAAOF,WAAW,CAChB,OACEY,OADF,EAEEC,OAFF,EAGEC,UAHF,KAIK;AACHN,IAAAA,SAAS,CAACL,eAAD,EAAkB;AACzBY,MAAAA,OAAO,EAAEF,OADgB;AAEzBG,MAAAA,SAAS,EAAEP;AAFc,KAAlB,CAAT;;AAIA,QAAI;AACFK,MAAAA,UAAU,GAAGA,UAAU,IAAI,EAA3B;AACA,YAAMG,QAAQ,GAAG,MAAML,OAAvB;AACAJ,MAAAA,SAAS,CAACF,qBAAD,EAAwB;AAC/BU,QAAAA,SAAS,EAAEP,SADoB;AAE/BS,QAAAA,eAAe,EAAED,QAAQ,CAACE;AAFK,OAAxB,CAAT;AAIAT,MAAAA,cAAc,CAACO,QAAD,EAAW,EAAE,GAAGH,UAAL;AAAiBD,QAAAA;AAAjB,OAAX,CAAd;AACA,aAAO;AAAEI,QAAAA,QAAF;AAAYR,QAAAA;AAAZ,OAAP;AACD,KATD,CASE,OAAOW,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAa,eAAb,EAA8BF,GAA9B;AACAX,MAAAA,SAAS;AACT,YAAM;AAAEc,QAAAA,KAAF;AAASR,QAAAA;AAAT,UAAqBV,eAAe,CAACe,GAAD,EAAMP,OAAN,CAA1C;AACAF,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,KAAK,EAAE;AAAET,UAAAA,OAAF;AAAWQ,UAAAA;AAAX;AAAT,OAAD,CAAR;AACA,YAAMH,GAAN;AACD;AACF,GA1Be,EA2BhB,CAACT,QAAD,EAAWD,cAAX,EAA2BF,SAA3B,EAAsCC,SAAtC,CA3BgB,CAAlB;AA6BD,CAjCD;;GAAMF,2B;UAC6BH,c,EACVH,mB,EACNC,W;;;AAgCnB,eAAeK,2BAAf","sourcesContent":["import { useCallback } from 'react';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { TransactionCustomData, useTransactionAdder } from '../state/transactions/hooks';\nimport { useAddPopup } from '../state/application/hooks';\nimport WaitingApproval from '../components/WaitingApproval';\nimport useModalWithFC from './useModalWithFC';\nimport { getErrorMessage } from '../utils/transactionError';\nimport WaitingApprovalResult from '../components/WaitingApprovalResult';\n\nconst useHandleTransactionReceipt = () => {\n  const { showModal, hideModal } = useModalWithFC('approval');\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n  return useCallback(\n    async (\n      promise: Promise<TransactionResponse>,\n      summary: string,\n      customData?: TransactionCustomData,\n    ) => {\n      showModal(WaitingApproval, {\n        message: summary,\n        onDismiss: hideModal,\n      });\n      try {\n        customData = customData || {};\n        const response = await promise;\n        showModal(WaitingApprovalResult, {\n          onDismiss: hideModal,\n          transactionHash: response.hash,\n        });\n        addTransaction(response, { ...customData, summary });\n        return { response, hideModal };\n      } catch (err) {\n        console.warn('Error handled', err);\n        hideModal();\n        const { title, message } = getErrorMessage(err, summary);\n        addPopup({ error: { message, title } });\n        throw err;\n      }\n    },\n    [addPopup, addTransaction, showModal, hideModal],\n  );\n};\n\nexport default useHandleTransactionReceipt;\n"]},"metadata":{},"sourceType":"module"}