{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar json_schemas_1 = require(\"@0xproject/json-schemas\");\n\nvar data = {\n  type: 'string',\n  pattern: '^0x[0-9a-f]*$'\n};\nvar orderSchema = {\n  id: '/Order',\n  properties: {\n    exchange: {\n      $ref: '/Address'\n    },\n    maker: {\n      $ref: '/Address'\n    },\n    taker: {\n      $ref: '/Address'\n    },\n    makerRelayerFee: {\n      $ref: '/Number'\n    },\n    takerRelayerFee: {\n      $ref: '/Number'\n    },\n    makerProtocolFee: {\n      $ref: '/Number'\n    },\n    takerProtocolFee: {\n      $ref: '/Number'\n    },\n    feeRecipient: {\n      $ref: '/Address'\n    },\n    feeMethod: {\n      $ref: '/Number'\n    },\n    side: {\n      $ref: '/Number'\n    },\n    saleKind: {\n      $ref: '/Number'\n    },\n    target: {\n      $ref: '/Address'\n    },\n    howToCall: {\n      $ref: '/Number'\n    },\n    calldata: data,\n    replacementPattern: data,\n    staticTarget: {\n      $ref: '/Address'\n    },\n    staticExtradata: data,\n    paymentToken: {\n      $ref: '/Address'\n    },\n    basePrice: {\n      $ref: '/Number'\n    },\n    extra: {\n      $ref: '/Number'\n    },\n    listingTime: {\n      $ref: '/Number'\n    },\n    expirationTime: {\n      $ref: '/Number'\n    },\n    salt: {\n      $ref: '/Number'\n    }\n  },\n  required: ['exchange', 'maker', 'taker', 'makerRelayerFee', 'takerRelayerFee', 'makerProtocolFee', 'takerProtocolFee', 'feeRecipient', 'feeMethod', 'side', 'saleKind', 'target', 'howToCall', 'calldata', 'replacementPattern', 'staticTarget', 'staticExtradata', 'paymentToken', 'basePrice', 'extra', 'listingTime', 'expirationTime', 'salt'],\n  type: 'object'\n};\nvar signedOrderSchema = {\n  id: '/SignedOrder',\n  allOf: [{\n    $ref: '/Order'\n  }, {\n    properties: {\n      ecSignature: {\n        $ref: '/ECSignature'\n      }\n    },\n    required: ['ecSignature']\n  }]\n};\nexports.schemas = {\n  numberSchema: json_schemas_1.schemas.numberSchema,\n  addressSchema: json_schemas_1.schemas.addressSchema,\n  ecSignatureSchema: json_schemas_1.schemas.ecSignatureSchema,\n  ecSignatureParameterSchema: json_schemas_1.schemas.ecSignatureParameterSchema,\n  orderHashSchema: json_schemas_1.schemas.orderHashSchema,\n  orderSchema: orderSchema,\n  signedOrderSchema: signedOrderSchema\n};","map":{"version":3,"sources":["../src/schemas.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAM,IAAI,GAAG;AAAC,EAAA,IAAI,EAAE,QAAP;AAAiB,EAAA,OAAO,EAAE;AAA1B,CAAb;AAEA,IAAM,WAAW,GAAG;AAChB,EAAA,EAAE,EAAE,QADY;AAEhB,EAAA,UAAU,EAAE;AACR,IAAA,QAAQ,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KADF;AAER,IAAA,KAAK,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAFC;AAGR,IAAA,KAAK,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAHC;AAIR,IAAA,eAAe,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAJT;AAKR,IAAA,eAAe,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KALT;AAMR,IAAA,gBAAgB,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KANV;AAOR,IAAA,gBAAgB,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAPV;AAQR,IAAA,YAAY,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KARN;AASR,IAAA,SAAS,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KATH;AAUR,IAAA,IAAI,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAVE;AAWR,IAAA,QAAQ,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAXF;AAYR,IAAA,MAAM,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAZA;AAaR,IAAA,SAAS,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAbH;AAcR,IAAA,QAAQ,EAAE,IAdF;AAeR,IAAA,kBAAkB,EAAE,IAfZ;AAgBR,IAAA,YAAY,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAhBN;AAiBR,IAAA,eAAe,EAAE,IAjBT;AAkBR,IAAA,YAAY,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAlBN;AAmBR,IAAA,SAAS,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAnBH;AAoBR,IAAA,KAAK,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KApBC;AAqBR,IAAA,WAAW,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KArBL;AAsBR,IAAA,cAAc,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR,KAtBR;AAuBR,IAAA,IAAI,EAAE;AAAE,MAAA,IAAI,EAAE;AAAR;AAvBE,GAFI;AA2BhB,EAAA,QAAQ,EAAE,CACN,UADM,EAEN,OAFM,EAGN,OAHM,EAIN,iBAJM,EAKN,iBALM,EAMN,kBANM,EAON,kBAPM,EAQN,cARM,EASN,WATM,EAUN,MAVM,EAWN,UAXM,EAYN,QAZM,EAaN,WAbM,EAcN,UAdM,EAeN,oBAfM,EAgBN,cAhBM,EAiBN,iBAjBM,EAkBN,cAlBM,EAmBN,WAnBM,EAoBN,OApBM,EAqBN,aArBM,EAsBN,gBAtBM,EAuBN,MAvBM,CA3BM;AAoDhB,EAAA,IAAI,EAAE;AApDU,CAApB;AAuDA,IAAM,iBAAiB,GAAG;AACtB,EAAA,EAAE,EAAE,cADkB;AAEtB,EAAA,KAAK,EAAE,CACH;AAAE,IAAA,IAAI,EAAE;AAAR,GADG,EAEH;AACI,IAAA,UAAU,EAAE;AACR,MAAA,WAAW,EAAE;AAAE,QAAA,IAAI,EAAE;AAAR;AADL,KADhB;AAII,IAAA,QAAQ,EAAE,CAAC,aAAD;AAJd,GAFG;AAFe,CAA1B;AAaa,OAAA,CAAA,OAAA,GAAU;AACnB,EAAA,YAAY,EAAE,cAAA,CAAA,OAAA,CAAc,YADT;AAEnB,EAAA,aAAa,EAAE,cAAA,CAAA,OAAA,CAAc,aAFV;AAGnB,EAAA,iBAAiB,EAAE,cAAA,CAAA,OAAA,CAAc,iBAHd;AAInB,EAAA,0BAA0B,EAAE,cAAA,CAAA,OAAA,CAAc,0BAJvB;AAKnB,EAAA,eAAe,EAAE,cAAA,CAAA,OAAA,CAAc,eALZ;AAMnB,EAAA,WAAW,EAAA,WANQ;AAOnB,EAAA,iBAAiB,EAAA;AAPE,CAAV","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_schemas_1 = require(\"@0xproject/json-schemas\");\nvar data = { type: 'string', pattern: '^0x[0-9a-f]*$' };\nvar orderSchema = {\n    id: '/Order',\n    properties: {\n        exchange: { $ref: '/Address' },\n        maker: { $ref: '/Address' },\n        taker: { $ref: '/Address' },\n        makerRelayerFee: { $ref: '/Number' },\n        takerRelayerFee: { $ref: '/Number' },\n        makerProtocolFee: { $ref: '/Number' },\n        takerProtocolFee: { $ref: '/Number' },\n        feeRecipient: { $ref: '/Address' },\n        feeMethod: { $ref: '/Number' },\n        side: { $ref: '/Number' },\n        saleKind: { $ref: '/Number' },\n        target: { $ref: '/Address' },\n        howToCall: { $ref: '/Number' },\n        calldata: data,\n        replacementPattern: data,\n        staticTarget: { $ref: '/Address' },\n        staticExtradata: data,\n        paymentToken: { $ref: '/Address' },\n        basePrice: { $ref: '/Number' },\n        extra: { $ref: '/Number' },\n        listingTime: { $ref: '/Number' },\n        expirationTime: { $ref: '/Number' },\n        salt: { $ref: '/Number' },\n    },\n    required: [\n        'exchange',\n        'maker',\n        'taker',\n        'makerRelayerFee',\n        'takerRelayerFee',\n        'makerProtocolFee',\n        'takerProtocolFee',\n        'feeRecipient',\n        'feeMethod',\n        'side',\n        'saleKind',\n        'target',\n        'howToCall',\n        'calldata',\n        'replacementPattern',\n        'staticTarget',\n        'staticExtradata',\n        'paymentToken',\n        'basePrice',\n        'extra',\n        'listingTime',\n        'expirationTime',\n        'salt',\n    ],\n    type: 'object',\n};\nvar signedOrderSchema = {\n    id: '/SignedOrder',\n    allOf: [\n        { $ref: '/Order' },\n        {\n            properties: {\n                ecSignature: { $ref: '/ECSignature' },\n            },\n            required: ['ecSignature'],\n        },\n    ],\n};\nexports.schemas = {\n    numberSchema: json_schemas_1.schemas.numberSchema,\n    addressSchema: json_schemas_1.schemas.addressSchema,\n    ecSignatureSchema: json_schemas_1.schemas.ecSignatureSchema,\n    ecSignatureParameterSchema: json_schemas_1.schemas.ecSignatureParameterSchema,\n    orderHashSchema: json_schemas_1.schemas.orderHashSchema,\n    orderSchema: orderSchema,\n    signedOrderSchema: signedOrderSchema,\n};\n//# sourceMappingURL=schemas.js.map"]},"metadata":{},"sourceType":"script"}