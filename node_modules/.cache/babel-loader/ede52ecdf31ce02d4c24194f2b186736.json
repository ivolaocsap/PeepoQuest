{"ast":null,"code":"import React,{useRef}from'react';import{useCallback,useContext}from'react';import{Context}from'../contexts/Modals';var useModalWithFC=function useModalWithFC(id){var _useContext=useContext(Context),onDismiss=_useContext.onDismiss,onPresent=_useContext.onPresent;var ref=useRef(id);var handlePresent=useCallback(function(component,props,backdropClick){var el=/*#__PURE__*/React.createElement(component,props);ref.current=onPresent(el,backdropClick,id);},[id,onPresent]);var hideModal=useCallback(function(){onDismiss(ref.current);},[onDismiss]);return{showModal:handlePresent,hideModal:hideModal};};export default useModalWithFC;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/hooks/useModalWithFC.ts"],"names":["React","useRef","useCallback","useContext","Context","useModalWithFC","id","onDismiss","onPresent","ref","handlePresent","component","props","backdropClick","el","createElement","current","hideModal","showModal"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,OAAxC,CACA,OAASC,OAAT,KAAwB,oBAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAiB,CACtC,gBAAiCH,UAAU,CAACC,OAAD,CAA3C,CAAQG,SAAR,aAAQA,SAAR,CAAmBC,SAAnB,aAAmBA,SAAnB,CACA,GAAMC,CAAAA,GAAG,CAAGR,MAAM,CAASK,EAAT,CAAlB,CAEA,GAAMI,CAAAA,aAAa,CAAGR,WAAW,CAC/B,SAAIS,SAAJ,CAA4BC,KAA5B,CAAuCC,aAAvC,CAAmE,CACjE,GAAMC,CAAAA,EAAE,cAAGd,KAAK,CAACe,aAAN,CAAoBJ,SAApB,CAA+BC,KAA/B,CAAX,CACAH,GAAG,CAACO,OAAJ,CAAcR,SAAS,CAACM,EAAD,CAAKD,aAAL,CAAoBP,EAApB,CAAvB,CACD,CAJ8B,CAK/B,CAACA,EAAD,CAAKE,SAAL,CAL+B,CAAjC,CAQA,GAAMS,CAAAA,SAAS,CAAGf,WAAW,CAAC,UAAM,CAClCK,SAAS,CAACE,GAAG,CAACO,OAAL,CAAT,CACD,CAF4B,CAE1B,CAACT,SAAD,CAF0B,CAA7B,CAIA,MAAO,CAAEW,SAAS,CAAER,aAAb,CAA4BO,SAAS,CAATA,SAA5B,CAAP,CACD,CAjBD,CAmBA,cAAeZ,CAAAA,cAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { useCallback, useContext } from 'react';\nimport { Context } from '../contexts/Modals';\n\nconst useModalWithFC = (id?: string) => {\n  const { onDismiss, onPresent } = useContext(Context);\n  const ref = useRef<string>(id);\n\n  const handlePresent = useCallback(\n    <T>(component: React.FC<T>, props?: T, backdropClick?: boolean) => {\n      const el = React.createElement(component, props);\n      ref.current = onPresent(el, backdropClick, id);\n    },\n    [id, onPresent],\n  );\n\n  const hideModal = useCallback(() => {\n    onDismiss(ref.current);\n  }, [onDismiss]);\n\n  return { showModal: handlePresent, hideModal };\n};\n\nexport default useModalWithFC;\n"]},"metadata":{},"sourceType":"module"}