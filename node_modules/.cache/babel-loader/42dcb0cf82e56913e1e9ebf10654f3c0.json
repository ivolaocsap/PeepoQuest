{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/cuffies/src/views/Farms/ModalStake.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport Modal from 'src/components/Modal';\nimport styled from 'styled-components';\nimport TokenInput from 'src/components/TokenInput';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport { FormRow, FormToken } from 'src/components/Form';\nimport TokenSymbol from 'src/components/TokenSymbol';\nimport Number from 'src/components/Number';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useTokenBalance } from 'src/contexts/AccountBalanceProvider/AccountBalanceProvider';\nimport { ButtonStake } from './ButtonStake';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalStake = ({\n  onDismiss,\n  token\n}) => {\n  _s();\n\n  const diamondHand = useDiamondHand();\n  const [stakeAmount, setStakeAmount] = useState(BigNumber.from(0));\n  const BnbBalance = useTokenBalance(diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.BUSD);\n  const shareBalance = useTokenBalance(diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.CUFFIES);\n  const price = BigNumber.from(108);\n  let cuffieAmount = stakeAmount.mul(price);\n  console.log(cuffieAmount);\n  const updateShareAmount = useCallback(ev => {\n    setStakeAmount(ev);\n    cuffieAmount = stakeAmount.mul(price);\n    console.log(cuffieAmount);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"md\",\n    padding: \"0\",\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(FormRowLeftTitle, {\n        children: [\"You have\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [BnbBalance && /*#__PURE__*/_jsxDEV(Number, {\n            value: BnbBalance,\n            decimals: diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.BUSD.decimals,\n            precision: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), ' ', diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.BUSD.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), ' ', \"\\xA0available\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRowLeftTitle, {\n        children: [\"1 Busd = 108\", ' ', diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.CUFFIES.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-input\",\n          children: [/*#__PURE__*/_jsxDEV(TokenInput, {\n            hasError: false,\n            token: diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.BUSD,\n            decimals: 18,\n            precision: 6,\n            onChange: updateShareAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextColor, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [' ', \"You Receive: \", ' ', /*#__PURE__*/_jsxDEV(Number, {\n                value: cuffieAmount,\n                decimals: diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.BUSD.decimals,\n                precision: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 1\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(FormToken, {\n            children: [/*#__PURE__*/_jsxDEV(TokenSymbol, {\n              size: 32,\n              symbol: diamondHand === null || diamondHand === void 0 ? void 0 : diamondHand.CUFFIES.symbol,\n              noBorder: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: diamondHand.CUFFIES.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Enter the amount of BUSD you wish to invest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-button\",\n        children: /*#__PURE__*/_jsxDEV(ButtonStake, {\n          amount: stakeAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalStake, \"AVICi125cPVnplxl2DYVbgNvAYw=\", false, function () {\n  return [useDiamondHand, useTokenBalance, useTokenBalance];\n});\n\n_c = ModalStake;\nconst TextColor = styled.div`\ncolor: #c42f2f;\n\n`;\n_c2 = TextColor;\nconst ModalContent = styled.div`\n  padding: 32px;\n  .group-button {\n    margin-top: 33px;\n    justify-content: flex-end;\n    display: flex;\n  }\n`;\n_c3 = ModalContent;\nconst FormRowLeftTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 18px;\n  color: ${({\n  theme\n}) => theme.color.primary.light};\n  display: flex;\n  align-items: center;\n  white-space: pre;\n  .image {\n    height: 40px;\n    margin-right: 10px;\n  }\n`;\n_c4 = FormRowLeftTitle;\nexport const ButtonCancel = styled.button`\n  padding: 0 15px;\n  text-align: center;\n  outline: none;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  border: none;\n  margin-right: 20px;\n  background: none;\n  color: ${({\n  theme\n}) => theme.color.primary.main};\n  &:hover {\n    color: ${({\n  theme\n}) => theme.color.green[100]};\n  }\n`;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ModalStake\");\n$RefreshReg$(_c2, \"TextColor\");\n$RefreshReg$(_c3, \"ModalContent\");\n$RefreshReg$(_c4, \"FormRowLeftTitle\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/views/Farms/ModalStake.tsx"],"names":["React","useCallback","useState","Modal","styled","TokenInput","useDiamondHand","FormRow","FormToken","TokenSymbol","Number","BigNumber","useTokenBalance","ButtonStake","ModalStake","onDismiss","token","diamondHand","stakeAmount","setStakeAmount","from","BnbBalance","BUSD","shareBalance","CUFFIES","price","cuffieAmount","mul","console","log","updateShareAmount","ev","decimals","symbol","TextColor","div","ModalContent","FormRowLeftTitle","theme","color","primary","light","ButtonCancel","button","main","green"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport Modal, {\n  ModalCloseButton,\n  ModalHeader,\n  ModalProps,\n  ModalTitle,\n} from 'src/components/Modal';\nimport styled from 'styled-components';\nimport TokenInput from 'src/components/TokenInput';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport { FormRow, FormToken } from 'src/components/Form';\nimport TokenSymbol from 'src/components/TokenSymbol';\nimport Number from 'src/components/Number';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useTokenBalance } from 'src/contexts/AccountBalanceProvider/AccountBalanceProvider';\nimport { ButtonStake } from './ButtonStake';\nimport icDiamondChest from '../../assets/img/ic-diamondchest.svg';\n\nexport type ModalStakeProps = ModalProps & {\n\n  token?: string;\n};\n\nexport const ModalStake: React.FC<ModalStakeProps> = ({ onDismiss, token }) => {\n  const diamondHand = useDiamondHand();\n  const [stakeAmount, setStakeAmount] = useState<BigNumber>(BigNumber.from(0));\n  const BnbBalance = useTokenBalance(diamondHand?.BUSD);\n  const shareBalance = useTokenBalance(diamondHand?.CUFFIES);\n  const price=BigNumber.from(108);\n  let cuffieAmount= stakeAmount.mul(price);\n  console.log(cuffieAmount);\n\n  const updateShareAmount = useCallback((ev) => {\n    setStakeAmount(ev);\n    cuffieAmount= stakeAmount.mul(price);\n    console.log(cuffieAmount);\n  }, []);\n\n  return (\n    <Modal size=\"md\" padding=\"0\">\n\n      <ModalContent>\n        <FormRowLeftTitle>\n\n          You have{' '}\n          <strong>\n            {BnbBalance && (\n              <Number\n                value={BnbBalance}\n                decimals={diamondHand?.BUSD.decimals}\n                precision={6}\n              />\n            )}{' '}\n            {diamondHand?.BUSD.symbol}\n          </strong>{' '}\n          &nbsp;available\n        </FormRowLeftTitle>\n        <FormRowLeftTitle>\n\n          1 Busd = 108{' '}{diamondHand?.CUFFIES.symbol}\n          </FormRowLeftTitle>\n\n\n        <FormRow>\n          <div className=\"row-input\">\n            <TokenInput\n              hasError={false}\n              token={diamondHand?.BUSD}\n              decimals={18}\n              precision={6}\n              onChange={updateShareAmount}\n            />\n<TextColor>\n<strong>\n{' '}\n  You Receive: {' '}\n            <Number\n                value={cuffieAmount}\n                decimals={diamondHand?.BUSD.decimals}\n                precision={6}\n              />\n              {' '}\n\n          </strong>{' '}\n\n          </TextColor>\n\n\n            <FormToken>\n              <TokenSymbol size={32} symbol={diamondHand?.CUFFIES.symbol} noBorder />\n              <span>{diamondHand.CUFFIES.symbol}</span>\n            </FormToken>\n\n\n          </div>\n        </FormRow>\n\n\n          <strong>\nEnter the amount of BUSD you wish to invest\n          </strong>{' '}\n\n        <div className=\"group-button\">\n          <ButtonStake amount= {stakeAmount}/>\n        </div>\n\n      </ModalContent>\n    </Modal>\n  );\n};\n\n\nconst TextColor = styled.div`\ncolor: #c42f2f;\n\n`;\nconst ModalContent = styled.div`\n  padding: 32px;\n  .group-button {\n    margin-top: 33px;\n    justify-content: flex-end;\n    display: flex;\n  }\n`;\n\nconst FormRowLeftTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 18px;\n  color: ${({ theme }) => theme.color.primary.light};\n  display: flex;\n  align-items: center;\n  white-space: pre;\n  .image {\n    height: 40px;\n    margin-right: 10px;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  padding: 0 15px;\n  text-align: center;\n  outline: none;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  border: none;\n  margin-right: 20px;\n  background: none;\n  color: ${({ theme }) => theme.color.primary.main};\n  &:hover {\n    color: ${({ theme }) => theme.color.green[100]};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}