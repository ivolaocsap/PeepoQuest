{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../../types\");\n\nexports.rinkebyOwnableContractSchema = {\n  version: 1,\n  deploymentBlock: 0,\n  name: 'OwnableContract',\n  description: 'Rinkeby Ownable Smart Contract',\n  thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n  website: 'https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Ownable.sol',\n  fields: [{\n    name: 'Name',\n    type: 'string',\n    description: 'Contract Name'\n  }, {\n    name: 'Address',\n    type: 'address',\n    description: 'Contract Address'\n  }],\n  assetFromFields: fields => ({\n    name: fields.Name,\n    address: fields.Address\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    return {\n      thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n      title: 'Ownable Contract: \"' + asset.name + '\"',\n      description: 'Ownable at address ' + asset.address,\n      url: 'https://rinkeby.etherscan.io/address/' + asset.address,\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'transferOwnership',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: 'newOwner',\n        type: 'address'\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'owner',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: asset.address,\n      inputs: [],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'owner',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: a => a.address\n};","map":{"version":3,"sources":["../../../../src/schemas/rinkeby/rinkebyOwnableContract/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAYa,OAAA,CAAA,4BAAA,GAAmE;AAC9E,EAAA,OAAO,EAAE,CADqE;AAE9E,EAAA,eAAe,EAAE,CAF6D;AAG9E,EAAA,IAAI,EAAE,iBAHwE;AAI9E,EAAA,WAAW,EAAE,gCAJiE;AAK9E,EAAA,SAAS,EAAE,oHALmE;AAM9E,EAAA,OAAO,EAAE,+FANqE;AAO9E,EAAA,MAAM,EAAE,CACN;AAAC,IAAA,IAAI,EAAE,MAAP;AAAe,IAAA,IAAI,EAAE,QAArB;AAA+B,IAAA,WAAW,EAAE;AAA5C,GADM,EAEN;AAAC,IAAA,IAAI,EAAE,SAAP;AAAkB,IAAA,IAAI,EAAE,SAAxB;AAAmC,IAAA,WAAW,EAAE;AAAhD,GAFM,CAPsE;AAW9E,EAAA,eAAe,EAAG,MAAD,KAAkB;AACjC,IAAA,IAAI,EAAE,MAAM,CAAC,IADoB;AAEjC,IAAA,OAAO,EAAE,MAAM,CAAC;AAFiB,GAAlB,CAX6D;AAe9E,EAAA,SAAS,EACD,KAAN,IAAc,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACZ,WAAO;AACL,MAAA,SAAS,EAAE,oHADN;AAEL,MAAA,KAAK,EAAE,wBAAwB,KAAK,CAAC,IAA9B,GAAqC,GAFvC;AAGL,MAAA,WAAW,EAAE,wBAAwB,KAAK,CAAC,OAHtC;AAIL,MAAA,GAAG,EAAE,0CAA0C,KAAK,CAAC,OAJhD;AAKL,MAAA,UAAU,EAAE;AALP,KAAP;AAOH,GARe,CAhB8D;AAyB9E,EAAA,SAAS,EAAE;AACT,IAAA,QAAQ,EAAE,KAAK,KAAK;AAClB,MAAA,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADD;AAElB,MAAA,IAAI,EAAE,mBAFY;AAGlB,MAAA,OAAO,EAAE,KAHS;AAIlB,MAAA,QAAQ,EAAE,KAJQ;AAKlB,MAAA,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,UALf;AAMlB,MAAA,MAAM,EAAE,KAAK,CAAC,OANI;AAOlB,MAAA,MAAM,EAAE,CACN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,WAAzB;AAAsC,QAAA,IAAI,EAAE,UAA5C;AAAwD,QAAA,IAAI,EAAE;AAA9D,OADM,CAPU;AAUlB,MAAA,OAAO,EAAE;AAVS,KAAL,CADN;AAaT,IAAA,OAAO,EAAE,KAAK,KAAK;AACjB,MAAA,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADF;AAEjB,MAAA,IAAI,EAAE,OAFW;AAGjB,MAAA,OAAO,EAAE,KAHQ;AAIjB,MAAA,QAAQ,EAAE,IAJO;AAKjB,MAAA,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,IALhB;AAMjB,MAAA,MAAM,EAAE,KAAK,CAAC,OANG;AAOjB,MAAA,MAAM,EAAE,EAPS;AAQjB,MAAA,OAAO,EAAE,CACP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,OAAvC;AAAgD,QAAA,IAAI,EAAE;AAAtD,OADO;AARQ,KAAL,CAbL;AAyBT,IAAA,oBAAoB,EAAE;AAzBb,GAzBmE;AAoD9E,EAAA,MAAM,EAAE;AACN,IAAA,QAAQ,EAAE;AADJ,GApDsE;AAuD9E,EAAA,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;AAvDiE,CAAnE","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.rinkebyOwnableContractSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'OwnableContract',\n    description: 'Rinkeby Ownable Smart Contract',\n    thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n    website: 'https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Ownable.sol',\n    fields: [\n        { name: 'Name', type: 'string', description: 'Contract Name' },\n        { name: 'Address', type: 'address', description: 'Contract Address' },\n    ],\n    assetFromFields: (fields) => ({\n        name: fields.Name,\n        address: fields.Address,\n    }),\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\n        return {\n            thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n            title: 'Ownable Contract: \"' + asset.name + '\"',\n            description: 'Ownable at address ' + asset.address,\n            url: 'https://rinkeby.etherscan.io/address/' + asset.address,\n            properties: [],\n        };\n    }),\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transferOwnership',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: asset.address,\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'newOwner', type: 'address' },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'owner',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: asset.address,\n            inputs: [],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => a.address,\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}