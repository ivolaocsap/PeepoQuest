{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rinkebyCustomSchema = {\n  version: 1,\n  deploymentBlock: 0,\n  name: 'RinkebyCustom',\n  description: 'Rinkeby Custom (manual ABI specification)',\n  thumbnail: 'https://d30y9cdsu7xlg0.cloudfront.net/png/45447-200.png',\n  website: 'https://github.com/projectwyvern/wyvern-schemas',\n  fields: [{\n    name: 'Name',\n    type: 'string',\n    description: 'Name of Asset'\n  }, {\n    name: 'Description',\n    type: 'string',\n    description: 'Description of Asset'\n  }, {\n    name: 'Thumbnail',\n    type: 'string',\n    description: 'URL of asset thumbnail image'\n  }, {\n    name: 'URL',\n    type: 'string',\n    description: 'URL of asset'\n  }, {\n    name: 'Transfer',\n    type: 'abi',\n    description: 'ABI of transfer function'\n  }],\n  assetFromFields: fields => ({\n    name: fields.Name,\n    description: fields.Description,\n    thumbnail: fields.Thumbnail,\n    url: fields.URL,\n    transfer: fields.Transfer\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    return {\n      thumbnail: asset.thumbnail,\n      title: asset.name,\n      description: asset.description,\n      url: asset.url,\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => asset.transfer,\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: a => JSON.stringify(a)\n};","map":{"version":3,"sources":["../../../../src/schemas/rinkeby/rinkebyCustom/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAca,OAAA,CAAA,mBAAA,GAAiD;AAC5D,EAAA,OAAO,EAAE,CADmD;AAE5D,EAAA,eAAe,EAAE,CAF2C;AAG5D,EAAA,IAAI,EAAE,eAHsD;AAI5D,EAAA,WAAW,EAAE,2CAJ+C;AAK5D,EAAA,SAAS,EAAE,yDALiD;AAM5D,EAAA,OAAO,EAAE,iDANmD;AAO5D,EAAA,MAAM,EAAE,CACN;AAAC,IAAA,IAAI,EAAE,MAAP;AAAe,IAAA,IAAI,EAAE,QAArB;AAA+B,IAAA,WAAW,EAAE;AAA5C,GADM,EAEN;AAAC,IAAA,IAAI,EAAE,aAAP;AAAsB,IAAA,IAAI,EAAE,QAA5B;AAAsC,IAAA,WAAW,EAAE;AAAnD,GAFM,EAGN;AAAC,IAAA,IAAI,EAAE,WAAP;AAAoB,IAAA,IAAI,EAAE,QAA1B;AAAoC,IAAA,WAAW,EAAE;AAAjD,GAHM,EAIN;AAAC,IAAA,IAAI,EAAE,KAAP;AAAc,IAAA,IAAI,EAAE,QAApB;AAA8B,IAAA,WAAW,EAAE;AAA3C,GAJM,EAKN;AAAC,IAAA,IAAI,EAAE,UAAP;AAAmB,IAAA,IAAI,EAAE,KAAzB;AAAgC,IAAA,WAAW,EAAE;AAA7C,GALM,CAPoD;AAc5D,EAAA,eAAe,EAAG,MAAD,KAAkB;AACjC,IAAA,IAAI,EAAE,MAAM,CAAC,IADoB;AAEjC,IAAA,WAAW,EAAE,MAAM,CAAC,WAFa;AAGjC,IAAA,SAAS,EAAE,MAAM,CAAC,SAHe;AAIjC,IAAA,GAAG,EAAE,MAAM,CAAC,GAJqB;AAKjC,IAAA,QAAQ,EAAE,MAAM,CAAC;AALgB,GAAlB,CAd2C;AAqB5D,EAAA,SAAS,EACD,KAAN,IAAc,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACZ,WAAO;AACL,MAAA,SAAS,EAAE,KAAK,CAAC,SADZ;AAEL,MAAA,KAAK,EAAE,KAAK,CAAC,IAFR;AAGL,MAAA,WAAW,EAAE,KAAK,CAAC,WAHd;AAIL,MAAA,GAAG,EAAE,KAAK,CAAC,GAJN;AAKL,MAAA,UAAU,EAAE;AALP,KAAP;AAOH,GARe,CAtB4C;AA+B5D,EAAA,SAAS,EAAE;AACT,IAAA,QAAQ,EAAE,KAAK,IAAI,KAAK,CAAC,QADhB;AAET,IAAA,oBAAoB,EAAE;AAFb,GA/BiD;AAmC5D,EAAA,MAAM,EAAE;AACN,IAAA,QAAQ,EAAE;AADJ,GAnCoD;AAsC5D,EAAA,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,SAAL,CAAe,CAAf;AAtCiD,CAAjD","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rinkebyCustomSchema = {\n    version: 1,\n    deploymentBlock: 0,\n    name: 'RinkebyCustom',\n    description: 'Rinkeby Custom (manual ABI specification)',\n    thumbnail: 'https://d30y9cdsu7xlg0.cloudfront.net/png/45447-200.png',\n    website: 'https://github.com/projectwyvern/wyvern-schemas',\n    fields: [\n        { name: 'Name', type: 'string', description: 'Name of Asset' },\n        { name: 'Description', type: 'string', description: 'Description of Asset' },\n        { name: 'Thumbnail', type: 'string', description: 'URL of asset thumbnail image' },\n        { name: 'URL', type: 'string', description: 'URL of asset' },\n        { name: 'Transfer', type: 'abi', description: 'ABI of transfer function' },\n    ],\n    assetFromFields: (fields) => ({\n        name: fields.Name,\n        description: fields.Description,\n        thumbnail: fields.Thumbnail,\n        url: fields.URL,\n        transfer: fields.Transfer,\n    }),\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\n        return {\n            thumbnail: asset.thumbnail,\n            title: asset.name,\n            description: asset.description,\n            url: asset.url,\n            properties: [],\n        };\n    }),\n    functions: {\n        transfer: asset => asset.transfer,\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [],\n    },\n    hash: a => JSON.stringify(a),\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}