{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/cuffies/src/components/ButtonSelectCollateral/ButtonSelectCollateral.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport styled from 'styled-components';\nimport TokenSymbol from '../TokenSymbol';\nimport icDown from \"../../assets/img/down.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonSelectCollateral = ({\n  onSelected,\n  tokenAddress\n}) => {\n  _s();\n\n  const dh = useDiamondHand();\n  const [current, setCurrent] = useState();\n  useEffect(() => {\n    if (!dh || !tokenAddress) {\n      return;\n    }\n\n    setCurrent(dh === null || dh === void 0 ? void 0 : dh.getTokenByAddress(tokenAddress));\n  }, [dh, tokenAddress]);\n  const hasMultipleTokens = useMemo(() => {\n    var _dh$getCollateralToke;\n\n    return (dh === null || dh === void 0 ? void 0 : dh.getCollateralTokens()) && (dh === null || dh === void 0 ? void 0 : (_dh$getCollateralToke = dh.getCollateralTokens()) === null || _dh$getCollateralToke === void 0 ? void 0 : _dh$getCollateralToke.length) > 0;\n  }, [dh]);\n  useEffect(() => {\n    if (onSelected) {\n      onSelected(current);\n    }\n  }, [current, onSelected]);\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    blank: !current,\n    enabled: hasMultipleTokens,\n    children: current ? /*#__PURE__*/_jsxDEV(StyledToken, {\n      children: [/*#__PURE__*/_jsxDEV(TokenSymbol, {\n        size: 32,\n        symbol: current === null || current === void 0 ? void 0 : current.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"symbol\",\n        children: current === null || current === void 0 ? void 0 : current.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StyledToken, {\n      children: [\"Token\", /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"down\",\n        src: icDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ButtonSelectCollateral, \"ZhfysoFBuzUdjtHjdFAMZbmg1WI=\", false, function () {\n  return [useDiamondHand];\n});\n\n_c = ButtonSelectCollateral;\nconst StyledButton = styled.button`\n  padding: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-weight: normal;\n  border: none;\n  background-color: transparent;\n  color: #fff;\n  margin-right: 10px;\n`;\n_c2 = StyledButton;\nconst StyledToken = styled.div`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  padding: 5px 0px;\n  height: 41.2px;\n  .symbol {\n    margin-left: 5px;\n    font-size: 16px;\n    font-weight: 600;\n    font-family: ${({\n  theme\n}) => theme.font.monospace};\n  }\n  img.down {\n    margin-left: 5px;\n  }\n`;\n_c3 = StyledToken;\nexport default ButtonSelectCollateral;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonSelectCollateral\");\n$RefreshReg$(_c2, \"StyledButton\");\n$RefreshReg$(_c3, \"StyledToken\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/components/ButtonSelectCollateral/ButtonSelectCollateral.tsx"],"names":["React","useEffect","useMemo","useState","useDiamondHand","styled","TokenSymbol","ButtonSelectCollateral","onSelected","tokenAddress","dh","current","setCurrent","getTokenByAddress","hasMultipleTokens","getCollateralTokens","length","symbol","icDown","StyledButton","button","StyledToken","div","theme","font","monospace"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;;AASA,MAAMC,sBAA6D,GAAG,CAAC;AACrEC,EAAAA,UADqE;AAErEC,EAAAA;AAFqE,CAAD,KAGhE;AAAA;;AACJ,QAAMC,EAAE,GAAGN,cAAc,EAAzB;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,EAAD,IAAO,CAACD,YAAZ,EAA0B;AACxB;AACD;;AACDG,IAAAA,UAAU,CAACF,EAAD,aAACA,EAAD,uBAACA,EAAE,CAAEG,iBAAJ,CAAsBJ,YAAtB,CAAD,CAAV;AACD,GALQ,EAKN,CAACC,EAAD,EAAKD,YAAL,CALM,CAAT;AAOA,QAAMK,iBAAiB,GAAGZ,OAAO,CAAC,MAAM;AAAA;;AACtC,WAAO,CAAAQ,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEK,mBAAJ,OAA6B,CAAAL,EAAE,SAAF,IAAAA,EAAE,WAAF,qCAAAA,EAAE,CAAEK,mBAAJ,kFAA2BC,MAA3B,IAAoC,CAAxE;AACD,GAFgC,EAE9B,CAACN,EAAD,CAF8B,CAAjC;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACG,OAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,EAAUH,UAAV,CAJM,CAAT;AAMA,sBACE,QAAC,YAAD;AAAc,IAAA,KAAK,EAAE,CAACG,OAAtB;AAA+B,IAAA,OAAO,EAAEG,iBAAxC;AAAA,cACGH,OAAO,gBACN,QAAC,WAAD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,EAAnB;AAAuB,QAAA,MAAM,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,kBAA0BN,OAA1B,aAA0BA,OAA1B,uBAA0BA,OAAO,CAAEM;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAMN,QAAC,WAAD;AAAA,uCAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvCD;;GAAMX,sB;UAIOH,c;;;KAJPG,sB;AAyCN,MAAMY,YAAY,GAAGd,MAAM,CAACe,MAA+C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,Y;AAaN,MAAME,WAAW,GAAGhB,MAAM,CAACiB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAN,CAAWC,SAAU;AACvD;AACA;AACA;AACA;AACA,CAfA;MAAMJ,W;AAiBN,eAAed,sBAAf","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport ERC20 from 'src/diamondhand/ERC20';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport styled from 'styled-components';\nimport TokenSymbol from '../TokenSymbol';\nimport icDown from '../../assets/img/down.svg';\n\ninterface ButtonSelectCollateralProps {\n  title?: string;\n  onSelected?: (token: ERC20) => void;\n  tokenAddress?: string;\n}\n\nconst ButtonSelectCollateral: React.FC<ButtonSelectCollateralProps> = ({\n  onSelected,\n  tokenAddress,\n}) => {\n  const dh = useDiamondHand();\n  const [current, setCurrent] = useState<ERC20>();\n\n  useEffect(() => {\n    if (!dh || !tokenAddress) {\n      return;\n    }\n    setCurrent(dh?.getTokenByAddress(tokenAddress));\n  }, [dh, tokenAddress]);\n\n  const hasMultipleTokens = useMemo(() => {\n    return dh?.getCollateralTokens() && dh?.getCollateralTokens()?.length > 0;\n  }, [dh]);\n\n  useEffect(() => {\n    if (onSelected) {\n      onSelected(current);\n    }\n  }, [current, onSelected]);\n\n  return (\n    <StyledButton blank={!current} enabled={hasMultipleTokens}>\n      {current ? (\n        <StyledToken>\n          <TokenSymbol size={32} symbol={current?.symbol}></TokenSymbol>\n          <span className=\"symbol\">{current?.symbol}</span>\n        </StyledToken>\n      ) : (\n        <StyledToken>\n          Token\n          <img className=\"down\" src={icDown} />\n        </StyledToken>\n      )}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button<{ blank?: boolean; enabled?: boolean }>`\n  padding: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-weight: normal;\n  border: none;\n  background-color: transparent;\n  color: #fff;\n  margin-right: 10px;\n`;\n\nconst StyledToken = styled.div`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  padding: 5px 0px;\n  height: 41.2px;\n  .symbol {\n    margin-left: 5px;\n    font-size: 16px;\n    font-weight: 600;\n    font-family: ${({ theme }) => theme.font.monospace};\n  }\n  img.down {\n    margin-left: 5px;\n  }\n`;\n\nexport default ButtonSelectCollateral;\n"]},"metadata":{},"sourceType":"module"}