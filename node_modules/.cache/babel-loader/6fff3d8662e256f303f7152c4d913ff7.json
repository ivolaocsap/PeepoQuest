{"ast":null,"code":"import { formatUnits } from '@ethersproject/units';\nimport { getDisplayNumber } from '../utils/formatBN';\nimport { ContractWrapper } from './ContractWrapper';\nimport { multicall } from './multicall';\n\nclass ERC20 extends ContractWrapper {\n  constructor(address, provider, symbol, decimals = 18, abi) {\n    super(abi || ABI, address, provider);\n    this.symbol = symbol;\n    this.decimals = decimals;\n  }\n\n  async totalSupply() {\n    return await this.contract.totalSupply();\n  }\n\n  async balanceOf(account) {\n    return await this.contract.balanceOf(account);\n  }\n\n  async transfer(recipient, amount) {\n    return await this.contract.safeCall.transfer(recipient, amount);\n  }\n\n  async allowance(owner, spender) {\n    return await this.contract.allowance(owner, spender);\n  }\n\n  async approve(spender, amount) {\n    return await this.contract.safeCall.approve(spender, amount);\n  }\n\n  async transferFrom(sender, recipient, amount) {\n    return await this.contract.safeCall.transferFrom(sender, recipient, amount);\n  }\n\n  async displayedBalanceOf(account) {\n    const balance = await this.balanceOf(account);\n    return formatUnits(balance, this.decimals);\n  }\n\n  async displayedTotalSupply() {\n    const supply = await this.totalSupply();\n    return Number(formatUnits(supply, this.decimals)).toFixed(0);\n  }\n\n  getDisplayNumber(amount, fractionDigits = 3) {\n    return getDisplayNumber(amount, this.decimals, fractionDigits);\n  }\n\n  static async multicallTokenBalance(provider, multicallAddress, tokens, account) {\n    const balances = await multicall(provider, multicallAddress, tokens.map(token => {\n      return {\n        target: token,\n        signature: 'balanceOf(address user) view returns (uint256)',\n        params: [account]\n      };\n    }));\n    return tokens.reduce((memo, token, index) => {\n      return { ...memo,\n        [token]: balances[index][0]\n      };\n    }, {});\n  }\n\n}\n\nexport default ERC20;\nconst ABI = [{\n  name: 'Approval',\n  type: 'event',\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'address',\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    internalType: 'address',\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Transfer',\n  type: 'event'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'totalSupply',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'address',\n    name: 'account',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'recipient',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'address',\n    name: 'owner',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'spender',\n    type: 'address'\n  }],\n  name: 'allowance',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'spender',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'approve',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'sender',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'recipient',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transferFrom',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}];","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/diamondhand/ERC20.ts"],"names":["formatUnits","getDisplayNumber","ContractWrapper","multicall","ERC20","constructor","address","provider","symbol","decimals","abi","ABI","totalSupply","contract","balanceOf","account","transfer","recipient","amount","safeCall","allowance","owner","spender","approve","transferFrom","sender","displayedBalanceOf","balance","displayedTotalSupply","supply","Number","toFixed","fractionDigits","multicallTokenBalance","multicallAddress","tokens","balances","map","token","target","signature","params","reduce","memo","index","name","type","anonymous","inputs","indexed","internalType","constant","outputs","payable","stateMutability"],"mappings":"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","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { JsonRpcProvider, TransactionResponse } from '@ethersproject/providers';\nimport { formatUnits } from '@ethersproject/units';\nimport { getDisplayNumber } from '../utils/formatBN';\nimport { ContractWrapper } from './ContractWrapper';\nimport { multicall } from './multicall';\n\nclass ERC20 extends ContractWrapper {\n  constructor(\n    address: string,\n    provider: Signer | Provider,\n    public symbol: string,\n    public decimals = 18,\n    abi?: any[],\n  ) {\n    super(abi || ABI, address, provider);\n  }\n\n  async totalSupply(): Promise<BigNumber> {\n    return await this.contract.totalSupply();\n  }\n\n  async balanceOf(account: string): Promise<BigNumber> {\n    return await this.contract.balanceOf(account);\n  }\n\n  async transfer(recipient: string, amount: BigNumber): Promise<TransactionResponse> {\n    return await this.contract.safeCall.transfer(recipient, amount);\n  }\n\n  async allowance(owner: string, spender: string): Promise<BigNumber> {\n    return await this.contract.allowance(owner, spender);\n  }\n\n  async approve(spender: string, amount: BigNumber): Promise<TransactionResponse> {\n    return await this.contract.safeCall.approve(spender, amount);\n  }\n\n  async transferFrom(\n    sender: string,\n    recipient: string,\n    amount: BigNumber,\n  ): Promise<TransactionResponse> {\n    return await this.contract.safeCall.transferFrom(sender, recipient, amount);\n  }\n\n  async displayedBalanceOf(account: string): Promise<string> {\n    const balance = await this.balanceOf(account);\n    return formatUnits(balance, this.decimals);\n  }\n\n  async displayedTotalSupply(): Promise<string> {\n    const supply = await this.totalSupply();\n    return Number(formatUnits(supply, this.decimals)).toFixed(0);\n  }\n\n  getDisplayNumber(amount: BigNumber, fractionDigits = 3) {\n    return getDisplayNumber(amount, this.decimals, fractionDigits);\n  }\n\n  static async multicallTokenBalance(\n    provider: JsonRpcProvider,\n    multicallAddress: string,\n    tokens: string[],\n    account: string,\n  ) {\n    const balances = (await multicall(\n      provider,\n      multicallAddress,\n      tokens.map((token) => {\n        return {\n          target: token,\n          signature: 'balanceOf(address user) view returns (uint256)',\n          params: [account],\n        };\n      }),\n    )) as BigNumber[][];\n\n    return tokens.reduce((memo, token, index) => {\n      return {\n        ...memo,\n        [token]: balances[index][0],\n      };\n    }, {} as Record<string, BigNumber>);\n  }\n}\n\nexport default ERC20;\n\nconst ABI = [\n  {\n    name: 'Approval',\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: 'owner', type: 'address' },\n      { internalType: 'address', name: 'spender', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'sender', type: 'address' },\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n"]},"metadata":{},"sourceType":"module"}