{"ast":null,"code":"import{useWeb3React}from'@web3-react/core';import{useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{addTransaction,clearAllTransactions}from'./actions';// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId,account=_useWeb3React.account;var dispatch=useDispatch();return useCallback(function(response){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},summary=_ref.summary,approval=_ref.approval,redemption=_ref.redemption;// if (!account) return;\nif(!chainId)return;var hash=response.hash;if(!hash){throw Error('No transaction hash found.');}dispatch(addTransaction({hash:hash,from:account,chainId:chainId,approval:approval,summary:summary,redemption:redemption}));},[dispatch,chainId,account]);}// returns all the transactions for the current chain\nexport function useAllTransactions(){var _state$chainId;var _useWeb3React2=useWeb3React(),chainId=_useWeb3React2.chainId;var state=useSelector(function(state){return state.transactions;});return chainId?(_state$chainId=state[chainId])!==null&&_state$chainId!==void 0?_state$chainId:{}:{};}export function useIsTransactionPending(transactionHash){var transactions=useAllTransactions();if(!transactionHash||!transactions[transactionHash]){return false;}return!transactions[transactionHash].receipt;}/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */export function isTransactionRecent(tx){return new Date().getTime()-tx.addedTime<86400000;}// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress,spender){var allTransactions=useAllTransactions();return useMemo(function(){return typeof tokenAddress==='string'&&typeof spender==='string'&&Object.keys(allTransactions).some(function(hash){var tx=allTransactions[hash];if(!tx)return false;if(tx.receipt){return false;}else{var approval=tx.approval;if(!approval)return false;return approval.spender===spender&&approval.tokenAddress===tokenAddress&&isTransactionRecent(tx);}});},[allTransactions,spender,tokenAddress]);}export function useHasPendingRedemption(poolAddress){var allTransactions=useAllTransactions();return useMemo(function(){return typeof poolAddress==='string'&&Object.keys(allTransactions).some(function(hash){var tx=allTransactions[hash];if(!tx||tx.receipt||!isTransactionRecent(tx)){return false;}var redemption=tx.redemption;if(!redemption){return false;}return redemption.poolAddress===poolAddress;});},[allTransactions,poolAddress]);}export function useClearAllTransactions(){var _useWeb3React3=useWeb3React(),chainId=_useWeb3React3.chainId;var dispatch=useDispatch();return{clearAllTransactions:useCallback(function(){return dispatch(clearAllTransactions({chainId:chainId}));},[chainId,dispatch])};}","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/state/transactions/hooks.tsx"],"names":["useWeb3React","useCallback","useMemo","useDispatch","useSelector","addTransaction","clearAllTransactions","useTransactionAdder","chainId","account","dispatch","response","summary","approval","redemption","hash","Error","from","useAllTransactions","state","transactions","useIsTransactionPending","transactionHash","receipt","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","tokenAddress","spender","allTransactions","Object","keys","some","useHasPendingRedemption","poolAddress","useClearAllTransactions"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers';\nimport { useWeb3React } from '@web3-react/core';\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppDispatch, AppState } from '../index';\nimport { addTransaction, clearAllTransactions } from './actions';\nimport { TransactionDetails } from './reducer';\n\nexport type TransactionCustomData = {\n  summary?: string;\n  approval?: { tokenAddress: string; spender: string };\n  redemption?: { poolAddress: string };\n  vault?: {\n    lock?: string;\n    claim?: string;\n  };\n};\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: TransactionCustomData,\n) => void {\n  const { chainId, account } = useWeb3React();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      { summary, approval, redemption }: TransactionCustomData = {},\n    ) => {\n      // if (!account) return;\n      if (!chainId) return;\n\n      const { hash } = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, redemption }));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useWeb3React();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(\n  tokenAddress: string | undefined,\n  spender: string | undefined,\n): boolean {\n  const allTransactions = useAllTransactions();\n\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return (\n            approval.spender === spender &&\n            approval.tokenAddress === tokenAddress &&\n            isTransactionRecent(tx)\n          );\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n\nexport function useHasPendingRedemption(poolAddress: string | undefined): boolean {\n  const allTransactions = useAllTransactions();\n\n  return useMemo(\n    () =>\n      typeof poolAddress === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx || tx.receipt || !isTransactionRecent(tx)) {\n          return false;\n        }\n\n        const { redemption } = tx;\n        if (!redemption) {\n          return false;\n        }\n\n        return redemption.poolAddress === poolAddress;\n      }),\n    [allTransactions, poolAddress],\n  );\n}\n\nexport function useClearAllTransactions(): { clearAllTransactions: () => void } {\n  const { chainId } = useWeb3React();\n  const dispatch = useDispatch<AppDispatch>();\n  return {\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({ chainId })), [\n      chainId,\n      dispatch,\n    ]),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}