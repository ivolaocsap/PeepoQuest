{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/cuffies/src/components/Header/AccountButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport Identicon from 'identicon.js';\nimport { useSavedConnector } from 'src/state/application/hooks';\nimport { useWeb3React } from '@web3-react/core';\nimport useWalletConnectors from 'src/hooks/useWalletConnectors';\nimport useTryConnect from 'src/hooks/useTryConnect';\nimport { useConfiguration } from 'src/contexts/ConfigProvider/ConfigProvider';\nimport useModal from 'src/hooks/useModal';\nimport AccountModal from './AccountModal';\nimport Spacer from '../Spacer';\nimport { useAllTransactions } from 'src/state/transactions/hooks';\nimport Loading from '../Loading';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSatelliteDish } from \"@fortawesome/free-solid-svg-icons\";\nimport { ConnectorNames } from 'src/state/application/reducer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { NetworkConnector } from 'src/libs/NetworkConnector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isMetaMaskConnected = () => {\n  if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask && window.ethereum._metamask && typeof window.ethereum._metamask.isUnlocked === 'function') {\n    return window.ethereum._metamask.isUnlocked();\n  }\n\n  return Promise.resolve(false);\n};\n\nconst AccountButton = () => {\n  _s();\n\n  const {\n    account,\n    activate,\n    connector,\n    deactivate\n  } = useWeb3React();\n  const [onPresentAccountModal] = useModal( /*#__PURE__*/_jsxDEV(AccountModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 44\n  }, this));\n  const {\n    tryConnect\n  } = useTryConnect();\n  const savedConnector = useSavedConnector();\n  const connectors = useWalletConnectors();\n  const allTransactions = useAllTransactions();\n  const {\n    chainId,\n    defaultProvider\n  } = useConfiguration();\n  const defaultConnector = useMemo(() => new NetworkConnector({\n    urls: {\n      [chainId]: Array.isArray(defaultProvider) ? defaultProvider[0] : defaultProvider\n    },\n    defaultChainId: chainId\n  }), [chainId, defaultProvider]);\n  const hasPendingTransaction = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(tx => !tx.receipt).length > 0;\n  }, [allTransactions]);\n  useEffect(() => {\n    if (!account && !savedConnector) {\n      activate(defaultConnector);\n      return;\n    }\n\n    if (!account && savedConnector && connectors[savedConnector]) {\n      if (savedConnector === ConnectorNames.Injected) {\n        isMetaMaskConnected().then(connected => {\n          if (connected) {\n            activate(connectors[savedConnector], error => {\n              console.log('error', error);\n              activate(defaultConnector);\n            });\n          } else {\n            activate(defaultConnector);\n          }\n        });\n      } else {\n        activate(connectors[savedConnector], error => {\n          console.log('error', error);\n          activate(defaultConnector);\n        });\n      }\n    }\n  }, [account, activate, connectors, deactivate, defaultConnector, savedConnector]);\n  useEffect(() => {\n    if (connector) {\n      const onChange = () => {\n        window.location.reload();\n      };\n\n      connector.addListener('Web3ReactUpdate', onChange);\n      return () => {\n        connector.removeListener('Web3ReactUpdate', onChange);\n      };\n    }\n  }, [connector]);\n  const iconAccount = useMemo(() => {\n    if (account) {\n      const data = new Identicon(account, {\n        size: 48,\n        foreground: [50, 197, 255, 255],\n        background: [0, 0, 0, 0],\n        format: 'svg'\n      }).toString();\n      return `data:image/svg+xml;base64,${data}`;\n    }\n  }, [account]);\n  const shortenAccount = useMemo(() => {\n    if (account && account.length > 0) {\n      return `${account.substring(0, 4)}.....${account.substring(account.length - 4, account.length)}`;\n    }\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(StyledAccountButton, {\n    active: !!library,\n    children: account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline\",\n      onClick: onPresentAccountModal,\n      children: /*#__PURE__*/_jsxDEV(AccountInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), hasPendingTransaction && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Spacer, {\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Loading, {\n            size: \"18px\",\n            color: \"#ffffff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Spacer, {\n          size: \"xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AccountNumber, {\n          children: shortenAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : !library ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSatelliteDish,\n        style: {\n          marginRight: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-none d-lg-inline\",\n        children: \"Waiting for network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => tryConnect(),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountButton, \"wZXwJKLy3fEP6dC6gaBXOnVqnxQ=\", false, function () {\n  return [useWeb3React, useModal, useTryConnect, useSavedConnector, useWalletConnectors, useAllTransactions, useConfiguration];\n});\n\n_c = AccountButton;\nconst StyledAccountButton = styled.div`\n  background: transparent;\n`;\n_c2 = StyledAccountButton;\nconst AccountInfo = styled.span`\n  display: flex;\n  align-items: center;\n  img {\n    width: 24px;\n    height: auto;\n    border-radius: 100%;\n  }\n`;\n_c3 = AccountInfo;\nconst AccountNumber = styled.span`\n  margin-right: 10px;\n  text-transform: lowercase;\n  @media (max-width: 1070px) {\n    display: none;\n  }\n\n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.md}) {\n    display: none;\n  }\n`;\n_c4 = AccountNumber;\nexport default AccountButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AccountButton\");\n$RefreshReg$(_c2, \"StyledAccountButton\");\n$RefreshReg$(_c3, \"AccountInfo\");\n$RefreshReg$(_c4, \"AccountNumber\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/components/Header/AccountButton.tsx"],"names":["React","useEffect","useMemo","styled","Identicon","useSavedConnector","useWeb3React","useWalletConnectors","useTryConnect","useConfiguration","useModal","AccountModal","Spacer","useAllTransactions","Loading","FontAwesomeIcon","faSatelliteDish","ConnectorNames","library","NetworkConnector","isMetaMaskConnected","window","ethereum","isMetaMask","_metamask","isUnlocked","Promise","resolve","AccountButton","account","activate","connector","deactivate","onPresentAccountModal","tryConnect","savedConnector","connectors","allTransactions","chainId","defaultProvider","defaultConnector","urls","Array","isArray","defaultChainId","hasPendingTransaction","txs","Object","values","filter","tx","receipt","length","Injected","then","connected","error","console","log","onChange","location","reload","addListener","removeListener","iconAccount","data","size","foreground","background","format","toString","shortenAccount","substring","marginRight","StyledAccountButton","div","AccountInfo","span","AccountNumber","theme","breakpoints","md"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport Identicon from 'identicon.js';\nimport { useSavedConnector } from 'src/state/application/hooks';\nimport { useWeb3React } from '@web3-react/core';\nimport useWalletConnectors from 'src/hooks/useWalletConnectors';\nimport { Web3Provider } from '@ethersproject/providers';\nimport useTryConnect from 'src/hooks/useTryConnect';\nimport { useConfiguration } from 'src/contexts/ConfigProvider/ConfigProvider';\nimport useModal from 'src/hooks/useModal';\nimport AccountModal from './AccountModal';\nimport Spacer from '../Spacer';\nimport { useAllTransactions } from 'src/state/transactions/hooks';\nimport Loading from '../Loading';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faSatelliteDish } from \"@fortawesome/free-solid-svg-icons\";\nimport { ConnectorNames } from 'src/state/application/reducer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { NetworkConnector } from 'src/libs/NetworkConnector';\n\nconst isMetaMaskConnected = () => {\n  if (\n    typeof window.ethereum !== 'undefined' &&\n    window.ethereum.isMetaMask &&\n    window.ethereum._metamask &&\n    typeof window.ethereum._metamask.isUnlocked === 'function'\n  ) {\n    return window.ethereum._metamask.isUnlocked();\n  }\n\n  return Promise.resolve(false);\n};\n\nconst AccountButton: React.FC = () => {\n  const { account, activate, connector, deactivate } = useWeb3React<Web3Provider>();\n  const [onPresentAccountModal] = useModal(<AccountModal />);\n  const { tryConnect } = useTryConnect();\n  const savedConnector = useSavedConnector();\n  const connectors = useWalletConnectors();\n  const allTransactions = useAllTransactions();\n  const { chainId, defaultProvider } = useConfiguration();\n\n  const defaultConnector = useMemo(\n    () =>\n      new NetworkConnector({\n        urls: {\n          [chainId]: Array.isArray(defaultProvider) ? defaultProvider[0] : defaultProvider,\n        },\n        defaultChainId: chainId,\n      }),\n    [chainId, defaultProvider],\n  );\n\n  const hasPendingTransaction = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter((tx) => !tx.receipt).length > 0;\n  }, [allTransactions]);\n\n  useEffect(() => {\n    if (!account && !savedConnector) {\n      activate(defaultConnector);\n      return;\n    }\n\n    if (!account && savedConnector && connectors[savedConnector]) {\n      if (savedConnector === ConnectorNames.Injected) {\n        isMetaMaskConnected().then((connected) => {\n          if (connected) {\n            activate(connectors[savedConnector], (error) => {\n              console.log('error', error);\n              activate(defaultConnector);\n            });\n          } else {\n            activate(defaultConnector);\n          }\n        });\n      } else {\n        activate(connectors[savedConnector], (error) => {\n          console.log('error', error);\n          activate(defaultConnector);\n        });\n      }\n    }\n  }, [account, activate, connectors, deactivate, defaultConnector, savedConnector]);\n\n  useEffect(() => {\n    if (connector) {\n      const onChange = () => {\n        window.location.reload();\n      };\n      connector.addListener('Web3ReactUpdate', onChange);\n\n      return () => {\n        connector.removeListener('Web3ReactUpdate', onChange);\n      };\n    }\n  }, [connector]);\n\n  const iconAccount = useMemo(() => {\n    if (account) {\n      const data = new Identicon(account, {\n        size: 48,\n        foreground: [50, 197, 255, 255],\n        background: [0, 0, 0, 0],\n        format: 'svg',\n      }).toString();\n      return `data:image/svg+xml;base64,${data}`;\n    }\n  }, [account]);\n\n  const shortenAccount = useMemo(() => {\n    if (account && account.length > 0) {\n      return `${account.substring(0, 4)}.....${account.substring(\n        account.length - 4,\n        account.length,\n      )}`;\n    }\n  }, [account]);\n\n  return (\n    <StyledAccountButton active={!!library}>\n      {account ? (\n        <button className=\"btn btn-outline\" onClick={onPresentAccountModal}>\n          <AccountInfo>\n            <img src={iconAccount} />\n            {hasPendingTransaction && (\n              <>\n                <Spacer size=\"sm\" />\n                <Loading size=\"18px\" color=\"#ffffff\" />\n              </>\n            )}\n            <Spacer size=\"xs\" />\n            <AccountNumber>{shortenAccount}</AccountNumber>\n          </AccountInfo>\n        </button>\n      ) : !library ? (\n        <button className=\"btn btn-outline\">\n          <FontAwesomeIcon icon={faSatelliteDish} style={{ marginRight: '5px' }} />\n          <span className=\"d-none d-lg-inline\">Waiting for network</span>\n        </button>\n      ) : (\n        <button className=\"btn\" onClick={() => tryConnect()}>\n          Connect\n        </button>\n      )}\n    </StyledAccountButton>\n  );\n};\n\nconst StyledAccountButton = styled.div<{ active?: boolean }>`\n  background: transparent;\n`;\n\nconst AccountInfo = styled.span`\n  display: flex;\n  align-items: center;\n  img {\n    width: 24px;\n    height: auto;\n    border-radius: 100%;\n  }\n`;\n\nconst AccountNumber = styled.span`\n  margin-right: 10px;\n  text-transform: lowercase;\n  @media (max-width: 1070px) {\n    display: none;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    display: none;\n  }\n`;\n\nexport default AccountButton;\n"]},"metadata":{},"sourceType":"module"}