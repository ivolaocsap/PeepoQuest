{"ast":null,"code":"import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useContext,useEffect,useRef,useState}from'react';import useDiamondHand from'src/hooks/useDiamondHand';import{useBlockNumber}from'src/state/application/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";var Context=/*#__PURE__*/createContext(null);export var CurrentLotteryInfoProvider=function CurrentLotteryInfoProvider(_ref){var children=_ref.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var diamondHand=useDiamondHand();var blockNumber=useBlockNumber();var lastCheckedBlockNumber=useRef();useEffect(function(){var mounted=true;if(!diamondHand){return;}if(lastCheckedBlockNumber.current>blockNumber-5){return;}lastCheckedBlockNumber.current=blockNumber;diamondHand===null||diamondHand===void 0?void 0:diamondHand.LOTTERY.getCurrentLottoInfo().then(function(res){if(mounted){setData(res);}});return function(){mounted=false;};},[blockNumber,diamondHand]);return/*#__PURE__*/_jsx(Context.Provider,{value:data,children:children});};export var useCurrentLotto=function useCurrentLotto(){return useContext(Context);};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/contexts/CurrentLotteryProvider/CurrentLotteryProvider.tsx"],"names":["createContext","useContext","useEffect","useRef","useState","useDiamondHand","useBlockNumber","Context","CurrentLotteryInfoProvider","children","data","setData","diamondHand","blockNumber","lastCheckedBlockNumber","mounted","current","LOTTERY","getCurrentLottoInfo","then","res","useCurrentLotto"],"mappings":"wJAAA,OAASA,aAAT,CAAmCC,UAAnC,CAA+CC,SAA/C,CAA0DC,MAA1D,CAAkEC,QAAlE,KAAkF,OAAlF,CAEA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CACA,OAASC,cAAT,KAA+B,6BAA/B,C,2CAEA,GAAMC,CAAAA,OAAO,cAAGP,aAAa,CAAY,IAAZ,CAA7B,CAEA,MAAO,IAAMQ,CAAAA,0BAA6D,CAAG,QAAhEA,CAAAA,0BAAgE,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC7F,cAAwBL,QAAQ,CAAY,EAAZ,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,WAAW,CAAGP,cAAc,EAAlC,CACA,GAAMQ,CAAAA,WAAW,CAAGP,cAAc,EAAlC,CACA,GAAMQ,CAAAA,sBAAsB,CAAGX,MAAM,EAArC,CAEAD,SAAS,CAAC,UAAM,CACd,GAAIa,CAAAA,OAAO,CAAG,IAAd,CACA,GAAI,CAACH,WAAL,CAAkB,CAChB,OACD,CAED,GAAIE,sBAAsB,CAACE,OAAvB,CAAiCH,WAAW,CAAG,CAAnD,CAAsD,CACpD,OACD,CAEDC,sBAAsB,CAACE,OAAvB,CAAiCH,WAAjC,CACAD,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEK,OAAb,CAAqBC,mBAArB,GAA2CC,IAA3C,CAAgD,SAACC,GAAD,CAAS,CACvD,GAAIL,OAAJ,CAAa,CACXJ,OAAO,CAACS,GAAD,CAAP,CACD,CACF,CAJD,EAMA,MAAO,WAAM,CACXL,OAAO,CAAG,KAAV,CACD,CAFD,CAGD,CApBQ,CAoBN,CAACF,WAAD,CAAcD,WAAd,CApBM,CAAT,CAsBA,mBAAO,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAEF,IAAzB,UAAgCD,QAAhC,EAAP,CACD,CA7BM,CA+BP,MAAO,IAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAiB,CAC9C,MAAOpB,CAAAA,UAAU,CAACM,OAAD,CAAjB,CACD,CAFM","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useRef, useState } from 'react';\nimport { LottoInfo } from 'src/diamondhand/Lottery';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport { useBlockNumber } from 'src/state/application/hooks';\n\nconst Context = createContext<LottoInfo>(null);\n\nexport const CurrentLotteryInfoProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [data, setData] = useState<LottoInfo>({} as LottoInfo);\n  const diamondHand = useDiamondHand();\n  const blockNumber = useBlockNumber();\n  const lastCheckedBlockNumber = useRef<number>();\n\n  useEffect(() => {\n    let mounted = true;\n    if (!diamondHand) {\n      return;\n    }\n\n    if (lastCheckedBlockNumber.current > blockNumber - 5) {\n      return;\n    }\n\n    lastCheckedBlockNumber.current = blockNumber;\n    diamondHand?.LOTTERY.getCurrentLottoInfo().then((res) => {\n      if (mounted) {\n        setData(res);\n      }\n    });\n\n    return () => {\n      mounted = false;\n    };\n  }, [blockNumber, diamondHand]);\n\n  return <Context.Provider value={data}>{children}</Context.Provider>;\n};\n\nexport const useCurrentLotto = (): LottoInfo => {\n  return useContext(Context);\n};\n"]},"metadata":{},"sourceType":"module"}