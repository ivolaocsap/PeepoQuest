{"ast":null,"code":"import React,{createContext,useContext}from'react';import{getDefaultConfiguration}from'../../config';import{jsx as _jsx}from\"react/jsx-runtime\";var Context=/*#__PURE__*/createContext({});var networkConfig=getDefaultConfiguration();export var ConfigProvider=function ConfigProvider(_ref){var children=_ref.children;return/*#__PURE__*/_jsx(Context.Provider,{value:networkConfig,children:children});};export var useConfiguration=function useConfiguration(){console.log('useConfiguration',useContext(Context));var networkConfig=getDefaultConfiguration();return networkConfig;};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/contexts/ConfigProvider/ConfigProvider.tsx"],"names":["React","createContext","useContext","getDefaultConfiguration","Context","networkConfig","ConfigProvider","children","useConfiguration","console","log"],"mappings":"AACA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA0CC,UAA1C,KAA4D,OAA5D,CACA,OAASC,uBAAT,KAAwC,cAAxC,C,2CAGA,GAAMC,CAAAA,OAAO,cAAGH,aAAa,CAAgB,EAAhB,CAA7B,CACA,GAAMI,CAAAA,aAAa,CAAGF,uBAAuB,EAA7C,CAEA,MAAO,IAAMG,CAAAA,cAAiD,CAAG,QAApDA,CAAAA,cAAoD,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACjF,mBAAO,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAEF,aAAzB,UAAyCE,QAAzC,EAAP,CACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAqB,CACnDC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCR,UAAU,CAACE,OAAD,CAA1C,EACA,GAAMC,CAAAA,aAAa,CAAGF,uBAAuB,EAA7C,CAEA,MAAOE,CAAAA,aAAP,CACD,CALM","sourcesContent":["import { nullFormat } from 'numeral';\nimport React, { createContext, ReactNode, useContext } from 'react';\nimport { getDefaultConfiguration } from '../../config';\nimport { Configuration } from '../../diamondhand/config';\n\nconst Context = createContext<Configuration>({} as Configuration);\nconst networkConfig = getDefaultConfiguration();\n\nexport const ConfigProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  return <Context.Provider value={networkConfig}>{children}</Context.Provider>;\n};\n\nexport const useConfiguration = (): Configuration => {\n  console.log('useConfiguration', useContext(Context));\n  const networkConfig = getDefaultConfiguration();\n\n  return networkConfig;\n};\n"]},"metadata":{},"sourceType":"module"}