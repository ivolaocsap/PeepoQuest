{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst typed_promisify_1 = require(\"typed-promisify\");\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../../types\");\n\nexports.MythereumSchema = {\n  version: 2,\n  deploymentBlock: 5033489,\n  name: 'Mythereum',\n  description: 'Fantastically Distributed Collectible Card Game',\n  thumbnail: 'https://www.mythereum.io/three-cards.png',\n  website: 'https://www.mythereum.io/',\n  fields: [{\n    name: 'ID',\n    type: 'uint256',\n    description: 'Mythereum card number.'\n  }],\n  assetFromFields: fields => fields.ID,\n  assetToFields: asset => ({\n    ID: asset\n  }),\n  formatter: (asset, web3) => __awaiter(this, void 0, void 0, function* () {\n    const cardsABI = {\n      'constant': true,\n      'inputs': [{\n        'name': '',\n        'type': 'uint256'\n      }],\n      'name': 'cards',\n      'outputs': [{\n        'name': 'name',\n        'type': 'string'\n      }, {\n        'name': 'class',\n        'type': 'uint8'\n      }, {\n        'name': 'classVariant',\n        'type': 'uint8'\n      }, {\n        'name': 'damagePoints',\n        'type': 'uint8'\n      }, {\n        'name': 'shieldPoints',\n        'type': 'uint8'\n      }, {\n        'name': 'abilityId',\n        'type': 'uint256'\n      }],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    };\n    const abilitiesABI = {\n      'constant': true,\n      'inputs': [{\n        'name': '',\n        'type': 'uint256'\n      }],\n      'name': 'abilities',\n      'outputs': [{\n        'name': 'name',\n        'type': 'string'\n      }, {\n        'name': 'canBeBlocked',\n        'type': 'bool'\n      }, {\n        'name': 'blackMagicCost',\n        'type': 'uint8'\n      }, {\n        'name': 'grayMagicCost',\n        'type': 'uint8'\n      }, {\n        'name': 'whiteMagicCost',\n        'type': 'uint8'\n      }, {\n        'name': 'addedDamage',\n        'type': 'uint256'\n      }, {\n        'name': 'addedShield',\n        'type': 'uint256'\n      }],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    };\n    const contract = web3.eth.contract([cardsABI, abilitiesABI]).at('0xa67aac23549f4c672256b59b43ab0bacfcfcd498');\n    const res = yield typed_promisify_1.promisify(contract.cards.call)(asset);\n    const name = res[0];\n    const classId = res[1];\n    const classVariant = res[2];\n    const damagePoints = res[3];\n    const shieldPoints = res[4];\n    const abilityId = res[5];\n    const ares = yield typed_promisify_1.promisify(contract.abilities.call)(abilityId);\n    const abilityName = ares[0];\n    return {\n      thumbnail: 'https://www.mythereum.io/' + classId + '_' + classVariant + '.png',\n      title: 'Mythereum #' + asset + ' - ' + name,\n      description: 'Ability ' + abilityName + ' / Damage ' + damagePoints + ' / Shield ' + shieldPoints,\n      url: 'https://www.mythereum.io/',\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'transfer',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: '0xa67aac23549f4c672256b59b43ab0bacfcfcd498',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: '_to',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'ownerOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: '0xa67aac23549f4c672256b59b43ab0bacfcfcd498',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: '',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: [{\n      type: Web3.AbiType.Event,\n      name: 'Transfer',\n      target: '0xa67aac23549f4c672256b59b43ab0bacfcfcd498',\n      anonymous: false,\n      inputs: [{\n        kind: types_1.EventInputKind.Source,\n        indexed: true,\n        name: '_from',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Destination,\n        indexed: true,\n        name: '_to',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Asset,\n        indexed: false,\n        name: '_tokenId',\n        type: 'uint256'\n      }],\n      assetFromInputs: inputs => __awaiter(this, void 0, void 0, function* () {\n        return inputs._tokenId;\n      })\n    }]\n  },\n  hash: a => a\n};","map":{"version":3,"sources":["../../../../src/schemas/main/Mythereum/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typed_promisify_1 = require(\"typed-promisify\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nexports.MythereumSchema = {\n    version: 2,\n    deploymentBlock: 5033489,\n    name: 'Mythereum',\n    description: 'Fantastically Distributed Collectible Card Game',\n    thumbnail: 'https://www.mythereum.io/three-cards.png',\n    website: 'https://www.mythereum.io/',\n    fields: [\n        { name: 'ID', type: 'uint256', description: 'Mythereum card number.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: (asset, web3) => __awaiter(this, void 0, void 0, function* () {\n        const cardsABI = { 'constant': true, 'inputs': [{ 'name': '', 'type': 'uint256' }], 'name': 'cards', 'outputs': [{ 'name': 'name', 'type': 'string' }, { 'name': 'class', 'type': 'uint8' }, { 'name': 'classVariant', 'type': 'uint8' }, { 'name': 'damagePoints', 'type': 'uint8' }, { 'name': 'shieldPoints', 'type': 'uint8' }, { 'name': 'abilityId', 'type': 'uint256' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n        const abilitiesABI = { 'constant': true, 'inputs': [{ 'name': '', 'type': 'uint256' }], 'name': 'abilities', 'outputs': [{ 'name': 'name', 'type': 'string' }, { 'name': 'canBeBlocked', 'type': 'bool' }, { 'name': 'blackMagicCost', 'type': 'uint8' }, { 'name': 'grayMagicCost', 'type': 'uint8' }, { 'name': 'whiteMagicCost', 'type': 'uint8' }, { 'name': 'addedDamage', 'type': 'uint256' }, { 'name': 'addedShield', 'type': 'uint256' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n        const contract = web3.eth.contract([cardsABI, abilitiesABI]).at('0xa67aac23549f4c672256b59b43ab0bacfcfcd498');\n        const res = yield typed_promisify_1.promisify(contract.cards.call)(asset);\n        const name = res[0];\n        const classId = res[1];\n        const classVariant = res[2];\n        const damagePoints = res[3];\n        const shieldPoints = res[4];\n        const abilityId = res[5];\n        const ares = yield typed_promisify_1.promisify(contract.abilities.call)(abilityId);\n        const abilityName = ares[0];\n        return {\n            thumbnail: 'https://www.mythereum.io/' + classId + '_' + classVariant + '.png',\n            title: 'Mythereum #' + asset + ' - ' + name,\n            description: 'Ability ' + abilityName + ' / Damage ' + damagePoints + ' / Shield ' + shieldPoints,\n            url: 'https://www.mythereum.io/',\n            properties: [],\n        };\n    }),\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'transfer',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0xa67aac23549f4c672256b59b43ab0bacfcfcd498',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'ownerOf',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0xa67aac23549f4c672256b59b43ab0bacfcfcd498',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Owner, name: '', type: 'address' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'Transfer',\n                target: '0xa67aac23549f4c672256b59b43ab0bacfcfcd498',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: true, name: '_from', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: true, name: '_to', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: '_tokenId', type: 'uint256' },\n                ],\n                assetFromInputs: (inputs) => __awaiter(this, void 0, void 0, function* () { return inputs._tokenId; }),\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}