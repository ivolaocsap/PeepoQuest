{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport useDiamondHand from './useDiamondHand';\n\nconst useMyTicket = lotteryId => {\n  _s();\n\n  const dh = useDiamondHand();\n  const [myTickets, setMyTickets] = useState([]);\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    let mounted = true;\n\n    if (!dh || !lotteryId || !account) {\n      return;\n    }\n\n    setMyTickets([]);\n    dh.TICKET.getUserTickets(lotteryId, account).then(ticketIds => {\n      if (!mounted) {\n        return;\n      }\n\n      setMyTickets(ticketIds);\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [dh, lotteryId, account]);\n  return myTickets;\n};\n\n_s(useMyTicket, \"6iVhNqpB4oO+R9kTMEcavdPFhYs=\", false, function () {\n  return [useDiamondHand, useWeb3React];\n});\n\nexport default useMyTicket;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/BabyPepe/src/hooks/useMyTicket.ts"],"names":["useEffect","useState","useWeb3React","useDiamondHand","useMyTicket","lotteryId","dh","myTickets","setMyTickets","account","mounted","TICKET","getUserTickets","then","ticketIds"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAAuB;AAAA;;AACzC,QAAMC,EAAE,GAAGH,cAAc,EAAzB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAc,EAAd,CAA1C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,YAAY,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,GAAG,IAAd;;AACA,QAAI,CAACJ,EAAD,IAAO,CAACD,SAAR,IAAqB,CAACI,OAA1B,EAAmC;AACjC;AACD;;AACDD,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,EAAE,CAACK,MAAH,CAAUC,cAAV,CAAyBP,SAAzB,EAAoCI,OAApC,EAA6CI,IAA7C,CAAmDC,SAAD,IAAe;AAC/D,UAAI,CAACJ,OAAL,EAAc;AACZ;AACD;;AACDF,MAAAA,YAAY,CAACM,SAAD,CAAZ;AACD,KALD;AAMA,WAAO,MAAM;AACXJ,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GAfQ,EAeN,CAACJ,EAAD,EAAKD,SAAL,EAAgBI,OAAhB,CAfM,CAAT;AAiBA,SAAOF,SAAP;AACD,CAvBD;;GAAMH,W;UACOD,c,EAESD,Y;;;AAsBtB,eAAeE,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useWeb3React } from '@web3-react/core';\nimport useDiamondHand from './useDiamondHand';\n\nconst useMyTicket = (lotteryId: number) => {\n  const dh = useDiamondHand();\n  const [myTickets, setMyTickets] = useState<BigNumber[]>([]);\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    let mounted = true;\n    if (!dh || !lotteryId || !account) {\n      return;\n    }\n    setMyTickets([]);\n    dh.TICKET.getUserTickets(lotteryId, account).then((ticketIds) => {\n      if (!mounted) {\n        return;\n      }\n      setMyTickets(ticketIds);\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [dh, lotteryId, account]);\n\n  return myTickets;\n};\n\nexport default useMyTicket;\n"]},"metadata":{},"sourceType":"module"}