{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useWeb3React } from '@web3-react/core';\nimport useDiamondHand from './useDiamondHand';\n\nconst useMyTicket = () => {\n  _s();\n\n  const dh = useDiamondHand();\n  const [currentBattle, setbattle] = useState();\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    let mounted = true;\n\n    if (!dh || !account) {\n      return;\n    }\n\n    setbattle(BigNumber.from(0));\n    dh.NFT.getBattleid().then(battle => {\n      if (!mounted) {\n        return;\n      }\n\n      setbattle(battle);\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [dh, account]);\n  return currentBattle;\n};\n\n_s(useMyTicket, \"6GQUEanaZzHCk8fBkSgvaPQV+uM=\", false, function () {\n  return [useDiamondHand, useWeb3React];\n});\n\nexport default useMyTicket;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/PeepoAvax/src/hooks/useLastBattle.ts"],"names":["useEffect","useState","BigNumber","useWeb3React","useDiamondHand","useMyTicket","dh","currentBattle","setbattle","account","mounted","from","NFT","getBattleid","then","battle"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,EAAE,GAAGF,cAAc,EAAzB;AACA,QAAM,CAACG,aAAD,EAAgBC,SAAhB,IAA6BP,QAAQ,EAA3C;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAcN,YAAY,EAAhC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,GAAG,IAAd;;AACA,QAAI,CAACJ,EAAD,IAAO,CAACG,OAAZ,EAAqB;AACnB;AACD;;AACDD,IAAAA,SAAS,CAACN,SAAS,CAACS,IAAV,CAAe,CAAf,CAAD,CAAT;AACAL,IAAAA,EAAE,CAACM,GAAH,CAAOC,WAAP,GAAqBC,IAArB,CAA2BC,MAAD,IAAY;AACpC,UAAI,CAACL,OAAL,EAAc;AACZ;AACD;;AACDF,MAAAA,SAAS,CAACO,MAAD,CAAT;AACD,KALD;AAOA,WAAO,MAAM;AACXL,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACJ,EAAD,EAAKG,OAAL,CAhBM,CAAT;AAkBA,SAAOF,aAAP;AACD,CAzBD;;GAAMF,W;UACOD,c,EAGSD,Y;;;AAuBtB,eAAeE,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useWeb3React } from '@web3-react/core';\nimport useDiamondHand from './useDiamondHand';\n\nconst useMyTicket = () => {\n  const dh = useDiamondHand();\n  const [currentBattle, setbattle] = useState<BigNumber>();\n\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    let mounted = true;\n    if (!dh || !account) {\n      return;\n    }\n    setbattle(BigNumber.from(0));\n    dh.NFT.getBattleid().then((battle) => {\n      if (!mounted) {\n        return;\n      }\n      setbattle(battle);\n    });\n\n    return () => {\n      mounted = false;\n    };\n  }, [dh, account]);\n\n  return currentBattle;\n};\n\nexport default useMyTicket;\n"]},"metadata":{},"sourceType":"module"}