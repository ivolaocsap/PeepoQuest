{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createForOfIteratorHelper from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{BigNumber}from'@ethersproject/bignumber';import{Lottery}from'./Lottery';import Cuffies from'./Cuffies';import WBNB from'./wbnb';import{Ticket}from'./Ticket';import{MasterChef}from'./MasterChef';import{EarlySale}from'./EarlySale';import{multicall as _multicall}from'./multicall';import LINK from'./LINK';import{Nft}from'./Nft';import{TaxService}from'./TaxService';import ERC20 from'./ERC20';/**\n * An API module of Diamond Hand contracts.\n * All contract-interacting domain logic should be defined in here.\n */export var DiamondHand=/*#__PURE__*/function(){function DiamondHand(cfg,web3Provider,account){_classCallCheck(this,DiamondHand);this.myAccount=void 0;this.defaultProvider=void 0;this.signer=void 0;this.config=void 0;this.lottery=void 0;this.cuffies=void 0;this.collateralTokens=void 0;this.link=void 0;this.wbnb=void 0;this.nft=void 0;this.ticket=void 0;this.masterchef=void 0;this.earlysale=void 0;this.taxService=void 0;this.multicallAddress=void 0;var provider=account?web3Provider.getSigner(account):web3Provider;this.defaultProvider=web3Provider;this.myAccount=account;var abis=cfg.abis,addresses=cfg.addresses,collateralTokens=cfg.collateralTokens;this.lottery=new Lottery(abis.Lottery,addresses.Lottery,provider,this);this.ticket=new Ticket(abis.Ticket,addresses.Ticket,provider);this.masterchef=new MasterChef(abis.MasterChef,addresses.MasterChef,provider);this.earlysale=new EarlySale(abis.EarlySale,addresses.EarlySale,provider);this.taxService=new TaxService(abis.TaxService,addresses.TaxService,provider);this.nft=new Nft(abis.Nft,addresses.Nft,provider);this.config=cfg;this.multicallAddress=cfg.addresses.Multicall;this.cuffies=new Cuffies(abis.Cuffies,addresses.Cuffies,provider,'Cuffies');this.link=new LINK(abis.Link,addresses.Link,provider,'LINK');this.wbnb=new WBNB(abis.Wbnb,addresses.Wbnb,provider,'WBNB');this.collateralTokens=[];for(var _i=0,_Object$entries=Object.entries(collateralTokens);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),symbol=_Object$entries$_i[0],_Object$entries$_i$=_slicedToArray(_Object$entries$_i[1],2),address=_Object$entries$_i$[0],decimal=_Object$entries$_i$[1];this.collateralTokens.push(new ERC20(address,provider,symbol,decimal));}}_createClass(DiamondHand,[{key:\"multicall\",value:function multicall(calls){return _multicall(this.defaultProvider,this.multicallAddress,calls);}},{key:\"provider\",get:function get(){return this.signer||this.defaultProvider;}},{key:\"getCollateralTokens\",value:function getCollateralTokens(){return this.collateralTokens;}},{key:\"getTokenByAddress\",value:function getTokenByAddress(address){return this.collateralTokens.find(function(t){return t.address==address;});}/**\n   * @param provider From an unlocked wallet. (e.g. Metamask)\n   * @param account An address of unlocked wallet account.\n   */},{key:\"unlockWallet\",value:function unlockWallet(provider,account){var signer;if(account){signer=provider.getSigner(account);this.signer=provider.getSigner(account);}else{signer=provider;this.signer=null;}this.myAccount=account;this.reconnect(signer);}},{key:\"lock\",value:function lock(provider){this.signer=null;this.myAccount=null;this.reconnect(provider);}},{key:\"reconnect\",value:function reconnect(signer){var contracts=[this.lottery,this.ticket,this.cuffies].concat(_toConsumableArray(Object.values(this.collateralTokens)));var _iterator=_createForOfIteratorHelper(contracts),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var c=_step.value;if(c){c.connect(signer);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}},{key:\"isUnlocked\",get:function get(){return!!this.myAccount;}},{key:\"LOTTERY\",get:function get(){return this.lottery;}},{key:\"NFT\",get:function get(){return this.nft;}},{key:\"TICKET\",get:function get(){return this.ticket;}},{key:\"CUFFIES\",get:function get(){return this.cuffies;}},{key:\"LINK\",get:function get(){return this.link;}},{key:\"WBNB\",get:function get(){return this.wbnb;}},{key:\"MASTERCHEF\",get:function get(){return this.masterchef;}},{key:\"EARLYSALE\",get:function get(){return this.earlysale;}},{key:\"TAXSERVICE\",get:function get(){return this.taxService;}},{key:\"getInfo\",value:function(){var _getInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var addresses,_yield$this$multicall,_yield$this$multicall2,_yield$this$multicall3,jackPotDistribution,_yield$this$multicall4,matchFourDistribution,_yield$this$multicall5,matchThreeDistribution,_yield$this$multicall6,taxRate,_yield$this$multicall7,costPerTicket,_yield$this$multicall8,maxValidRange,_yield$this$multicall9,powerBallRange,_yield$this$multicall10,reservePoolRatio,_yield$this$multicall11,burnironRatio,_yield$this$multicall12,revervePoolBalance,_yield$this$multicall13,randomNumberGeneratorBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:addresses=this.config.addresses;_context.next=3;return this.multicall([{contract:this.LOTTERY.contract,method:'prizeDistribution_',params:[0]},{contract:this.LOTTERY.contract,method:'prizeDistribution_',params:[1]},{contract:this.LOTTERY.contract,method:'prizeDistribution_',params:[2]},{contract:this.LOTTERY.contract,method:'taxRate_'},{contract:this.LOTTERY.contract,method:'costPerTicket_'},{contract:this.LOTTERY.contract,method:'maxValidRange_'},{contract:this.LOTTERY.contract,method:'powerBallRange_'},{contract:this.TAXSERVICE.contract,method:'reservePoolRatio_'},{contract:this.TAXSERVICE.contract,method:'burnTitanPoolRatio_'},{contract:this.cuffies.contract,method:'balanceOf',params:[addresses.PrizeReservePool]},{contract:this.LINK.contract,method:'balanceOf',params:[addresses.RandomNumberGenerator]}]);case 3:_yield$this$multicall=_context.sent;_yield$this$multicall2=_slicedToArray(_yield$this$multicall,11);_yield$this$multicall3=_slicedToArray(_yield$this$multicall2[0],1);jackPotDistribution=_yield$this$multicall3[0];_yield$this$multicall4=_slicedToArray(_yield$this$multicall2[1],1);matchFourDistribution=_yield$this$multicall4[0];_yield$this$multicall5=_slicedToArray(_yield$this$multicall2[2],1);matchThreeDistribution=_yield$this$multicall5[0];_yield$this$multicall6=_slicedToArray(_yield$this$multicall2[3],1);taxRate=_yield$this$multicall6[0];_yield$this$multicall7=_slicedToArray(_yield$this$multicall2[4],1);costPerTicket=_yield$this$multicall7[0];_yield$this$multicall8=_slicedToArray(_yield$this$multicall2[5],1);maxValidRange=_yield$this$multicall8[0];_yield$this$multicall9=_slicedToArray(_yield$this$multicall2[6],1);powerBallRange=_yield$this$multicall9[0];_yield$this$multicall10=_slicedToArray(_yield$this$multicall2[7],1);reservePoolRatio=_yield$this$multicall10[0];_yield$this$multicall11=_slicedToArray(_yield$this$multicall2[8],1);burnironRatio=_yield$this$multicall11[0];_yield$this$multicall12=_slicedToArray(_yield$this$multicall2[9],1);revervePoolBalance=_yield$this$multicall12[0];_yield$this$multicall13=_slicedToArray(_yield$this$multicall2[10],1);randomNumberGeneratorBalance=_yield$this$multicall13[0];return _context.abrupt(\"return\",{jackPotDistribution:jackPotDistribution.div(1e4).toNumber(),matchFourDistribution:matchFourDistribution.div(1e4).toNumber(),matchThreeDistribution:matchThreeDistribution.div(1e4).toNumber(),taxRate:taxRate.div(1e4).toNumber(),costPerTicket:costPerTicket,maxValidRange:maxValidRange,powerBallRange:powerBallRange,reservePoolRatio:reservePoolRatio,burnironRatio:burnironRatio,revervePoolBalance:revervePoolBalance,randomNumberGeneratorBalance:randomNumberGeneratorBalance});case 28:case\"end\":return _context.stop();}}},_callee,this);}));function getInfo(){return _getInfo.apply(this,arguments);}return getInfo;}()},{key:\"gasOptions\",value:function gasOptions(gas){var multiplied=Math.floor(gas.toNumber()*this.config.gasLimitMultiplier);console.log(\"\\u26FD\\uFE0F Gas multiplied: \".concat(gas,\" -> \").concat(multiplied));return{gasLimit:BigNumber.from(multiplied)};}}]);return DiamondHand;}();","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/diamondhand/DiamondHand.ts"],"names":["BigNumber","Lottery","Cuffies","WBNB","Ticket","MasterChef","EarlySale","multicall","LINK","Nft","TaxService","ERC20","DiamondHand","cfg","web3Provider","account","myAccount","defaultProvider","signer","config","lottery","cuffies","collateralTokens","link","wbnb","nft","ticket","masterchef","earlysale","taxService","multicallAddress","provider","getSigner","abis","addresses","Multicall","Link","Wbnb","Object","entries","symbol","address","decimal","push","calls","find","t","reconnect","contracts","values","c","connect","contract","LOTTERY","method","params","TAXSERVICE","PrizeReservePool","RandomNumberGenerator","jackPotDistribution","matchFourDistribution","matchThreeDistribution","taxRate","costPerTicket","maxValidRange","powerBallRange","reservePoolRatio","burnironRatio","revervePoolBalance","randomNumberGeneratorBalance","div","toNumber","gas","multiplied","Math","floor","gasLimitMultiplier","console","log","gasLimit","from"],"mappings":"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","sourcesContent":["import { Configuration } from './config';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { Overrides } from '@ethersproject/contracts';\nimport { JsonRpcProvider, Provider } from '@ethersproject/providers';\nimport { Lottery } from './Lottery';\nimport Cuffies from './Cuffies';\nimport WBNB from './wbnb';\nimport { Ticket } from './Ticket';\nimport { MasterChef } from './MasterChef';\nimport { EarlySale } from './EarlySale';\nimport { Call, multicall } from './multicall';\nimport LINK from './LINK';\nimport{ Nft } from './Nft';\nimport { TaxService } from './TaxService';\nimport { ConfigurationInfo } from './types';\nimport ERC20 from './ERC20';\n\n/**\n * An API module of Diamond Hand contracts.\n * All contract-interacting domain logic should be defined in here.\n */\nexport class DiamondHand {\n  myAccount: string;\n  private defaultProvider: JsonRpcProvider;\n  private signer?: Signer;\n  private config: Configuration;\n  private lottery: Lottery;\n  private cuffies: Cuffies;\n  private collateralTokens: ERC20[];\n  private link: LINK;\n  private wbnb: WBNB;\n  private nft: Nft;\n  private ticket: Ticket;\n  private masterchef: MasterChef;\n  private earlysale: EarlySale;\n  private taxService: TaxService;\n  private multicallAddress: string;\n\n  constructor(cfg: Configuration, web3Provider: JsonRpcProvider, account?: string) {\n    const provider = account ? web3Provider.getSigner(account) : web3Provider;\n    this.defaultProvider = web3Provider;\n    this.myAccount = account;\n    const { abis, addresses, collateralTokens } = cfg;\n    this.lottery = new Lottery(abis.Lottery, addresses.Lottery, provider, this);\n    this.ticket = new Ticket(abis.Ticket, addresses.Ticket, provider);\n    this.masterchef = new MasterChef(abis.MasterChef, addresses.MasterChef, provider);\n    this.earlysale = new EarlySale(abis.EarlySale, addresses.EarlySale, provider);\n    this.taxService = new TaxService(abis.TaxService, addresses.TaxService, provider);\n    this.nft = new Nft(abis.Nft, addresses.Nft, provider);\n    this.config = cfg;\n    this.multicallAddress = cfg.addresses.Multicall;\n    this.cuffies = new Cuffies(abis.Cuffies, addresses.Cuffies, provider, 'Cuffies');\n    this.link = new LINK(abis.Link, addresses.Link, provider, 'LINK');\n    this.wbnb = new WBNB(abis.Wbnb, addresses.Wbnb, provider, 'WBNB');\n    this.collateralTokens = [];\n    for (const [symbol, [address, decimal]] of Object.entries(collateralTokens)) {\n      this.collateralTokens.push(new ERC20(address, provider, symbol, decimal));\n    }\n  }\n\n  public multicall(calls: Call[]) {\n    return multicall(this.defaultProvider, this.multicallAddress, calls);\n  }\n\n  public get provider(): Signer | Provider {\n    return this.signer || this.defaultProvider;\n  }\n  public getCollateralTokens() {\n    return this.collateralTokens;\n  }\n\n  public getTokenByAddress(address: string) {\n    return this.collateralTokens.find((t) => t.address == address);\n  }\n\n  /**\n   * @param provider From an unlocked wallet. (e.g. Metamask)\n   * @param account An address of unlocked wallet account.\n   */\n  unlockWallet(provider: JsonRpcProvider, account: string) {\n    let signer: Signer | JsonRpcProvider;\n\n    if (account) {\n      signer = provider.getSigner(account);\n      this.signer = provider.getSigner(account);\n    } else {\n      signer = provider;\n      this.signer = null;\n    }\n\n    this.myAccount = account;\n    this.reconnect(signer);\n  }\n\n  lock(provider: any) {\n    this.signer = null;\n    this.myAccount = null;\n    this.reconnect(provider);\n  }\n\n  private reconnect(signer: any) {\n    const contracts = [\n      this.lottery,\n      this.ticket,\n      this.cuffies,\n      ...Object.values(this.collateralTokens),\n    ];\n    for (const c of contracts) {\n      if (c) {\n        c.connect(signer);\n      }\n    }\n  }\n\n  get isUnlocked(): boolean {\n    return !!this.myAccount;\n  }\n\n  get LOTTERY() {\n    return this.lottery;\n  }\n\n  get NFT() {\n    return this.nft;\n  }\n\n  get TICKET() {\n    return this.ticket;\n  }\n\n  get CUFFIES() {\n    return this.cuffies;\n  }\n\n  get LINK() {\n    return this.link;\n  }\n  get WBNB() {\n    return this.wbnb;\n  }\n  get MASTERCHEF() {\n    return this.masterchef;\n  }\n\n  get EARLYSALE() {\n    return this.earlysale;\n  }\n\n  get TAXSERVICE() {\n    return this.taxService;\n  }\n\n  async getInfo() {\n    const { addresses } = this.config;\n    const [\n      [jackPotDistribution],\n      [matchFourDistribution],\n      [matchThreeDistribution],\n      [taxRate],\n      [costPerTicket],\n      [maxValidRange],\n      [powerBallRange],\n      [reservePoolRatio],\n      [burnironRatio],\n      [revervePoolBalance],\n      [randomNumberGeneratorBalance],\n    ] = await this.multicall([\n      {\n        contract: this.LOTTERY.contract,\n        method: 'prizeDistribution_',\n        params: [0],\n      },\n      {\n        contract: this.LOTTERY.contract,\n        method: 'prizeDistribution_',\n        params: [1],\n      },\n      {\n        contract: this.LOTTERY.contract,\n        method: 'prizeDistribution_',\n        params: [2],\n      },\n      {\n        contract: this.LOTTERY.contract,\n        method: 'taxRate_',\n      },\n      {\n        contract: this.LOTTERY.contract,\n        method: 'costPerTicket_',\n      },\n      {\n        contract: this.LOTTERY.contract,\n        method: 'maxValidRange_',\n      },\n      {\n        contract: this.LOTTERY.contract,\n        method: 'powerBallRange_',\n      },\n      {\n        contract: this.TAXSERVICE.contract,\n        method: 'reservePoolRatio_',\n      },\n      {\n        contract: this.TAXSERVICE.contract,\n        method: 'burnTitanPoolRatio_',\n      },\n      {\n        contract: this.cuffies.contract,\n        method: 'balanceOf',\n        params: [addresses.PrizeReservePool],\n      },\n      {\n        contract: this.LINK.contract,\n        method: 'balanceOf',\n        params: [addresses.RandomNumberGenerator],\n      },\n    ]);\n    return {\n      jackPotDistribution: jackPotDistribution.div(1e4).toNumber(),\n      matchFourDistribution: matchFourDistribution.div(1e4).toNumber(),\n      matchThreeDistribution: matchThreeDistribution.div(1e4).toNumber(),\n      taxRate: taxRate.div(1e4).toNumber(),\n      costPerTicket,\n      maxValidRange,\n      powerBallRange,\n      reservePoolRatio,\n      burnironRatio,\n      revervePoolBalance,\n      randomNumberGeneratorBalance,\n    } as ConfigurationInfo;\n  }\n\n  gasOptions(gas: BigNumber): Overrides {\n    const multiplied = Math.floor(gas.toNumber() * this.config.gasLimitMultiplier);\n    console.log(`⛽️ Gas multiplied: ${gas} -> ${multiplied}`);\n    return {\n      gasLimit: BigNumber.from(multiplied),\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}