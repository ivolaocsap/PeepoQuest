{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/PhysicalNFTs/src/views/Farms/ModalStake.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'src/components/Modal';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalStake = ({\n  onDismiss,\n  id\n}) => {\n  _s();\n\n  const [term, setTerm] = useState('');\n\n  const submitForm = event => {\n    // Preventing the page from reloading\n    event.preventDefault(); // Do something\n\n    alert(term);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"md\",\n    padding: \"0\",\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: term,\n          onChange: e => setTerm(e.target.value),\n          type: \"text\",\n          placeholder: \"Enter a term\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: term,\n          onChange: e => setTerm(e.target.value),\n          type: \"text\",\n          placeholder: \"Enter a term\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalStake, \"LeNXftUoqlrnGX04rvwGT18cUV0=\");\n\n_c = ModalStake;\nconst TextColor = styled.div`\n  color: #c42f2f;\n`;\nconst ModalContent = styled.div`\n  padding: 32px;\n  .group-button {\n    margin-top: 33px;\n    justify-content: flex-end;\n    display: flex;\n  }\n`;\n_c2 = ModalContent;\nconst FormRowLeftTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 18px;\n  color: ${({\n  theme\n}) => theme.color.primary.light};\n  display: flex;\n  align-items: center;\n  white-space: pre;\n  .image {\n    height: 40px;\n    margin-right: 10px;\n  }\n`;\nexport const ButtonCancel = styled.button`\n  padding: 0 15px;\n  text-align: center;\n  outline: none;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  border: none;\n  margin-right: 20px;\n  background: none;\n  color: ${({\n  theme\n}) => theme.color.primary.main};\n  &:hover {\n    color: ${({\n  theme\n}) => theme.color.green[100]};\n  }\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalStake\");\n$RefreshReg$(_c2, \"ModalContent\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/PhysicalNFTs/src/views/Farms/ModalStake.tsx"],"names":["React","useState","Modal","styled","ModalStake","onDismiss","id","term","setTerm","submitForm","event","preventDefault","alert","e","target","value","TextColor","div","ModalContent","FormRowLeftTitle","theme","color","primary","light","ButtonCancel","button","main","green"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAKO,sBALP;AAMA,OAAOC,MAAP,MAAmB,mBAAnB;;AAeA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAuB;AAAA;;AAC1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMQ,UAAU,GAAIC,KAAD,IAA6C;AAC9D;AACAA,IAAAA,KAAK,CAACC,cAAN,GAF8D,CAI9D;;AACAC,IAAAA,KAAK,CAACL,IAAD,CAAL;AACD,GAND;;AAQA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,OAAO,EAAC,GAAzB;AAAA,2BACE,QAAC,YAAD;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEE,UAAhB;AAAA,gCACE;AACE,UAAA,KAAK,EAAEF,IADT;AAEE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,cAJd;AAKE,UAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,KAAK,EAAER,IADT;AAEE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,cAJd;AAKE,UAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAnCM;;GAAMX,U;;KAAAA,U;AAqCb,MAAMY,SAAS,GAAGb,MAAM,CAACc,GAAI;AAC7B;AACA,CAFA;AAGA,MAAMC,YAAY,GAAGf,MAAM,CAACc,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMC,Y;AASN,MAAMC,gBAAgB,GAAGhB,MAAM,CAACc,GAAI;AACpC;AACA;AACA,WAAW,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,KAAM;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,OAAO,MAAMC,YAAY,GAAGrB,MAAM,CAACsB,MAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBI,IAAK;AACnD;AACA,aAAa,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYM,KAAZ,CAAkB,GAAlB,CAAuB;AACnD;AACA,CAhBO","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport Modal, {\n  ModalCloseButton,\n  ModalHeader,\n  ModalProps,\n  ModalTitle,\n} from 'src/components/Modal';\nimport styled from 'styled-components';\nimport TokenInput from 'src/components/TokenInput';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\nimport { FormRow, FormToken } from 'src/components/Form';\nimport TokenSymbol from 'src/components/TokenSymbol';\nimport Number from 'src/components/Number';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useTokenBalance } from 'src/contexts/AccountBalanceProvider/AccountBalanceProvider';\nimport { ButtonStake } from './ButtonStake';\nimport icDiamondChest from '../../assets/img/ic-diamondchest.svg';\n\nexport type ModalStakeProps = ModalProps & {\n  id?: string;\n};\n\nexport const ModalStake: React.FC<ModalStakeProps> = ({ onDismiss, id }) => {\n  const [term, setTerm] = useState('');\n  const submitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    // Preventing the page from reloading\n    event.preventDefault();\n\n    // Do something\n    alert(term);\n  };\n\n  return (\n    <Modal size=\"md\" padding=\"0\">\n      <ModalContent>\n        <form onSubmit={submitForm}>\n          <input\n            value={term}\n            onChange={(e) => setTerm(e.target.value)}\n            type=\"text\"\n            placeholder=\"Enter a term\"\n            className=\"input\"\n          />\n          <input\n            value={term}\n            onChange={(e) => setTerm(e.target.value)}\n            type=\"text\"\n            placeholder=\"Enter a term\"\n            className=\"input\"\n          />\n          <button type=\"submit\" className=\"btn\">\n            Submit\n          </button>\n        </form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nconst TextColor = styled.div`\n  color: #c42f2f;\n`;\nconst ModalContent = styled.div`\n  padding: 32px;\n  .group-button {\n    margin-top: 33px;\n    justify-content: flex-end;\n    display: flex;\n  }\n`;\n\nconst FormRowLeftTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 18px;\n  color: ${({ theme }) => theme.color.primary.light};\n  display: flex;\n  align-items: center;\n  white-space: pre;\n  .image {\n    height: 40px;\n    margin-right: 10px;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  padding: 0 15px;\n  text-align: center;\n  outline: none;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  border: none;\n  margin-right: 20px;\n  background: none;\n  color: ${({ theme }) => theme.color.primary.main};\n  &:hover {\n    color: ${({ theme }) => theme.color.green[100]};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}