{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { save, load } from 'redux-localstorage-simple';\nimport transactions from './transactions/reducer';\nimport application, { initialState as appInitialState } from './application/reducer';\nconst PERSISTED_KEYS = ['application.slippageTolerance', 'application.account', 'application.infoBoxList', 'application.acceptedTerms', 'transactions', 'application.connector'];\nconst store = configureStore({\n  reducer: {\n    application,\n    transactions\n  },\n  middleware: [...getDefaultMiddleware({\n    thunk: false\n  }), save({\n    states: PERSISTED_KEYS,\n    namespace: 'iron_finance'\n  })],\n  preloadedState: load({\n    states: PERSISTED_KEYS,\n    namespace: 'iron_finance',\n    preloadedState: {\n      application: appInitialState\n    }\n  })\n});\nexport default store;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/BabyPepe/src/state/index.ts"],"names":["configureStore","getDefaultMiddleware","save","load","transactions","application","initialState","appInitialState","PERSISTED_KEYS","store","reducer","middleware","thunk","states","namespace","preloadedState"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,IAAsBC,YAAY,IAAIC,eAAtC,QAA6D,uBAA7D;AAEA,MAAMC,cAAwB,GAAG,CAC/B,+BAD+B,EAE/B,qBAF+B,EAG/B,yBAH+B,EAI/B,2BAJ+B,EAK/B,cAL+B,EAM/B,uBAN+B,CAAjC;AASA,MAAMC,KAAK,GAAGT,cAAc,CAAC;AAC3BU,EAAAA,OAAO,EAAE;AACPL,IAAAA,WADO;AAEPD,IAAAA;AAFO,GADkB;AAK3BO,EAAAA,UAAU,EAAE,CACV,GAAGV,oBAAoB,CAAC;AAAEW,IAAAA,KAAK,EAAE;AAAT,GAAD,CADb,EAEVV,IAAI,CAAC;AAAEW,IAAAA,MAAM,EAAEL,cAAV;AAA0BM,IAAAA,SAAS,EAAE;AAArC,GAAD,CAFM,CALe;AAS3BC,EAAAA,cAAc,EAAEZ,IAAI,CAAC;AACnBU,IAAAA,MAAM,EAAEL,cADW;AAEnBM,IAAAA,SAAS,EAAE,cAFQ;AAGnBC,IAAAA,cAAc,EAAE;AACdV,MAAAA,WAAW,EAAEE;AADC;AAHG,GAAD;AATO,CAAD,CAA5B;AAkBA,eAAeE,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { save, load } from 'redux-localstorage-simple';\nimport transactions from './transactions/reducer';\nimport application, { initialState as appInitialState } from './application/reducer';\n\nconst PERSISTED_KEYS: string[] = [\n  'application.slippageTolerance',\n  'application.account',\n  'application.infoBoxList',\n  'application.acceptedTerms',\n  'transactions',\n  'application.connector',\n];\n\nconst store = configureStore({\n  reducer: {\n    application,\n    transactions,\n  },\n  middleware: [\n    ...getDefaultMiddleware({ thunk: false }),\n    save({ states: PERSISTED_KEYS, namespace: 'iron_finance' }),\n  ],\n  preloadedState: load({\n    states: PERSISTED_KEYS,\n    namespace: 'iron_finance',\n    preloadedState: {\n      application: appInitialState,\n    },\n  }),\n});\n\nexport default store;\n\nexport type AppState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}