{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3;import intervalToDuration from'date-fns/intervalToDuration';import React,{useCallback,useEffect,useState}from'react';import useInterval from'src/hooks/useInterval';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NextDrawCountdown=function NextDrawCountdown(_ref){var to=_ref.to;var _useState=useState({h:'--',m:'--',s:'--'}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var update=useCallback(function(){var now=new Date();if(to<now){setValue({h:'00',m:'00',s:'00'});return;}if(to){var duration=intervalToDuration({start:now,end:to});setValue({h:padNumber(((duration===null||duration===void 0?void 0:duration.days)||0)*24+duration.hours),m:padNumber(duration.minutes),s:padNumber(duration.seconds)});}},[to]);useEffect(function(){return update();},[update]);useInterval(update,1000);return/*#__PURE__*/_jsxs(StyledContainer,{fontSize:\"32px\",fontWeight:\"bold\",children:[/*#__PURE__*/_jsx(StyledSpan,{children:value.h}),/*#__PURE__*/_jsx(StyleSeparator,{children:\":\"}),/*#__PURE__*/_jsx(StyledSpan,{children:value.m}),/*#__PURE__*/_jsx(StyleSeparator,{children:\":\"}),/*#__PURE__*/_jsx(StyledSpan,{children:value.s})]});};var padNumber=function padNumber(s){var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;var char=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'0';var str=s.toString();return str.length>=length?str:char.repeat(length-str.length)+str;};var StyledContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  font-size: \",\";\\n  font-weight: \",\";\\n  font-family: \",\" !important;\\n  @media (max-width: 768px) {\\n   font-size: 21px;\\n  }\\n\"])),function(_ref2){var fontSize=_ref2.fontSize;return fontSize||\"28px\";},function(_ref3){var fontWeight=_ref3.fontWeight;return fontWeight||700;},function(props){return props.theme.font.heading;});var StyledSpan=styled.span(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 0 2px;\\n  min-width: 50px;\\n  text-align: center;\\n  &.extra {\\n    width: auto;\\n    margin-right: 10px;\\n  }\\n\"])));var StyleSeparator=styled.span(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 5px;\\n  min-width: 28px;\\n  text-align: center;\\n\"])));export default NextDrawCountdown;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/views/DragonBall/components/NextDrawCountdown.tsx"],"names":["intervalToDuration","React","useCallback","useEffect","useState","useInterval","styled","NextDrawCountdown","to","h","m","s","value","setValue","update","now","Date","duration","start","end","padNumber","days","hours","minutes","seconds","length","char","str","toString","repeat","StyledContainer","div","fontSize","fontWeight","props","theme","font","heading","StyledSpan","span","StyleSeparator"],"mappings":"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","sourcesContent":["import intervalToDuration from 'date-fns/intervalToDuration';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useInterval from 'src/hooks/useInterval';\nimport styled from 'styled-components';\n\nexport type NextDrawCountdownProps = {\n  to: Date;\n};\n\nconst NextDrawCountdown: React.FC<NextDrawCountdownProps> = ({ to }) => {\n  const [value, setValue] = useState({ h: '--', m: '--', s: '--' });\n  const update = useCallback(() => {\n    const now = new Date();\n\n    if (to < now) {\n      setValue({\n        h: '00',\n        m: '00',\n        s: '00',\n      });\n      return;\n    }\n\n    if (to) {\n      const duration = intervalToDuration({\n        start: now,\n        end: to,\n      });\n\n      setValue({\n        h: padNumber((duration?.days || 0) * 24 + duration.hours),\n        m: padNumber(duration.minutes),\n        s: padNumber(duration.seconds),\n      });\n    }\n  }, [to]);\n  useEffect(() => update(), [update]);\n  useInterval(update, 1000);\n\n  return (\n    <StyledContainer fontSize=\"32px\" fontWeight=\"bold\">\n      <StyledSpan>{value.h}</StyledSpan>\n      <StyleSeparator>:</StyleSeparator>\n      <StyledSpan>{value.m}</StyledSpan>\n      <StyleSeparator>:</StyleSeparator>\n      <StyledSpan>{value.s}</StyledSpan>\n    </StyledContainer>\n  );\n};\n\nconst padNumber = (s: number, length = 2, char = '0') => {\n  const str = s.toString();\n  return str.length >= length ? str : char.repeat(length - str.length) + str;\n};\n\nconst StyledContainer = styled.div<{ fontSize?: string; fontWeight?: string }>`\n  display: flex;\n  align-items: center;\n  font-size: ${({ fontSize }) => fontSize || `28px`};\n  font-weight: ${({ fontWeight }) => fontWeight || 700};\n  font-family: ${(props) => props.theme.font.heading} !important;\n  @media (max-width: 768px) {\n   font-size: 21px;\n  }\n`;\n\nconst StyledSpan = styled.span`\n  margin: 0 2px;\n  min-width: 50px;\n  text-align: center;\n  &.extra {\n    width: auto;\n    margin-right: 10px;\n  }\n`;\n\nconst StyleSeparator = styled.span`\n  margin-bottom: 5px;\n  min-width: 28px;\n  text-align: center;\n`;\n\nexport default NextDrawCountdown;\n"]},"metadata":{},"sourceType":"module"}