{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst typed_promisify_1 = require(\"typed-promisify\");\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../../types\");\n\nconst Names = require(\"./names.json\");\n\nconst Thumbnails = require(\"./thumbnails.json\");\n\nexports.EtheremonSchema = {\n  version: 2,\n  deploymentBlock: 4946456,\n  name: 'Etheremon',\n  description: 'Decentralized World of Ether Monsters',\n  thumbnail: 'https://cdn-images-1.medium.com/max/720/1*SvU1GenU55qO0eNNiTWGtA.png',\n  website: 'https://www.etheremon.com/',\n  fields: [{\n    name: 'ID',\n    type: 'uint64',\n    description: 'Etheremon ID.'\n  }],\n  assetFromFields: fields => fields.ID,\n  assetToFields: asset => ({\n    ID: asset\n  }),\n  formatter: (asset, web3) => __awaiter(this, void 0, void 0, function* () {\n    const getMonsterObjABI = {\n      'constant': true,\n      'inputs': [{\n        'name': '_objId',\n        'type': 'uint64'\n      }],\n      'name': 'getMonsterObj',\n      'outputs': [{\n        'name': 'objId',\n        'type': 'uint64'\n      }, {\n        'name': 'classId',\n        'type': 'uint32'\n      }, {\n        'name': 'trainer',\n        'type': 'address'\n      }, {\n        'name': 'exp',\n        'type': 'uint32'\n      }, {\n        'name': 'createIndex',\n        'type': 'uint32'\n      }, {\n        'name': 'lastClaimIndex',\n        'type': 'uint32'\n      }, {\n        'name': 'createTime',\n        'type': 'uint256'\n      }],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    };\n    const getMonsterNameABI = {\n      'constant': true,\n      'inputs': [{\n        'name': '_objId',\n        'type': 'uint64'\n      }],\n      'name': 'getMonsterName',\n      'outputs': [{\n        'name': 'name',\n        'type': 'string'\n      }],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    };\n    const dataContract = web3.eth.contract([getMonsterObjABI, getMonsterNameABI]).at('0xabc1c404424bdf24c19a5cc5ef8f47781d18eb3e');\n    const res = yield typed_promisify_1.promisify(dataContract.getMonsterObj.call)(asset);\n    const objId = res[0];\n    const classId = res[1];\n    const trainer = res[2];\n    const exp = res[3];\n    const createIndex = res[4];\n    const lastClaimIndex = res[5];\n    const createTime = res[6];\n    const className = Names[classId];\n    const name = yield typed_promisify_1.promisify(dataContract.getMonsterName.call)(asset);\n    return {\n      thumbnail: 'https://www.etheremon.com/' + Thumbnails[classId] + '.png',\n      title: 'Etheremon #' + asset + ' - ' + className,\n      description: 'Catch number: ' + createIndex + ', experience: ' + exp + ', nickname: ' + name,\n      url: 'https://www.etheremon.com/#/mons/' + classId,\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'freeTransferItem',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: '0x4bA72F0F8DAd13709EE28a992869E79d0fE47030',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_objId',\n        type: 'uint64',\n        value: asset\n      }, {\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: '_receiver',\n        type: 'address'\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'getMonsterObj',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: '0xabc1c404424bdf24c19a5cc5ef8f47781d18eb3e',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_objId',\n        type: 'uint64',\n        value: asset\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Other,\n        name: 'objId',\n        type: 'uint64'\n      }, {\n        kind: types_1.FunctionOutputKind.Other,\n        name: 'classId',\n        type: 'uint32'\n      }, {\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'trainer',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionOutputKind.Other,\n        name: 'exp',\n        type: 'uint32'\n      }, {\n        kind: types_1.FunctionOutputKind.Other,\n        name: 'createIndex',\n        type: 'uint32'\n      }, {\n        kind: types_1.FunctionOutputKind.Other,\n        name: 'lastClaimIndex',\n        type: 'uint32'\n      }, {\n        kind: types_1.FunctionOutputKind.Other,\n        name: 'createTime',\n        type: 'uint'\n      }]\n    }),\n    assetsOfOwnerByIndex: [{\n      type: Web3.AbiType.Function,\n      name: 'getMonsterObjId',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: '0xabc1c404424bdf24c19a5cc5ef8f47781d18eb3e',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Owner,\n        name: '_trainer',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Index,\n        name: 'index',\n        type: 'uint256'\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Asset,\n        name: '',\n        type: 'uint64'\n      }],\n      assetFromOutputs: output => {\n        const str = output.toString();\n\n        if (str === '0') {\n          return null;\n        } else {\n          return str;\n        }\n      }\n    }]\n  },\n  events: {\n    transfer: [{\n      type: Web3.AbiType.Event,\n      name: 'EventFreeTransferItem',\n      target: '0x4bA72F0F8DAd13709EE28a992869E79d0fE47030',\n      anonymous: false,\n      inputs: [{\n        kind: types_1.EventInputKind.Source,\n        indexed: true,\n        name: 'sender',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Destination,\n        indexed: true,\n        name: 'receiver',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Asset,\n        indexed: false,\n        name: 'objId',\n        type: 'uint64'\n      }],\n      assetFromInputs: inputs => __awaiter(this, void 0, void 0, function* () {\n        return inputs.objId;\n      })\n    }]\n  },\n  hash: a => a\n};","map":{"version":3,"sources":["../../../../src/schemas/main/Etheremon/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAQA,MAAA,KAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAIa,OAAA,CAAA,eAAA,GAAyC;AACpD,EAAA,OAAO,EAAE,CAD2C;AAEpD,EAAA,eAAe,EAAE,OAFmC;AAGpD,EAAA,IAAI,EAAE,WAH8C;AAIpD,EAAA,WAAW,EAAE,uCAJuC;AAKpD,EAAA,SAAS,EAAE,sEALyC;AAMpD,EAAA,OAAO,EAAE,4BAN2C;AAOpD,EAAA,MAAM,EAAE,CACN;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,IAAI,EAAE,QAAnB;AAA6B,IAAA,WAAW,EAAE;AAA1C,GADM,CAP4C;AAUpD,EAAA,eAAe,EAAG,MAAD,IAAiB,MAAM,CAAC,EAVW;AAWpD,EAAA,aAAa,EAAE,KAAK,KAAK;AAAC,IAAA,EAAE,EAAE;AAAL,GAAL,CAXgC;AAYpD,EAAA,SAAS,EACP,CAAO,KAAP,EAAc,IAAd,KAAsB,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACpB,UAAM,gBAAgB,GAAG;AAAC,kBAAY,IAAb;AAAmB,gBAAU,CAAC;AAAC,gBAAQ,QAAT;AAAmB,gBAAQ;AAA3B,OAAD,CAA7B;AAAqE,cAAQ,eAA7E;AAA8F,iBAAW,CAAC;AAAC,gBAAQ,OAAT;AAAkB,gBAAQ;AAA1B,OAAD,EAAsC;AAAC,gBAAQ,SAAT;AAAoB,gBAAQ;AAA5B,OAAtC,EAA6E;AAAC,gBAAQ,SAAT;AAAoB,gBAAQ;AAA5B,OAA7E,EAAqH;AAAC,gBAAQ,KAAT;AAAgB,gBAAQ;AAAxB,OAArH,EAAwJ;AAAC,gBAAQ,aAAT;AAAwB,gBAAQ;AAAhC,OAAxJ,EAAmM;AAAC,gBAAQ,gBAAT;AAA2B,gBAAQ;AAAnC,OAAnM,EAAiP;AAAC,gBAAQ,YAAT;AAAuB,gBAAQ;AAA/B,OAAjP,CAAzG;AAAsY,iBAAW,KAAjZ;AAAwZ,yBAAmB,MAA3a;AAAmb,cAAQ;AAA3b,KAAzB;AACA,UAAM,iBAAiB,GAAG;AAAC,kBAAY,IAAb;AAAmB,gBAAU,CAAC;AAAC,gBAAQ,QAAT;AAAmB,gBAAQ;AAA3B,OAAD,CAA7B;AAAqE,cAAQ,gBAA7E;AAA+F,iBAAW,CAAC;AAAC,gBAAQ,MAAT;AAAiB,gBAAQ;AAAzB,OAAD,CAA1G;AAAgJ,iBAAW,KAA3J;AAAkK,yBAAmB,MAArL;AAA6L,cAAQ;AAArM,KAA1B;AACA,UAAM,YAAY,GAAG,IAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,CAAC,gBAAD,EAAmB,iBAAnB,CAAlB,EAAyD,EAAzD,CAA4D,4CAA5D,CAArB;AACA,UAAM,GAAG,GAAQ,MAAO,iBAAA,CAAA,SAAA,CAAU,YAAY,CAAC,aAAb,CAA2B,IAArC,EAAmD,KAAnD,CAAxB;AACA,UAAM,KAAK,GAAG,GAAG,CAAC,CAAD,CAAjB;AACA,UAAM,OAAO,GAAG,GAAG,CAAC,CAAD,CAAnB;AACA,UAAM,OAAO,GAAG,GAAG,CAAC,CAAD,CAAnB;AACA,UAAM,GAAG,GAAG,GAAG,CAAC,CAAD,CAAf;AACA,UAAM,WAAW,GAAG,GAAG,CAAC,CAAD,CAAvB;AACA,UAAM,cAAc,GAAG,GAAG,CAAC,CAAD,CAA1B;AACA,UAAM,UAAU,GAAG,GAAG,CAAC,CAAD,CAAtB;AACA,UAAM,SAAS,GAAI,KAAa,CAAC,OAAD,CAAhC;AACA,UAAM,IAAI,GAAQ,MAAO,iBAAA,CAAA,SAAA,CAAU,YAAY,CAAC,cAAb,CAA4B,IAAtC,EAAoD,KAApD,CAAzB;AACA,WAAO;AACL,MAAA,SAAS,EAAE,+BAAgC,UAAkB,CAAC,OAAD,CAAlD,GAA8D,MADpE;AAEL,MAAA,KAAK,EAAE,gBAAgB,KAAhB,GAAwB,KAAxB,GAAgC,SAFlC;AAGL,MAAA,WAAW,EAAE,mBAAmB,WAAnB,GAAiC,gBAAjC,GAAoD,GAApD,GAA0D,cAA1D,GAA2E,IAHnF;AAIL,MAAA,GAAG,EAAE,sCAAsC,OAJtC;AAKL,MAAA,UAAU,EAAE;AALP,KAAP;AAOD,GArBqB,CAb4B;AAmCpD,EAAA,SAAS,EAAE;AACT,IAAA,QAAQ,EAAE,KAAK,KAAK;AAClB,MAAA,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADD;AAElB,MAAA,IAAI,EAAE,kBAFY;AAGlB,MAAA,OAAO,EAAE,KAHS;AAIlB,MAAA,QAAQ,EAAE,KAJQ;AAKlB,MAAA,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,UALf;AAMlB,MAAA,MAAM,EAAE,4CANU;AAOlB,MAAA,MAAM,EAAE,CACN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KAAzB;AAAgC,QAAA,IAAI,EAAE,QAAtC;AAAgD,QAAA,IAAI,EAAE,QAAtD;AAAgE,QAAA,KAAK,EAAE;AAAvE,OADM,EAEN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,WAAzB;AAAsC,QAAA,IAAI,EAAE,WAA5C;AAAyD,QAAA,IAAI,EAAE;AAA/D,OAFM,CAPU;AAWlB,MAAA,OAAO,EAAE;AAXS,KAAL,CADN;AAcT,IAAA,OAAO,EAAE,KAAK,KAAK;AACjB,MAAA,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADF;AAEjB,MAAA,IAAI,EAAE,eAFW;AAGjB,MAAA,OAAO,EAAE,KAHQ;AAIjB,MAAA,QAAQ,EAAE,IAJO;AAKjB,MAAA,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,IALhB;AAMjB,MAAA,MAAM,EAAE,4CANS;AAOjB,MAAA,MAAM,EAAE,CACN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KAAzB;AAAgC,QAAA,IAAI,EAAE,QAAtC;AAAgD,QAAA,IAAI,EAAE,QAAtD;AAAgE,QAAA,KAAK,EAAE;AAAvE,OADM,CAPS;AAUjB,MAAA,OAAO,EAAE,CACP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,OAAvC;AAAgD,QAAA,IAAI,EAAE;AAAtD,OADO,EAEP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,SAAvC;AAAkD,QAAA,IAAI,EAAE;AAAxD,OAFO,EAGP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,SAAvC;AAAkD,QAAA,IAAI,EAAE;AAAxD,OAHO,EAIP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,KAAvC;AAA8C,QAAA,IAAI,EAAE;AAApD,OAJO,EAKP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,aAAvC;AAAsD,QAAA,IAAI,EAAE;AAA5D,OALO,EAMP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,gBAAvC;AAAyD,QAAA,IAAI,EAAE;AAA/D,OANO,EAOP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,YAAvC;AAAqD,QAAA,IAAI,EAAE;AAA3D,OAPO;AAVQ,KAAL,CAdL;AAkCT,IAAA,oBAAoB,EAAE,CAAC;AACrB,MAAA,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADE;AAErB,MAAA,IAAI,EAAE,iBAFe;AAGrB,MAAA,OAAO,EAAE,KAHY;AAIrB,MAAA,QAAQ,EAAE,IAJW;AAKrB,MAAA,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,IALZ;AAMrB,MAAA,MAAM,EAAE,4CANa;AAOrB,MAAA,MAAM,EAAE,CACN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KAAzB;AAAgC,QAAA,IAAI,EAAE,UAAtC;AAAkD,QAAA,IAAI,EAAE;AAAxD,OADM,EAEN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KAAzB;AAAgC,QAAA,IAAI,EAAE,OAAtC;AAA+C,QAAA,IAAI,EAAE;AAArD,OAFM,CAPa;AAWrB,MAAA,OAAO,EAAE,CACP;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;AAAiC,QAAA,IAAI,EAAE,EAAvC;AAA2C,QAAA,IAAI,EAAE;AAAjD,OADO,CAXY;AAcrB,MAAA,gBAAgB,EAAG,MAAD,IAAgB;AAChC,cAAM,GAAG,GAAG,MAAM,CAAC,QAAP,EAAZ;;AACA,YAAI,GAAG,KAAK,GAAZ,EAAiB;AACf,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,GAAP;AACD;AACF;AArBoB,KAAD;AAlCb,GAnCyC;AA6FpD,EAAA,MAAM,EAAE;AACN,IAAA,QAAQ,EAAE,CAAC;AACT,MAAA,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,KADV;AAET,MAAA,IAAI,EAAE,uBAFG;AAGT,MAAA,MAAM,EAAE,4CAHC;AAIT,MAAA,SAAS,EAAE,KAJF;AAKT,MAAA,MAAM,EAAE,CACN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,cAAA,CAAe,MAAtB;AAA8B,QAAA,OAAO,EAAE,IAAvC;AAA6C,QAAA,IAAI,EAAE,QAAnD;AAA6D,QAAA,IAAI,EAAE;AAAnE,OADM,EAEN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,cAAA,CAAe,WAAtB;AAAmC,QAAA,OAAO,EAAE,IAA5C;AAAkD,QAAA,IAAI,EAAE,UAAxD;AAAoE,QAAA,IAAI,EAAE;AAA1E,OAFM,EAGN;AAAC,QAAA,IAAI,EAAE,OAAA,CAAA,cAAA,CAAe,KAAtB;AAA6B,QAAA,OAAO,EAAE,KAAtC;AAA6C,QAAA,IAAI,EAAE,OAAnD;AAA4D,QAAA,IAAI,EAAE;AAAlE,OAHM,CALC;AAUT,MAAA,eAAe,EAAS,MAAP,IAAsB,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAAC,eAAA,MAAM,CAAC,KAAP;AAAY,OAAb;AAV9B,KAAD;AADJ,GA7F4C;AA2GpD,EAAA,IAAI,EAAE,CAAC,IAAI;AA3GyC,CAAzC","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typed_promisify_1 = require(\"typed-promisify\");\nconst Web3 = require(\"web3\");\nconst types_1 = require(\"../../../types\");\nconst Names = require(\"./names.json\");\nconst Thumbnails = require(\"./thumbnails.json\");\nexports.EtheremonSchema = {\n    version: 2,\n    deploymentBlock: 4946456,\n    name: 'Etheremon',\n    description: 'Decentralized World of Ether Monsters',\n    thumbnail: 'https://cdn-images-1.medium.com/max/720/1*SvU1GenU55qO0eNNiTWGtA.png',\n    website: 'https://www.etheremon.com/',\n    fields: [\n        { name: 'ID', type: 'uint64', description: 'Etheremon ID.' },\n    ],\n    assetFromFields: (fields) => fields.ID,\n    assetToFields: asset => ({ ID: asset }),\n    formatter: (asset, web3) => __awaiter(this, void 0, void 0, function* () {\n        const getMonsterObjABI = { 'constant': true, 'inputs': [{ 'name': '_objId', 'type': 'uint64' }], 'name': 'getMonsterObj', 'outputs': [{ 'name': 'objId', 'type': 'uint64' }, { 'name': 'classId', 'type': 'uint32' }, { 'name': 'trainer', 'type': 'address' }, { 'name': 'exp', 'type': 'uint32' }, { 'name': 'createIndex', 'type': 'uint32' }, { 'name': 'lastClaimIndex', 'type': 'uint32' }, { 'name': 'createTime', 'type': 'uint256' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n        const getMonsterNameABI = { 'constant': true, 'inputs': [{ 'name': '_objId', 'type': 'uint64' }], 'name': 'getMonsterName', 'outputs': [{ 'name': 'name', 'type': 'string' }], 'payable': false, 'stateMutability': 'view', 'type': 'function' };\n        const dataContract = web3.eth.contract([getMonsterObjABI, getMonsterNameABI]).at('0xabc1c404424bdf24c19a5cc5ef8f47781d18eb3e');\n        const res = yield typed_promisify_1.promisify(dataContract.getMonsterObj.call)(asset);\n        const objId = res[0];\n        const classId = res[1];\n        const trainer = res[2];\n        const exp = res[3];\n        const createIndex = res[4];\n        const lastClaimIndex = res[5];\n        const createTime = res[6];\n        const className = Names[classId];\n        const name = yield typed_promisify_1.promisify(dataContract.getMonsterName.call)(asset);\n        return {\n            thumbnail: 'https://www.etheremon.com/' + Thumbnails[classId] + '.png',\n            title: 'Etheremon #' + asset + ' - ' + className,\n            description: 'Catch number: ' + createIndex + ', experience: ' + exp + ', nickname: ' + name,\n            url: 'https://www.etheremon.com/#/mons/' + classId,\n            properties: [],\n        };\n    }),\n    functions: {\n        transfer: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'freeTransferItem',\n            payable: false,\n            constant: false,\n            stateMutability: types_1.StateMutability.Nonpayable,\n            target: '0x4bA72F0F8DAd13709EE28a992869E79d0fE47030',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_objId', type: 'uint64', value: asset },\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_receiver', type: 'address' },\n            ],\n            outputs: [],\n        }),\n        ownerOf: asset => ({\n            type: Web3.AbiType.Function,\n            name: 'getMonsterObj',\n            payable: false,\n            constant: true,\n            stateMutability: types_1.StateMutability.View,\n            target: '0xabc1c404424bdf24c19a5cc5ef8f47781d18eb3e',\n            inputs: [\n                { kind: types_1.FunctionInputKind.Asset, name: '_objId', type: 'uint64', value: asset },\n            ],\n            outputs: [\n                { kind: types_1.FunctionOutputKind.Other, name: 'objId', type: 'uint64' },\n                { kind: types_1.FunctionOutputKind.Other, name: 'classId', type: 'uint32' },\n                { kind: types_1.FunctionOutputKind.Owner, name: 'trainer', type: 'address' },\n                { kind: types_1.FunctionOutputKind.Other, name: 'exp', type: 'uint32' },\n                { kind: types_1.FunctionOutputKind.Other, name: 'createIndex', type: 'uint32' },\n                { kind: types_1.FunctionOutputKind.Other, name: 'lastClaimIndex', type: 'uint32' },\n                { kind: types_1.FunctionOutputKind.Other, name: 'createTime', type: 'uint' },\n            ],\n        }),\n        assetsOfOwnerByIndex: [{\n                type: Web3.AbiType.Function,\n                name: 'getMonsterObjId',\n                payable: false,\n                constant: true,\n                stateMutability: types_1.StateMutability.View,\n                target: '0xabc1c404424bdf24c19a5cc5ef8f47781d18eb3e',\n                inputs: [\n                    { kind: types_1.FunctionInputKind.Owner, name: '_trainer', type: 'address' },\n                    { kind: types_1.FunctionInputKind.Index, name: 'index', type: 'uint256' },\n                ],\n                outputs: [\n                    { kind: types_1.FunctionOutputKind.Asset, name: '', type: 'uint64' },\n                ],\n                assetFromOutputs: (output) => {\n                    const str = output.toString();\n                    if (str === '0') {\n                        return null;\n                    }\n                    else {\n                        return str;\n                    }\n                },\n            }],\n    },\n    events: {\n        transfer: [{\n                type: Web3.AbiType.Event,\n                name: 'EventFreeTransferItem',\n                target: '0x4bA72F0F8DAd13709EE28a992869E79d0fE47030',\n                anonymous: false,\n                inputs: [\n                    { kind: types_1.EventInputKind.Source, indexed: true, name: 'sender', type: 'address' },\n                    { kind: types_1.EventInputKind.Destination, indexed: true, name: 'receiver', type: 'address' },\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'objId', type: 'uint64' },\n                ],\n                assetFromInputs: (inputs) => __awaiter(this, void 0, void 0, function* () { return inputs.objId; }),\n            }],\n    },\n    hash: a => a,\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}