{"ast":null,"code":"import styled from 'styled-components';\nimport { mediaQueries, AllBreakpoints } from 'src/theme';\n\n// const sizes: BreakPoints[] = ['sm', 'md', 'lg', 'xl'];\nconst generate = props => {\n  return AllBreakpoints.filter(size => !!props[size]).map(size => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const percent = props[size] / 12 * 100 + '% !important;';\n    return mediaQueries(size)('width: ' + percent);\n  });\n};\n\nexport const Col = styled.div`\n  width: 100%;\n  ${p => {\n  return generate(p);\n}}\n`;\nexport const Row = styled.div`\n  display: flex;\n  margin-left: -${p => p.gutter || '15px'};\n  margin-right: -${p => p.gutter || '15px'};\n  flex-wrap: wrap;\n\n  ${Col} {\n    padding: 0 ${p => p.gutter || '15px'};\n  }\n`;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/BabyPepe/src/components/Layout/index.tsx"],"names":["styled","mediaQueries","AllBreakpoints","generate","props","filter","size","map","percent","Col","div","p","Row","gutter"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAAsBC,YAAtB,EAAoCC,cAApC,QAA0D,WAA1D;;AAIA;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAqB;AACpC,SAAOF,cAAc,CAACG,MAAf,CAAuBC,IAAD,IAAU,CAAC,CAACF,KAAK,CAACE,IAAD,CAAvC,EAA+CC,GAA/C,CAAoDD,IAAD,IAAU;AAClE;AACA,UAAME,OAAO,GAAIJ,KAAK,CAACE,IAAD,CAAL,GAAe,EAAhB,GAAsB,GAAtB,GAA4B,eAA5C;AACA,WAAOL,YAAY,CAACK,IAAD,CAAZ,CAAkC,YAAYE,OAA9C,CAAP;AACD,GAJM,CAAP;AAKD,CAND;;AAQA,OAAO,MAAMC,GAAG,GAAGT,MAAM,CAACU,GAAc;AACxC;AACA,IAAKC,CAAD,IAAO;AACP,SAAOR,QAAQ,CAACQ,CAAD,CAAf;AACD,CAAC;AACJ,CALO;AAOP,OAAO,MAAMC,GAAG,GAAGZ,MAAM,CAACU,GAAyB;AACnD;AACA,kBAAmBC,CAAD,IAAOA,CAAC,CAACE,MAAF,IAAY,MAAO;AAC5C,mBAAoBF,CAAD,IAAOA,CAAC,CAACE,MAAF,IAAY,MAAO;AAC7C;AACA;AACA,IAAIJ,GAAI;AACR,iBAAkBE,CAAD,IAAOA,CAAC,CAACE,MAAF,IAAY,MAAO;AAC3C;AACA,CATO","sourcesContent":["import styled from 'styled-components';\nimport { BreakPoints, mediaQueries, AllBreakpoints } from 'src/theme';\n\ntype ColProps = Partial<Record<BreakPoints, number>>;\n\n// const sizes: BreakPoints[] = ['sm', 'md', 'lg', 'xl'];\n\nconst generate = (props: ColProps) => {\n  return AllBreakpoints.filter((size) => !!props[size]).map((size) => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const percent = (props[size]! / 12) * 100 + '% !important;';\n    return mediaQueries(size as BreakPoints)('width: ' + percent);\n  });\n};\n\nexport const Col = styled.div<ColProps>`\n  width: 100%;\n  ${(p) => {\n    return generate(p);\n  }}\n`;\n\nexport const Row = styled.div<{ gutter?: string }>`\n  display: flex;\n  margin-left: -${(p) => p.gutter || '15px'};\n  margin-right: -${(p) => p.gutter || '15px'};\n  flex-wrap: wrap;\n\n  ${Col} {\n    padding: 0 ${(p) => p.gutter || '15px'};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}