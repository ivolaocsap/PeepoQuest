{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\n\nconst useRoundInfo = lotteryId => {\n  _s();\n\n  const dh = useDiamondHand();\n  const [lotteryInfo, setLotteryInfo] = useState(undefined);\n  useEffect(() => {\n    let mounted = true;\n\n    if (!dh || !lotteryId || lotteryId === 0) {\n      return;\n    }\n\n    Promise.all([dh === null || dh === void 0 ? void 0 : dh.LOTTERY.getBasicLottoInfo(lotteryId), dh === null || dh === void 0 ? void 0 : dh.TICKET.getNumberOfTickets(BigNumber.from(lotteryId))]).then(([lottoRawInfo, numberOfTickets]) => {\n      if (!mounted) {\n        return;\n      }\n\n      setLotteryInfo({\n        lotteryId: lottoRawInfo.lotteryID,\n        lotteryStatus: lottoRawInfo.lotteryStatus,\n        prizePool: lottoRawInfo.prizePool,\n        costPerTicket: lottoRawInfo.costPerTicket,\n        prizeDistribution: lottoRawInfo.prizeDistribution,\n        startingTimestamp: lottoRawInfo.startingTimestamp,\n        closingTimestamp: lottoRawInfo.closingTimestamp,\n        winningNumbers: lottoRawInfo.winningNumbers,\n        winners: lottoRawInfo.winners,\n        numberOfTickets,\n        prizes: lottoRawInfo.prizes\n      });\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [dh, lotteryId]);\n  return lotteryInfo;\n};\n\n_s(useRoundInfo, \"ERq71UrZiu6OBoDF8fY6T5iP970=\", false, function () {\n  return [useDiamondHand];\n});\n\nexport default useRoundInfo;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/BabyPepe/src/views/TicketDetail/hooks/useRoundInfo.ts"],"names":["useEffect","useState","BigNumber","useDiamondHand","useRoundInfo","lotteryId","dh","lotteryInfo","setLotteryInfo","undefined","mounted","Promise","all","LOTTERY","getBasicLottoInfo","TICKET","getNumberOfTickets","from","then","lottoRawInfo","numberOfTickets","lotteryID","lotteryStatus","prizePool","costPerTicket","prizeDistribution","startingTimestamp","closingTimestamp","winningNumbers","winners","prizes"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,MAAMC,YAAY,GAAIC,SAAD,IAAwB;AAAA;;AAC3C,QAAMC,EAAE,GAAGH,cAAc,EAAzB;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAcQ,SAAd,CAA9C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,GAAG,IAAd;;AACA,QAAI,CAACJ,EAAD,IAAO,CAACD,SAAR,IAAqBA,SAAS,KAAK,CAAvC,EAA0C;AACxC;AACD;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,CACVN,EADU,aACVA,EADU,uBACVA,EAAE,CAAEO,OAAJ,CAAYC,iBAAZ,CAA8BT,SAA9B,CADU,EAEVC,EAFU,aAEVA,EAFU,uBAEVA,EAAE,CAAES,MAAJ,CAAWC,kBAAX,CAA8Bd,SAAS,CAACe,IAAV,CAAeZ,SAAf,CAA9B,CAFU,CAAZ,EAGGa,IAHH,CAGQ,CAAC,CAACC,YAAD,EAAeC,eAAf,CAAD,KAAqC;AAC3C,UAAI,CAACV,OAAL,EAAc;AACZ;AACD;;AACDF,MAAAA,cAAc,CAAC;AACbH,QAAAA,SAAS,EAAEc,YAAY,CAACE,SADX;AAEbC,QAAAA,aAAa,EAAEH,YAAY,CAACG,aAFf;AAGbC,QAAAA,SAAS,EAAEJ,YAAY,CAACI,SAHX;AAIbC,QAAAA,aAAa,EAAEL,YAAY,CAACK,aAJf;AAKbC,QAAAA,iBAAiB,EAAEN,YAAY,CAACM,iBALnB;AAMbC,QAAAA,iBAAiB,EAAEP,YAAY,CAACO,iBANnB;AAObC,QAAAA,gBAAgB,EAAER,YAAY,CAACQ,gBAPlB;AAQbC,QAAAA,cAAc,EAAET,YAAY,CAACS,cARhB;AASbC,QAAAA,OAAO,EAAEV,YAAY,CAACU,OATT;AAUbT,QAAAA,eAVa;AAWbU,QAAAA,MAAM,EAAEX,YAAY,CAACW;AAXR,OAAD,CAAd;AAaD,KApBD;AAqBA,WAAO,MAAM;AACXpB,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GA7BQ,EA6BN,CAACJ,EAAD,EAAKD,SAAL,CA7BM,CAAT;AA+BA,SAAOE,WAAP;AACD,CApCD;;GAAMH,Y;UACOD,c;;;AAqCb,eAAeC,YAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { LotteryInfo } from 'src/diamondhand/Lottery';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport useDiamondHand from 'src/hooks/useDiamondHand';\n\nconst useRoundInfo = (lotteryId?: number) => {\n  const dh = useDiamondHand();\n  const [lotteryInfo, setLotteryInfo] = useState<LotteryInfo>(undefined);\n\n  useEffect(() => {\n    let mounted = true;\n    if (!dh || !lotteryId || lotteryId === 0) {\n      return;\n    }\n    Promise.all([\n      dh?.LOTTERY.getBasicLottoInfo(lotteryId),\n      dh?.TICKET.getNumberOfTickets(BigNumber.from(lotteryId)),\n    ]).then(([lottoRawInfo, numberOfTickets]) => {\n      if (!mounted) {\n        return;\n      }\n      setLotteryInfo({\n        lotteryId: lottoRawInfo.lotteryID,\n        lotteryStatus: lottoRawInfo.lotteryStatus,\n        prizePool: lottoRawInfo.prizePool,\n        costPerTicket: lottoRawInfo.costPerTicket,\n        prizeDistribution: lottoRawInfo.prizeDistribution,\n        startingTimestamp: lottoRawInfo.startingTimestamp,\n        closingTimestamp: lottoRawInfo.closingTimestamp,\n        winningNumbers: lottoRawInfo.winningNumbers,\n        winners: lottoRawInfo.winners,\n        numberOfTickets,\n        prizes: lottoRawInfo.prizes,\n      });\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [dh, lotteryId]);\n\n  return lotteryInfo;\n};\n\nexport default useRoundInfo;\n"]},"metadata":{},"sourceType":"module"}