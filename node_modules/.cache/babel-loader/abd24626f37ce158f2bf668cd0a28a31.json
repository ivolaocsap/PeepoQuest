{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{BigNumber}from'@ethersproject/bignumber';import{MaxUint256}from'@ethersproject/constants';import{useCallback,useMemo,useState}from'react';import{useHasPendingApproval}from'../state/transactions/hooks';import useAllowance from'./useAllowance';import useHandleTransactionReceipt from'./useHandleTransactionReceipt';var APPROVE_AMOUNT=MaxUint256;var APPROVE_BASE_AMOUNT=BigNumber.from('1000000000000000000000000');export var ApprovalState;// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function(ApprovalState){ApprovalState[ApprovalState[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApprovalState[ApprovalState[\"NOT_APPROVED\"]=1]=\"NOT_APPROVED\";ApprovalState[ApprovalState[\"PENDING\"]=2]=\"PENDING\";ApprovalState[ApprovalState[\"APPROVED\"]=3]=\"APPROVED\";})(ApprovalState||(ApprovalState={}));function useApprove(token,spender){var pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);var _useAllowance=useAllowance(token,spender,pendingApproval),currentAllowance=_useAllowance.allowance,refreshAllowance=_useAllowance.fetchAllowance;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),approvalRequested=_useState2[0],setApprovalRequested=_useState2[1];// check the current approval status\nvar approvalState=useMemo(function(){if(!currentAllowance){return ApprovalState.UNKNOWN;}if(approvalRequested){return pendingApproval?ApprovalState.PENDING:ApprovalState.APPROVED;}// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lt(APPROVE_BASE_AMOUNT)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[approvalRequested,currentAllowance,pendingApproval]);var handleTransactionReceipt=useHandleTransactionReceipt();var approve=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(spender,approvalState);if(!(approvalState===ApprovalState.PENDING||approvalState===ApprovalState.APPROVED)){_context.next=4;break;}console.error('approve was called unnecessarily');return _context.abrupt(\"return\");case 4:_context.prev=4;_context.next=7;return handleTransactionReceipt(token.approve(spender,APPROVE_AMOUNT),\"Approve \".concat(token.symbol),{approval:{spender:spender,tokenAddress:token.address}});case 7:setApprovalRequested(true);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](4);setApprovalRequested(false);case 13:case\"end\":return _context.stop();}}},_callee,null,[[4,10]]);})),[approvalState,handleTransactionReceipt,token,spender]);var refresh=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return refreshAllowance();case 2:case\"end\":return _context2.stop();}}},_callee2);})),[refreshAllowance]);return[approvalState,approve,refresh];}export default useApprove;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/hooks/useApprove.ts"],"names":["BigNumber","MaxUint256","useCallback","useMemo","useState","useHasPendingApproval","useAllowance","useHandleTransactionReceipt","APPROVE_AMOUNT","APPROVE_BASE_AMOUNT","from","ApprovalState","useApprove","token","spender","pendingApproval","address","currentAllowance","allowance","refreshAllowance","fetchAllowance","approvalRequested","setApprovalRequested","approvalState","UNKNOWN","PENDING","APPROVED","lt","NOT_APPROVED","handleTransactionReceipt","approve","console","log","error","symbol","approval","tokenAddress","refresh"],"mappings":"qcAAA,OAASA,SAAT,KAA0B,0BAA1B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,WAAT,CAAsBC,OAAtB,CAA+BC,QAA/B,KAA+C,OAA/C,CAEA,OAASC,qBAAT,KAAsC,6BAAtC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,2BAAP,KAAwC,+BAAxC,CAEA,GAAMC,CAAAA,cAAc,CAAGP,UAAvB,CACA,GAAMQ,CAAAA,mBAAmB,CAAGT,SAAS,CAACU,IAAV,CAAe,2BAAf,CAA5B,CAEA,UAAYC,CAAAA,aAAZ,CAOA;UAPYA,a,EAAAA,a,CAAAA,a,yBAAAA,a,CAAAA,a,mCAAAA,a,CAAAA,a,yBAAAA,a,CAAAA,a,8BAAAA,a,GAAAA,a,MAQZ,QAASC,CAAAA,UAAT,CACEC,KADF,CAEEC,OAFF,CAG6D,CAC3D,GAAMC,CAAAA,eAAe,CAAGV,qBAAqB,CAACQ,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEG,OAAR,CAAiBF,OAAjB,CAA7C,CACA,kBAA0ER,YAAY,CACpFO,KADoF,CAEpFC,OAFoF,CAGpFC,eAHoF,CAAtF,CAAmBE,gBAAnB,eAAQC,SAAR,CAAqDC,gBAArD,eAAqCC,cAArC,CAKA,cAAkDhB,QAAQ,CAAC,KAAD,CAA1D,wCAAOiB,iBAAP,eAA0BC,oBAA1B,eAEA;AACA,GAAMC,CAAAA,aAA4B,CAAGpB,OAAO,CAAC,UAAM,CACjD,GAAI,CAACc,gBAAL,CAAuB,CACrB,MAAON,CAAAA,aAAa,CAACa,OAArB,CACD,CAED,GAAIH,iBAAJ,CAAuB,CACrB,MAAON,CAAAA,eAAe,CAAGJ,aAAa,CAACc,OAAjB,CAA2Bd,aAAa,CAACe,QAA/D,CACD,CAED;AACA,MAAOT,CAAAA,gBAAgB,CAACU,EAAjB,CAAoBlB,mBAApB,EACHM,eAAe,CACbJ,aAAa,CAACc,OADD,CAEbd,aAAa,CAACiB,YAHb,CAIHjB,aAAa,CAACe,QAJlB,CAKD,CAf2C,CAezC,CAACL,iBAAD,CAAoBJ,gBAApB,CAAsCF,eAAtC,CAfyC,CAA5C,CAiBA,GAAMc,CAAAA,wBAAwB,CAAGtB,2BAA2B,EAA5D,CAEA,GAAMuB,CAAAA,OAAO,CAAG5B,WAAW,sEAAC,mIAC1B6B,OAAO,CAACC,GAAR,CAAYlB,OAAZ,CAAqBS,aAArB,EAD0B,KAEtBA,aAAa,GAAKZ,aAAa,CAACc,OAAhC,EAA2CF,aAAa,GAAKZ,aAAa,CAACe,QAFrD,0BAGxBK,OAAO,CAACE,KAAR,CAAc,kCAAd,EAHwB,8EAOlBJ,CAAAA,wBAAwB,CAC5BhB,KAAK,CAACiB,OAAN,CAAchB,OAAd,CAAuBN,cAAvB,CAD4B,mBAEjBK,KAAK,CAACqB,MAFW,EAG5B,CACEC,QAAQ,CAAE,CACRrB,OAAO,CAAEA,OADD,CAERsB,YAAY,CAAEvB,KAAK,CAACG,OAFZ,CADZ,CAH4B,CAPN,QAiBxBM,oBAAoB,CAAC,IAAD,CAApB,CAjBwB,iFAmBxBA,oBAAoB,CAAC,KAAD,CAApB,CAnBwB,qEAAD,GAqBxB,CAACC,aAAD,CAAgBM,wBAAhB,CAA0ChB,KAA1C,CAAiDC,OAAjD,CArBwB,CAA3B,CAuBA,GAAMuB,CAAAA,OAAO,CAAGnC,WAAW,sEAAC,+JACpBiB,CAAAA,gBAAgB,EADI,yDAAD,GAExB,CAACA,gBAAD,CAFwB,CAA3B,CAIA,MAAO,CAACI,aAAD,CAAgBO,OAAhB,CAAyBO,OAAzB,CAAP,CACD,CAED,cAAezB,CAAAA,UAAf","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport { MaxUint256 } from '@ethersproject/constants';\nimport { useCallback, useMemo, useState } from 'react';\nimport ERC20 from '../diamondhand/ERC20';\nimport { useHasPendingApproval } from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst APPROVE_AMOUNT = MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApprove(\n  token: ERC20,\n  spender: string,\n): [ApprovalState, () => Promise<void>, () => Promise<void>] {\n  const pendingApproval = useHasPendingApproval(token?.address, spender);\n  const { allowance: currentAllowance, fetchAllowance: refreshAllowance } = useAllowance(\n    token,\n    spender,\n    pendingApproval,\n  );\n  const [approvalRequested, setApprovalRequested] = useState(false);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!currentAllowance) {\n      return ApprovalState.UNKNOWN;\n    }\n\n    if (approvalRequested) {\n      return pendingApproval ? ApprovalState.PENDING : ApprovalState.APPROVED;\n    }\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [approvalRequested, currentAllowance, pendingApproval]);\n\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const approve = useCallback(async (): Promise<void> => {\n    console.log(spender, approvalState);\n    if (approvalState === ApprovalState.PENDING || approvalState === ApprovalState.APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n    try {\n      await handleTransactionReceipt(\n        token.approve(spender, APPROVE_AMOUNT),\n        `Approve ${token.symbol}`,\n        {\n          approval: {\n            spender: spender,\n            tokenAddress: token.address,\n          },\n        },\n      );\n      setApprovalRequested(true);\n    } catch {\n      setApprovalRequested(false);\n    }\n  }, [approvalState, handleTransactionReceipt, token, spender]);\n\n  const refresh = useCallback(async () => {\n    await refreshAllowance();\n  }, [refreshAllowance]);\n\n  return [approvalState, approve, refresh];\n}\n\nexport default useApprove;\n"]},"metadata":{},"sourceType":"module"}