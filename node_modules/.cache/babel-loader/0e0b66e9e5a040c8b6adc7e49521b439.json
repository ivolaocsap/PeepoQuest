{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\n\nconst useAllowance = (token, spender, pendingApproval) => {\n  _s();\n\n  const [allowance, setAllowance] = useState(null);\n  const {\n    account\n  } = useWeb3React();\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token, setAllowance]);\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch(err => console.warn(`Failed to fetch allowance: ${err.stack}`));\n    }\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\n  return {\n    allowance,\n    fetchAllowance\n  };\n};\n\n_s(useAllowance, \"u7mYh8t6R2JO/DOGvSuBZ2ES7Cc=\", false, function () {\n  return [useWeb3React];\n});\n\nexport default useAllowance;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/hooks/useAllowance.ts"],"names":["useCallback","useEffect","useState","useWeb3React","useAllowance","token","spender","pendingApproval","allowance","setAllowance","account","fetchAllowance","catch","err","console","warn","stack"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAeC,OAAf,EAAgCC,eAAhC,KAA8D;AAAA;;AACjF,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAY,IAAZ,CAA1C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,YAAY,EAAhC;AAEA,QAAMQ,cAAc,GAAGX,WAAW,CAAC,YAAY;AAC7C,UAAMQ,SAAS,GAAG,MAAMH,KAAK,CAACG,SAAN,CAAgBE,OAAhB,EAAyBJ,OAAzB,CAAxB;AACAG,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAHiC,EAG/B,CAACE,OAAD,EAAUJ,OAAV,EAAmBD,KAAnB,EAA0BI,YAA1B,CAH+B,CAAlC;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,IAAIJ,OAAX,IAAsBD,KAA1B,EAAiC;AAC/BM,MAAAA,cAAc,GAAGC,KAAjB,CAAwBC,GAAD,IAASC,OAAO,CAACC,IAAR,CAAc,8BAA6BF,GAAG,CAACG,KAAM,EAArD,CAAhC;AACD;AACF,GAJQ,EAIN,CAACN,OAAD,EAAUJ,OAAV,EAAmBD,KAAnB,EAA0BE,eAA1B,EAA2CI,cAA3C,CAJM,CAAT;AAMA,SAAO;AAAEH,IAAAA,SAAF;AAAaG,IAAAA;AAAb,GAAP;AACD,CAhBD;;GAAMP,Y;UAEgBD,Y;;;AAgBtB,eAAeC,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport ERC20 from '../diamondhand/ERC20';\nimport { useWeb3React } from '@web3-react/core';\n\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\n  const [allowance, setAllowance] = useState<BigNumber>(null);\n  const { account } = useWeb3React();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token, setAllowance]);\n\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch((err) => console.warn(`Failed to fetch allowance: ${err.stack}`));\n    }\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\n\n  return { allowance, fetchAllowance };\n};\n\nexport default useAllowance;\n"]},"metadata":{},"sourceType":"module"}