{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/PeepoAvax/src/components/CountdownClock/CountdownClockWithDay.tsx\",\n    _s = $RefreshSig$();\n\nimport intervalToDuration from 'date-fns/intervalToDuration';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useInterval from 'src/hooks/useInterval';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountdownClockWithDays = ({\n  to,\n  fontSize,\n  fontWeight\n}) => {\n  _s();\n\n  const [value, setValue] = useState({\n    d: '--',\n    h: '--',\n    m: '--',\n    s: '--'\n  });\n  const update = useCallback(() => {\n    const now = new Date();\n\n    if (to < now) {\n      setValue({\n        d: '00',\n        h: '00',\n        m: '00',\n        s: '00'\n      });\n      return;\n    }\n\n    if (to) {\n      const duration = intervalToDuration({\n        start: now,\n        end: to\n      });\n      setValue({\n        d: duration.days + '',\n        h: padNumber(duration.hours),\n        m: padNumber(duration.minutes),\n        s: padNumber(duration.seconds)\n      });\n    }\n  }, [to]);\n  useEffect(() => update(), [update]);\n  useInterval(update, 1000);\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    children: [/*#__PURE__*/_jsxDEV(StyledSpan, {\n      className: \"extra\",\n      children: [value.d, \" day\", parseInt(value.d) > 1 ? 's' : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSpan, {\n      children: value.h\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyleSeparator, {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSpan, {\n      children: value.m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyleSeparator, {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSpan, {\n      children: value.s\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountdownClockWithDays, \"7FdyifysiprP++6a2EgMeAnCnDg=\", false, function () {\n  return [useInterval];\n});\n\n_c = CountdownClockWithDays;\n\nconst padNumber = (s, length = 2, char = '0') => {\n  const str = s.toString();\n  return str.length >= length ? str : char.repeat(length - str.length) + str;\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: ${({\n  fontSize\n}) => fontSize || `28px`};\n  font-weight: ${({\n  fontWeight\n}) => fontWeight || 700};\n`;\n_c2 = StyledContainer;\nconst StyledSpan = styled.span`\n  margin: 0 5px;\n  min-width: 25px;\n  &.extra {\n    width: auto;\n    margin-right: 10px;\n  }\n`;\n_c3 = StyledSpan;\nconst StyleSeparator = styled.span`\n  margin-bottom: 5px;\n  min-width: 25px;\n  text-align: center;\n`;\n_c4 = StyleSeparator;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CountdownClockWithDays\");\n$RefreshReg$(_c2, \"StyledContainer\");\n$RefreshReg$(_c3, \"StyledSpan\");\n$RefreshReg$(_c4, \"StyleSeparator\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/PeepoAvax/src/components/CountdownClock/CountdownClockWithDay.tsx"],"names":["intervalToDuration","React","useCallback","useEffect","useState","useInterval","styled","CountdownClockWithDays","to","fontSize","fontWeight","value","setValue","d","h","m","s","update","now","Date","duration","start","end","days","padNumber","hours","minutes","seconds","parseInt","length","char","str","toString","repeat","StyledContainer","div","StyledSpan","span","StyleSeparator"],"mappings":"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","sourcesContent":["import intervalToDuration from 'date-fns/intervalToDuration';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useInterval from 'src/hooks/useInterval';\nimport styled from 'styled-components';\nimport { CountdownClockProps } from './CountdownClock';\n\nexport const CountdownClockWithDays: React.FC<CountdownClockProps> = ({\n  to,\n  fontSize,\n  fontWeight,\n}) => {\n  const [value, setValue] = useState({ d: '--', h: '--', m: '--', s: '--' });\n  const update = useCallback(() => {\n    const now = new Date();\n\n    if (to < now) {\n      setValue({\n        d: '00',\n        h: '00',\n        m: '00',\n        s: '00',\n      });\n      return;\n    }\n\n    if (to) {\n      const duration = intervalToDuration({\n        start: now,\n        end: to,\n      });\n\n      setValue({\n        d: duration.days + '',\n        h: padNumber(duration.hours),\n        m: padNumber(duration.minutes),\n        s: padNumber(duration.seconds),\n      });\n    }\n  }, [to]);\n  useEffect(() => update(), [update]);\n  useInterval(update, 1000);\n\n  return (\n    <StyledContainer fontSize={fontSize} fontWeight={fontWeight}>\n      <StyledSpan className=\"extra\">\n        {value.d} day{parseInt(value.d) > 1 ? 's' : ''}\n      </StyledSpan>\n      <StyledSpan>{value.h}</StyledSpan>\n      <StyleSeparator>:</StyleSeparator>\n      <StyledSpan>{value.m}</StyledSpan>\n      <StyleSeparator>:</StyleSeparator>\n      <StyledSpan>{value.s}</StyledSpan>\n    </StyledContainer>\n  );\n};\n\nconst padNumber = (s: number, length = 2, char = '0') => {\n  const str = s.toString();\n  return str.length >= length ? str : char.repeat(length - str.length) + str;\n};\n\nconst StyledContainer = styled.div<{ fontSize?: string; fontWeight?: string }>`\n  display: flex;\n  align-items: center;\n  font-size: ${({ fontSize }) => fontSize || `28px`};\n  font-weight: ${({ fontWeight }) => fontWeight || 700};\n`;\n\nconst StyledSpan = styled.span`\n  margin: 0 5px;\n  min-width: 25px;\n  &.extra {\n    width: auto;\n    margin-right: 10px;\n  }\n`;\n\nconst StyleSeparator = styled.span`\n  margin-bottom: 5px;\n  min-width: 25px;\n  text-align: center;\n`;\n"]},"metadata":{},"sourceType":"module"}