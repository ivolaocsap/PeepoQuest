{"ast":null,"code":"import { createReducer, nanoid } from '@reduxjs/toolkit';\nimport { addPopup, removePopup, toggleWalletModal, toggleSettingsMenu, updateBlockNumber, hideInfoBox, setSlippageTolerance, connectToAccount, disconnectAccount, showInfoBox, acceptTerms, showLoading, hideLoading } from './actions';\nexport let ConnectorNames;\n\n(function (ConnectorNames) {\n  ConnectorNames[\"Injected\"] = \"Injected\";\n  ConnectorNames[\"WalletConnect\"] = \"WalletConnect\";\n  ConnectorNames[\"BSC\"] = \"bsc\";\n})(ConnectorNames || (ConnectorNames = {}));\n\nexport const initialState = {\n  blockNumber: {},\n  popupList: [],\n  infoBoxList: {},\n  walletModalOpen: false,\n  settingsMenuOpen: false,\n  slippageTolerance: 0.005,\n  account: undefined,\n  acceptedTerms: false,\n  loading: false\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}).addCase(toggleWalletModal, state => {\n  state.walletModalOpen = !state.walletModalOpen;\n}).addCase(toggleSettingsMenu, state => {\n  state.settingsMenuOpen = !state.settingsMenuOpen;\n}).addCase(addPopup, (state, {\n  payload: {\n    content,\n    key,\n    removeAfterMs = 8000\n  }\n}) => {\n  state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([{\n    key: key || nanoid(),\n    show: true,\n    content,\n    removeAfterMs\n  }]);\n}).addCase(removePopup, (state, {\n  payload: {\n    key\n  }\n}) => {\n  state.popupList.forEach(p => {\n    if (p.key === key) {\n      p.show = false;\n    }\n  });\n}).addCase(hideInfoBox, (state, {\n  payload: {\n    key\n  }\n}) => {\n  state.infoBoxList[key] = true;\n}).addCase(showInfoBox, (state, {\n  payload: {\n    key\n  }\n}) => {\n  state.infoBoxList[key] = false;\n}).addCase(hideLoading, state => {\n  state.loading = false;\n}).addCase(showLoading, state => {\n  state.loading = true;\n}).addCase(setSlippageTolerance, (state, {\n  payload: {\n    slippage\n  }\n}) => {\n  state.slippageTolerance = slippage;\n}).addCase(connectToAccount, (state, {\n  payload: {\n    account,\n    connector\n  }\n}) => {\n  state.account = account;\n  state.connector = connector;\n}).addCase(disconnectAccount, state => {\n  state.account = undefined;\n  state.connector = undefined;\n}).addCase(acceptTerms, state => {\n  state.acceptedTerms = true;\n}));","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/state/application/reducer.ts"],"names":["createReducer","nanoid","addPopup","removePopup","toggleWalletModal","toggleSettingsMenu","updateBlockNumber","hideInfoBox","setSlippageTolerance","connectToAccount","disconnectAccount","showInfoBox","acceptTerms","showLoading","hideLoading","ConnectorNames","initialState","blockNumber","popupList","infoBoxList","walletModalOpen","settingsMenuOpen","slippageTolerance","account","undefined","acceptedTerms","loading","builder","addCase","state","action","chainId","payload","Math","max","content","key","removeAfterMs","filter","popup","concat","show","forEach","p","slippage","connector"],"mappings":"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","sourcesContent":["import { createReducer, nanoid } from '@reduxjs/toolkit';\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber,\n  hideInfoBox,\n  setSlippageTolerance,\n  connectToAccount,\n  disconnectAccount,\n  showInfoBox,\n  acceptTerms,\n  showLoading,\n  hideLoading,\n} from './actions';\n\ntype PopupList = Array<{\n  key: string;\n  show: boolean;\n  content: PopupContent;\n  removeAfterMs: number | null;\n}>;\n\ntype InfoBoxList = {\n  [key: string]: boolean;\n};\n\nexport enum ConnectorNames {\n  Injected = 'Injected',\n  WalletConnect = 'WalletConnect',\n  BSC = 'bsc',\n}\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number };\n  popupList: PopupList;\n  infoBoxList: InfoBoxList;\n  walletModalOpen: boolean;\n  settingsMenuOpen: boolean;\n  slippageTolerance: number;\n  acceptedTerms: boolean;\n  account: string;\n  connector?: ConnectorNames;\n  loading: boolean;\n}\n\nexport const initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  infoBoxList: {},\n  walletModalOpen: false,\n  settingsMenuOpen: false,\n  slippageTolerance: 0.005,\n  account: undefined,\n  acceptedTerms: false,\n  loading: false,\n};\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload;\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber;\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n      }\n    })\n    .addCase(toggleWalletModal, (state) => {\n      state.walletModalOpen = !state.walletModalOpen;\n    })\n    .addCase(toggleSettingsMenu, (state) => {\n      state.settingsMenuOpen = !state.settingsMenuOpen;\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 8000 } }) => {\n      state.popupList = (key\n        ? state.popupList.filter((popup) => popup.key !== key)\n        : state.popupList\n      ).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n        },\n      ]);\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach((p) => {\n        if (p.key === key) {\n          p.show = false;\n        }\n      });\n    })\n    .addCase(hideInfoBox, (state, { payload: { key } }) => {\n      state.infoBoxList[key] = true;\n    })\n    .addCase(showInfoBox, (state, { payload: { key } }) => {\n      state.infoBoxList[key] = false;\n    })\n    .addCase(hideLoading, (state) => {\n      state.loading = false;\n    })\n    .addCase(showLoading, (state) => {\n      state.loading = true;\n    })\n    .addCase(setSlippageTolerance, (state, { payload: { slippage } }) => {\n      state.slippageTolerance = slippage;\n    })\n    .addCase(connectToAccount, (state, { payload: { account, connector } }) => {\n      state.account = account;\n      state.connector = connector;\n    })\n    .addCase(disconnectAccount, (state) => {\n      state.account = undefined;\n      state.connector = undefined;\n    })\n    .addCase(acceptTerms, (state) => {\n      state.acceptedTerms = true;\n    }),\n);\n"]},"metadata":{},"sourceType":"module"}