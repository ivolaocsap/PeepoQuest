{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useContext, useRef } from 'react';\nimport { Context } from '../contexts/Modals';\n\nconst useModal = (modal, id, backdropClick = true) => {\n  _s();\n\n  const {\n    onDismiss,\n    onPresent\n  } = useContext(Context);\n  const ref = useRef(id);\n  const handlePresent = useCallback(() => {\n    modal;\n    ref.current = onPresent(modal, backdropClick);\n  }, [backdropClick, modal, onPresent]);\n  const handleDismiss = useCallback(() => {\n    onDismiss(ref.current);\n  }, [onDismiss]);\n  return [handlePresent, handleDismiss];\n};\n\n_s(useModal, \"/F+v005Lwc2d+D2SWvl6RVR2Jak=\");\n\nexport default useModal;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/hooks/useModal.ts"],"names":["useCallback","useContext","useRef","Context","useModal","modal","id","backdropClick","onDismiss","onPresent","ref","handlePresent","current","handleDismiss"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,QAAgD,OAAhD;AAEA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAA0BC,EAA1B,EAAuCC,aAAa,GAAG,IAAvD,KAAgE;AAAA;;AAC/E,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BR,UAAU,CAACE,OAAD,CAA3C;AACA,QAAMO,GAAG,GAAGR,MAAM,CAASI,EAAT,CAAlB;AAEA,QAAMK,aAAa,GAAGX,WAAW,CAAC,MAAM;AACtCK,IAAAA,KAAK;AACLK,IAAAA,GAAG,CAACE,OAAJ,GAAcH,SAAS,CAACJ,KAAD,EAAQE,aAAR,CAAvB;AACD,GAHgC,EAG9B,CAACA,aAAD,EAAgBF,KAAhB,EAAuBI,SAAvB,CAH8B,CAAjC;AAKA,QAAMI,aAAa,GAAGb,WAAW,CAAC,MAAM;AACtCQ,IAAAA,SAAS,CAACE,GAAG,CAACE,OAAL,CAAT;AACD,GAFgC,EAE9B,CAACJ,SAAD,CAF8B,CAAjC;AAIA,SAAO,CAACG,aAAD,EAAgBE,aAAhB,CAAP;AACD,CAdD;;GAAMT,Q;;AAgBN,eAAeA,QAAf","sourcesContent":["import { useCallback, useContext, useRef } from 'react';\n\nimport { Context } from '../contexts/Modals';\n\nconst useModal = (modal?: React.ReactNode, id?: string, backdropClick = true) => {\n  const { onDismiss, onPresent } = useContext(Context);\n  const ref = useRef<string>(id);\n\n  const handlePresent = useCallback(() => {\n    modal;\n    ref.current = onPresent(modal, backdropClick);\n  }, [backdropClick, modal, onPresent]);\n\n  const handleDismiss = useCallback(() => {\n    onDismiss(ref.current);\n  }, [onDismiss]);\n\n  return [handlePresent, handleDismiss];\n};\n\nexport default useModal;\n"]},"metadata":{},"sourceType":"module"}