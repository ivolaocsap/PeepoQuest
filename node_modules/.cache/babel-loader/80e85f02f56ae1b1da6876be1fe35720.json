{"ast":null,"code":"import{useCallback,useMemo}from'react';import{addPopup,removePopup,toggleWalletModal,toggleSettingsMenu,hideInfoBox,setSlippageTolerance,connectToAccount,disconnectAccount,showInfoBox,acceptTerms,showLoading,hideLoading}from'./actions';import{useSelector,useDispatch}from'react-redux';import{useWeb3React}from'@web3-react/core';export function useBlockNumber(){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;return useSelector(function(state){return state.application.blockNumber[chainId!==null&&chainId!==void 0?chainId:-1];});}export function useWalletModalOpen(){return useSelector(function(state){return state.application.walletModalOpen;});}export function useWalletModalToggle(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleWalletModal());},[dispatch]);}export function useSettingsMenuOpen(){return useSelector(function(state){return state.application.settingsMenuOpen;});}export function useToggleSettingsMenu(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleSettingsMenu());},[dispatch]);}// returns a function that allows adding a popup\nexport function useAddPopup(){var dispatch=useDispatch();return useCallback(function(content,key){dispatch(addPopup({content:content,key:key}));},[dispatch]);}// returns a function that allows removing a popup via its key\nexport function useRemovePopup(){var dispatch=useDispatch();return useCallback(function(key){dispatch(removePopup({key:key}));},[dispatch]);}// get the list of active popups\nexport function useActivePopups(){var list=useSelector(function(state){return state.application.popupList;});return useMemo(function(){return list.filter(function(item){return item.show;});},[list]);}// check if infobox was previously hidden\nexport function useIsHiddenInfoBox(key){var list=useSelector(function(state){return state.application.infoBoxList;});return useMemo(function(){var _list$key;return(_list$key=list[key])!==null&&_list$key!==void 0?_list$key:false;},[key,list]);}// hide Infobox for one session\nexport function useHideInfoBox(){var dispatch=useDispatch();return useCallback(function(key){dispatch(hideInfoBox({key:key}));},[dispatch]);}// hide Infobox for one session\nexport function useShowInfoBox(){var dispatch=useDispatch();return useCallback(function(key){dispatch(showInfoBox({key:key}));},[dispatch]);}export function useSetSlipageTolerance(){var dispatch=useDispatch();return useCallback(function(slippage){dispatch(setSlippageTolerance({slippage:slippage}));},[dispatch]);}export function useGetSlippageTolerance(){var slippage=useSelector(function(state){return state.application.slippageTolerance;});return slippage;}export function useGetConnectedAccount(){return useSelector(function(state){return state.application.account;});}export function useSetConnectedAccount(){var dispatch=useDispatch();return useCallback(function(account,connector){dispatch(connectToAccount({account:account,connector:connector}));},[dispatch]);}export function useDisconnectAccount(){var dispatch=useDispatch();return useCallback(function(){dispatch(disconnectAccount());},[dispatch]);}export function useAcceptTerms(){var dispatch=useDispatch();return useCallback(function(){dispatch(acceptTerms());},[dispatch]);}export function useIsAcceptedTerms(){var accepted=useSelector(function(state){return state.application.acceptedTerms;});return accepted;}export function useSavedConnector(){var connector=useSelector(function(state){return state.application.connector;});return connector;}export function useHideLoading(){var dispatch=useDispatch();return useCallback(function(){dispatch(hideLoading());},[dispatch]);}export function useShowLoading(){var dispatch=useDispatch();return useCallback(function(){dispatch(showLoading());},[dispatch]);}export function useLoading(){return useSelector(function(state){return state.application.loading;});}","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/state/application/hooks.ts"],"names":["useCallback","useMemo","addPopup","removePopup","toggleWalletModal","toggleSettingsMenu","hideInfoBox","setSlippageTolerance","connectToAccount","disconnectAccount","showInfoBox","acceptTerms","showLoading","hideLoading","useSelector","useDispatch","useWeb3React","useBlockNumber","chainId","state","application","blockNumber","useWalletModalOpen","walletModalOpen","useWalletModalToggle","dispatch","useSettingsMenuOpen","settingsMenuOpen","useToggleSettingsMenu","useAddPopup","content","key","useRemovePopup","useActivePopups","list","popupList","filter","item","show","useIsHiddenInfoBox","infoBoxList","useHideInfoBox","useShowInfoBox","useSetSlipageTolerance","slippage","useGetSlippageTolerance","slippageTolerance","useGetConnectedAccount","account","useSetConnectedAccount","connector","useDisconnectAccount","useAcceptTerms","useIsAcceptedTerms","accepted","acceptedTerms","useSavedConnector","useHideLoading","useShowLoading","useLoading","loading"],"mappings":"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","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  hideInfoBox,\n  setSlippageTolerance,\n  connectToAccount,\n  disconnectAccount,\n  showInfoBox,\n  acceptTerms,\n  showLoading,\n  hideLoading,\n} from './actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../index';\nimport { useWeb3React } from '@web3-react/core';\nimport { ConnectorNames } from './reducer';\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useWeb3React();\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\n}\n\nexport function useWalletModalOpen(): boolean {\n  return useSelector((state: AppState) => state.application.walletModalOpen);\n}\n\nexport function useWalletModalToggle(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch]);\n}\n\nexport function useSettingsMenuOpen(): boolean {\n  return useSelector((state: AppState) => state.application.settingsMenuOpen);\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch]);\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch();\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }));\n    },\n    [dispatch],\n  );\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch();\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }));\n    },\n    [dispatch],\n  );\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList);\n  return useMemo(() => list.filter((item) => item.show), [list]);\n}\n\n// check if infobox was previously hidden\nexport function useIsHiddenInfoBox(key: string): boolean {\n  const list = useSelector((state: AppState) => state.application.infoBoxList);\n  return useMemo(() => list[key] ?? false, [key, list]);\n}\n\n// hide Infobox for one session\nexport function useHideInfoBox(): (key: string) => void {\n  const dispatch = useDispatch();\n  return useCallback(\n    (key: string) => {\n      dispatch(hideInfoBox({ key }));\n    },\n    [dispatch],\n  );\n}\n// hide Infobox for one session\nexport function useShowInfoBox(): (key: string) => void {\n  const dispatch = useDispatch();\n  return useCallback(\n    (key: string) => {\n      dispatch(showInfoBox({ key }));\n    },\n    [dispatch],\n  );\n}\n\nexport function useSetSlipageTolerance(): (slippage: number) => void {\n  const dispatch = useDispatch();\n  return useCallback(\n    (slippage: number) => {\n      dispatch(setSlippageTolerance({ slippage }));\n    },\n    [dispatch],\n  );\n}\n\nexport function useGetSlippageTolerance(): number {\n  const slippage = useSelector((state: AppState) => state.application.slippageTolerance);\n  return slippage;\n}\n\nexport function useGetConnectedAccount(): string {\n  return useSelector((state: AppState) => state.application.account);\n}\n\nexport function useSetConnectedAccount(): (\n  account: string,\n  connector?: ConnectorNames,\n) => void {\n  const dispatch = useDispatch();\n  return useCallback(\n    (account: string, connector?: ConnectorNames) => {\n      dispatch(connectToAccount({ account, connector: connector }));\n    },\n    [dispatch],\n  );\n}\n\nexport function useDisconnectAccount(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => {\n    dispatch(disconnectAccount());\n  }, [dispatch]);\n}\n\nexport function useAcceptTerms(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => {\n    dispatch(acceptTerms());\n  }, [dispatch]);\n}\n\nexport function useIsAcceptedTerms(): boolean {\n  const accepted = useSelector((state: AppState) => state.application.acceptedTerms);\n  return accepted;\n}\n\nexport function useSavedConnector() {\n  const connector = useSelector((state: AppState) => state.application.connector);\n  return connector;\n}\n\nexport function useHideLoading(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => {\n    dispatch(hideLoading());\n  }, [dispatch]);\n}\n\nexport function useShowLoading(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => {\n    dispatch(showLoading());\n  }, [dispatch]);\n}\n\nexport function useLoading() {\n  return useSelector((state: AppState) => state.application.loading);\n}\n"]},"metadata":{},"sourceType":"module"}