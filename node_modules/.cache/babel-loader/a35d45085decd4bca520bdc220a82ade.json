{"ast":null,"code":"import _toConsumableArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ivopascoal/Desktop/cuffies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useCallback,useContext,useEffect,useRef,useState}from'react';import useDiamondHand from'../../hooks/useDiamondHand';import useIsWindowVisible from'../../hooks/useIsWindowVisible';import ERC20 from'../../diamondhand/ERC20';import{useBlockNumber}from'../../state/application/hooks';import{useConfiguration}from'../ConfigProvider/ConfigProvider';import{useWeb3React}from'@web3-react/core';import{jsx as _jsx}from\"react/jsx-runtime\";var GetBalanceContext=/*#__PURE__*/createContext(null);var SetListeningTokenContext=/*#__PURE__*/createContext(null);export var AccountBalanceProvider=function AccountBalanceProvider(_ref){var children=_ref.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),balance=_useState2[0],setBalance=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),listeningToken=_useState4[0],_setListeningToken=_useState4[1];var _useConfiguration=useConfiguration(),addresses=_useConfiguration.addresses;var isWindowVisible=useIsWindowVisible();var blockNumber=useBlockNumber();var CuffiesBank=useDiamondHand();var lastCheckedBlockNumber=useRef();var _useWeb3React=useWeb3React(),provider=_useWeb3React.library;var _useWeb3React2=useWeb3React(),account=_useWeb3React2.account;var getBalance=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!account||!(addresses===null||addresses===void 0?void 0:addresses.Multicall))){_context.next=2;break;}return _context.abrupt(\"return\",{});case 2:_context.next=4;return ERC20.multicallTokenBalance(provider,addresses.Multicall,listeningToken.map(function(t){return t.address;}),account);case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},_callee);})),[account,addresses===null||addresses===void 0?void 0:addresses.Multicall,listeningToken,provider]);useEffect(function(){var mounted=true;if(!(CuffiesBank===null||CuffiesBank===void 0?void 0:CuffiesBank.isUnlocked)){setBalance({});}else if(isWindowVisible){if(lastCheckedBlockNumber.current===blockNumber){return;}getBalance().then(function(res){if(mounted){setBalance(res);}});}return function(){mounted=false;};},[blockNumber,CuffiesBank,CuffiesBank===null||CuffiesBank===void 0?void 0:CuffiesBank.isUnlocked,listeningToken,isWindowVisible,getBalance]);var setListeningToken=useCallback(function(token){if(!token){return;}_setListeningToken(function(x){if(x.some(function(t){return t.symbol===token.symbol;})){return x;}return[].concat(_toConsumableArray(x),[token]);});},[]);return/*#__PURE__*/_jsx(GetBalanceContext.Provider,{value:balance,children:/*#__PURE__*/_jsx(SetListeningTokenContext.Provider,{value:setListeningToken,children:children})});};export var useTokenBalance=function useTokenBalance(token){var setListeningToken=useContext(SetListeningTokenContext);useEffect(function(){if(token){setListeningToken(token);}},[setListeningToken,token]);var context=useContext(GetBalanceContext);if(context==null||setListeningToken==null){throw new Error('BalanceContextProvider not found');}return token?context[token.address]:null;};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/cuffies/src/contexts/AccountBalanceProvider/AccountBalanceProvider.tsx"],"names":["createContext","useCallback","useContext","useEffect","useRef","useState","useDiamondHand","useIsWindowVisible","ERC20","useBlockNumber","useConfiguration","useWeb3React","GetBalanceContext","SetListeningTokenContext","AccountBalanceProvider","children","balance","setBalance","listeningToken","_setListeningToken","addresses","isWindowVisible","blockNumber","CuffiesBank","lastCheckedBlockNumber","provider","library","account","getBalance","Multicall","multicallTokenBalance","map","t","address","mounted","isUnlocked","current","then","res","setListeningToken","token","x","some","symbol","useTokenBalance","context","Error"],"mappings":"qmBACA,OACEA,aADF,CAGEC,WAHF,CAIEC,UAJF,CAKEC,SALF,CAMEC,MANF,CAOEC,QAPF,KAQO,OARP,CASA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,OAASC,cAAT,KAA+B,+BAA/B,CACA,OAASC,gBAAT,KAAiC,kCAAjC,CACA,OAASC,YAAT,KAA6B,kBAA7B,C,2CAGA,GAAMC,CAAAA,iBAAiB,cAAGZ,aAAa,CAAe,IAAf,CAAvC,CACA,GAAMa,CAAAA,wBAAwB,cAAGb,aAAa,CAAyB,IAAzB,CAA9C,CAEA,MAAO,IAAMc,CAAAA,sBAAyD,CAAG,QAA5DA,CAAAA,sBAA4D,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACzF,cAA8BV,QAAQ,CAAe,EAAf,CAAtC,wCAAOW,OAAP,eAAgBC,UAAhB,eACA,eAA6CZ,QAAQ,CAAU,EAAV,CAArD,yCAAOa,cAAP,eAAuBC,kBAAvB,eACA,sBAAsBT,gBAAgB,EAAtC,CAAQU,SAAR,mBAAQA,SAAR,CACA,GAAMC,CAAAA,eAAe,CAAGd,kBAAkB,EAA1C,CACA,GAAMe,CAAAA,WAAW,CAAGb,cAAc,EAAlC,CACA,GAAMc,CAAAA,WAAW,CAAGjB,cAAc,EAAlC,CACA,GAAMkB,CAAAA,sBAAsB,CAAGpB,MAAM,EAArC,CACA,kBAA8BO,YAAY,EAA1C,CAAiBc,QAAjB,eAAQC,OAAR,CACA,mBAAoBf,YAAY,EAAhC,CAAQgB,OAAR,gBAAQA,OAAR,CAEA,GAAMC,CAAAA,UAAU,CAAG3B,WAAW,sEAAC,wIACzB,CAAC0B,OAAD,EAAY,EAACP,SAAD,SAACA,SAAD,iBAACA,SAAS,CAAES,SAAZ,CADa,0DAEpB,EAFoB,+BAIhBrB,CAAAA,KAAK,CAACsB,qBAAN,CACXL,QADW,CAEXL,SAAS,CAACS,SAFC,CAGXX,cAAc,CAACa,GAAf,CAAmB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAT,EAAnB,CAHW,CAIXN,OAJW,CAJgB,6GAAD,GAU3B,CAACA,OAAD,CAAUP,SAAV,SAAUA,SAAV,iBAAUA,SAAS,CAAES,SAArB,CAAgCX,cAAhC,CAAgDO,QAAhD,CAV2B,CAA9B,CAYAtB,SAAS,CAAC,UAAM,CACd,GAAI+B,CAAAA,OAAO,CAAG,IAAd,CACA,GAAI,EAACX,WAAD,SAACA,WAAD,iBAACA,WAAW,CAAEY,UAAd,CAAJ,CAA8B,CAC5BlB,UAAU,CAAC,EAAD,CAAV,CACD,CAFD,IAEO,IAAII,eAAJ,CAAqB,CAC1B,GAAIG,sBAAsB,CAACY,OAAvB,GAAmCd,WAAvC,CAAoD,CAClD,OACD,CAEDM,UAAU,GAAGS,IAAb,CAAkB,SAACC,GAAD,CAAS,CACzB,GAAIJ,OAAJ,CAAa,CACXjB,UAAU,CAACqB,GAAD,CAAV,CACD,CACF,CAJD,EAKD,CAED,MAAO,WAAM,CACXJ,OAAO,CAAG,KAAV,CACD,CAFD,CAGD,CAnBQ,CAmBN,CACDZ,WADC,CAEDC,WAFC,CAGDA,WAHC,SAGDA,WAHC,iBAGDA,WAAW,CAAEY,UAHZ,CAIDjB,cAJC,CAKDG,eALC,CAMDO,UANC,CAnBM,CAAT,CA4BA,GAAMW,CAAAA,iBAAiB,CAAGtC,WAAW,CAAC,SAACuC,KAAD,CAAkB,CACtD,GAAI,CAACA,KAAL,CAAY,CACV,OACD,CACDrB,kBAAkB,CAAC,SAACsB,CAAD,CAAO,CACxB,GAAIA,CAAC,CAACC,IAAF,CAAO,SAACV,CAAD,QAAOA,CAAAA,CAAC,CAACW,MAAF,GAAaH,KAAK,CAACG,MAA1B,EAAP,CAAJ,CAA8C,CAC5C,MAAOF,CAAAA,CAAP,CACD,CAED,mCAAWA,CAAX,GAAcD,KAAd,GACD,CANiB,CAAlB,CAOD,CAXoC,CAWlC,EAXkC,CAArC,CAaA,mBACE,KAAC,iBAAD,CAAmB,QAAnB,EAA4B,KAAK,CAAExB,OAAnC,uBACE,KAAC,wBAAD,CAA0B,QAA1B,EAAmC,KAAK,CAAEuB,iBAA1C,UACGxB,QADH,EADF,EADF,CAOD,CAvEM,CAyEP,MAAO,IAAM6B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACJ,KAAD,CAA6B,CAC1D,GAAMD,CAAAA,iBAAiB,CAAGrC,UAAU,CAACW,wBAAD,CAApC,CACAV,SAAS,CAAC,UAAM,CACd,GAAIqC,KAAJ,CAAW,CACTD,iBAAiB,CAACC,KAAD,CAAjB,CACD,CACF,CAJQ,CAIN,CAACD,iBAAD,CAAoBC,KAApB,CAJM,CAAT,CAMA,GAAMK,CAAAA,OAAO,CAAG3C,UAAU,CAACU,iBAAD,CAA1B,CAEA,GAAIiC,OAAO,EAAI,IAAX,EAAmBN,iBAAiB,EAAI,IAA5C,CAAkD,CAChD,KAAM,IAAIO,CAAAA,KAAJ,CAAU,kCAAV,CAAN,CACD,CAED,MAAON,CAAAA,KAAK,CAAGK,OAAO,CAACL,KAAK,CAACP,OAAP,CAAV,CAA4B,IAAxC,CACD,CAfM","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport useDiamondHand from '../../hooks/useDiamondHand';\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\nimport ERC20 from '../../diamondhand/ERC20';\nimport { useBlockNumber } from '../../state/application/hooks';\nimport { useConfiguration } from '../ConfigProvider/ConfigProvider';\nimport { useWeb3React } from '@web3-react/core';\n\ntype BalanceState = Record<string, BigNumber>;\nconst GetBalanceContext = createContext<BalanceState>(null);\nconst SetListeningTokenContext = createContext<(token: ERC20) => void>(null);\n\nexport const AccountBalanceProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [balance, setBalance] = useState<BalanceState>({});\n  const [listeningToken, _setListeningToken] = useState<ERC20[]>([]);\n  const { addresses } = useConfiguration();\n  const isWindowVisible = useIsWindowVisible();\n  const blockNumber = useBlockNumber();\n  const CuffiesBank = useDiamondHand();\n  const lastCheckedBlockNumber = useRef<number>();\n  const { library: provider } = useWeb3React();\n  const { account } = useWeb3React();\n\n  const getBalance = useCallback(async () => {\n    if (!account || !addresses?.Multicall) {\n      return {};\n    }\n    return await ERC20.multicallTokenBalance(\n      provider,\n      addresses.Multicall,\n      listeningToken.map((t) => t.address),\n      account,\n    );\n  }, [account, addresses?.Multicall, listeningToken, provider]);\n\n  useEffect(() => {\n    let mounted = true;\n    if (!CuffiesBank?.isUnlocked) {\n      setBalance({});\n    } else if (isWindowVisible) {\n      if (lastCheckedBlockNumber.current === blockNumber) {\n        return;\n      }\n\n      getBalance().then((res) => {\n        if (mounted) {\n          setBalance(res);\n        }\n      });\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [\n    blockNumber,\n    CuffiesBank,\n    CuffiesBank?.isUnlocked,\n    listeningToken,\n    isWindowVisible,\n    getBalance,\n  ]);\n\n  const setListeningToken = useCallback((token: ERC20) => {\n    if (!token) {\n      return;\n    }\n    _setListeningToken((x) => {\n      if (x.some((t) => t.symbol === token.symbol)) {\n        return x;\n      }\n\n      return [...x, token];\n    });\n  }, []);\n\n  return (\n    <GetBalanceContext.Provider value={balance}>\n      <SetListeningTokenContext.Provider value={setListeningToken}>\n        {children}\n      </SetListeningTokenContext.Provider>\n    </GetBalanceContext.Provider>\n  );\n};\n\nexport const useTokenBalance = (token: ERC20): BigNumber => {\n  const setListeningToken = useContext(SetListeningTokenContext);\n  useEffect(() => {\n    if (token) {\n      setListeningToken(token);\n    }\n  }, [setListeningToken, token]);\n\n  const context = useContext(GetBalanceContext);\n\n  if (context == null || setListeningToken == null) {\n    throw new Error('BalanceContextProvider not found');\n  }\n\n  return token ? context[token.address] : null;\n};\n"]},"metadata":{},"sourceType":"module"}